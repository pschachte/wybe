======================================================================
AFTER BUILDING MAIN:
 Module 
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use command_line
                    use foo
                    use wybe
                    use wybe.array
                    use wybe.bool
                    use wybe.c_string
                    use wybe.char
                    use wybe.comparison
                    use wybe.control
                    use wybe.count
                    use wybe.float
                    use wybe.int
                    use wybe.io
                    use wybe.list
                    use wybe.machine_word
                    use wybe.memory_management
                    use wybe.phantom
                    use wybe.predicate
                    use wybe.range
                    use wybe.string
  resources       : 
  procs           : 

module top-level code > {terminal,inline,impure} (0 calls)
0: .<0>
(%argc##0:wybe.int, %argv##0:wybe.array.raw_array, %?exit_code##0:wybe.int)<{}; {<<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(~%argc##0:wybe.int, <<command_line.argc>>:wybe.int)
    foreign lpvm store(~%argv##0:wybe.array.raw_array, <<command_line.argv>>:wybe.array.raw_array)
    foreign c {impure} gc_init @memory_management:15:1
    foreign lpvm store(0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:13:5
    command_line.<0><{<<command_line.argc>>, <<command_line.argv>>}; {<<command_line.arguments>>, <<command_line.command>>, <<command_line.exit_code>>}; {}> #2
    foo.<0><{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3
    foreign lpvm load(<<command_line.exit_code>>:wybe.int, ?%exit_code##0:wybe.int)
    foreign c {semipure,terminal} exit(exit_code##0:wybe.int)

LLVM code       : None

--------------------------------------------------
 Module command_line
  representation  : (not a type)
  public submods  : 
  public resources: argc: command_line.argc
                    arguments: command_line.arguments
                    argv: command_line.argv
                    command: command_line.command
                    exit_code: command_line.exit_code
  public procs    : command_line.<0>
                    command_line.set_exit_code<0>
  imports         : use wybe
  resources       : argc: fromList [(command_line.argc,wybe.int @command_line:6:5)]
                    arguments: fromList [(command_line.arguments,wybe.array(wybe.c_string) = array(argc @command_line:11:48, argv @command_line:11:54) @command_line:11:42 @command_line:11:5)]
                    argv: fromList [(command_line.argv,wybe.array.raw_array @command_line:7:5)]
                    command: fromList [(command_line.command,wybe.c_string = c"" @command_line:15:33 @command_line:15:5)]
                    exit_code: fromList [(command_line.exit_code,wybe.int = 0 @command_line:23:30 @command_line:23:5)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: command_line.<0>
()<{<<command_line.argc>>, <<command_line.argv>>}; {<<command_line.arguments>>, <<command_line.command>>, <<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(1,(wybe.array.[|]<0>,fromList [NonAliasedParamCond 2 []]))]
    foreign lpvm load(<<command_line.argc>>:wybe.int, ?%tmp#3##0:wybe.int) @command_line:11:42
    foreign lpvm load(<<command_line.argv>>:wybe.array.raw_array, ?%tmp#5##0:wybe.array.raw_array) @command_line:11:42
    foreign lpvm alloc(16:wybe.int, ?tmp#12##0:wybe.array(T)) @array:8:21
    foreign lpvm mutate(~tmp#12##0:wybe.array(T), ?tmp#13##0:wybe.array(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#3##0:wybe.int) @array:8:21
    foreign lpvm mutate(~tmp#13##0:wybe.array(T), ?tmp#0##0:wybe.array(wybe.c_string), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#5##0:wybe.array.raw_array) @array:8:21
    foreign lpvm store(tmp#0##0:wybe.array(wybe.c_string), <<command_line.arguments>>:wybe.array(wybe.c_string)) @command_line:11:5
    foreign lpvm store(c"":wybe.c_string, <<command_line.command>>:wybe.c_string) @command_line:15:5
    wybe.array.[|]<0>[785a827a1b](?command##2:wybe.c_string, ?arguments##3:wybe.array(wybe.c_string), ~tmp#0##0:wybe.array(wybe.c_string), ?tmp#9##0:wybe.bool) #1 @command_line:17:6
    case ~tmp#9##0:wybe.bool of
    0:
        foreign c {terminal,semipure} error_exit(c"command_line:18:15":wybe.c_string, c"Erroneous program argument vector":wybe.c_string) @control:22:5

    1:
        foreign lpvm store(~%arguments##3:wybe.array(wybe.c_string), <<command_line.arguments>>:wybe.array(wybe.c_string)) @command_line:17:6
        foreign lpvm store(~%command##2:wybe.c_string, <<command_line.command>>:wybe.c_string) @command_line:17:6
        foreign lpvm store(0:wybe.int, <<command_line.exit_code>>:wybe.int) @command_line:23:5



proc set_exit_code > public {inline} (0 calls)
0: command_line.set_exit_code<0>
set_exit_code(code##0:wybe.int)<{}; {<<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(~code##0:wybe.int, <<command_line.exit_code>>:wybe.int) @command_line:28:6

  LLVM code       :

; ModuleID = 'command_line'


 


@"resource#command_line.argc" =    global i64 undef


@"resource#command_line.arguments" =    global i64 undef


@"resource#command_line.argv" =    global i64 undef


@"resource#command_line.command" =    global i64 undef


@"resource#command_line.exit_code" =    global i64 undef


@command_line.0 =    constant [1 x i8] c"\00"


@command_line.2 =    constant [34 x i8] c"Erroneous program argument vector\00"


@command_line.1 =    constant [19 x i8] c"command_line:18:15\00"


declare external ccc  void @error_exit(i64, i64)    


declare external fastcc  {i64, i64, i1} @"wybe.array.[|]<0>[785a827a1b]"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"command_line.<0>"()    {
entry:
  %0 = load  i64, i64* @"resource#command_line.argc" 
  %1 = load  i64, i64* @"resource#command_line.argv" 
  %2 = trunc i64 16 to i32  
  %3 = tail call ccc  i8*  @wybe_malloc(i32  %2)  
  %4 = ptrtoint i8* %3 to i64 
  %5 = inttoptr i64 %4 to i64* 
  store  i64 %0, i64* %5 
  %6 = add   i64 %4, 8 
  %7 = inttoptr i64 %6 to i64* 
  store  i64 %1, i64* %7 
  store  i64 %4, i64* @"resource#command_line.arguments" 
  store  i64 ptrtoint (i8* getelementptr inbounds ([1 x i8], [1 x i8]* @command_line.0, i32 0, i32 0) to i64), i64* @"resource#command_line.command" 
  %8 = tail call fastcc  {i64, i64, i1}  @"wybe.array.[|]<0>[785a827a1b]"(i64  %4)  
  %9 = extractvalue {i64, i64, i1} %8, 0 
  %10 = extractvalue {i64, i64, i1} %8, 1 
  %11 = extractvalue {i64, i64, i1} %8, 2 
  br i1 %11, label %if.then, label %if.else 
if.then:
  store  i64 %10, i64* @"resource#command_line.arguments" 
  store  i64 %9, i64* @"resource#command_line.command" 
  store  i64 0, i64* @"resource#command_line.exit_code" 
  ret void 
if.else:
  tail call ccc  void  @error_exit(i64  ptrtoint (i8* getelementptr inbounds ([19 x i8], [19 x i8]* @command_line.1, i32 0, i32 0) to i64), i64  ptrtoint (i8* getelementptr inbounds ([34 x i8], [34 x i8]* @command_line.2, i32 0, i32 0) to i64))  
  ret void 
}


define external fastcc  void @"command_line.set_exit_code<0>"(i64  %"code##0") alwaysinline   {
entry:
  store  i64 %"code##0", i64* @"resource#command_line.exit_code" 
  ret void 
}
--------------------------------------------------
 Module foo
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : foo.<0>
  imports         : use command_line
                    use wybe
  resources       : r: fromList [(foo.r,wybe.int @foo:5:1)]
                    s: fromList [(foo.s,wybe.int @foo:6:1)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: foo.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(25,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm load(<<foo.r>>:wybe.int, ?%tmp#87##0:wybe.int) @foo:11:1
    foreign lpvm load(<<foo.s>>:wybe.int, ?%tmp#88##0:wybe.int) @foo:11:1
    foreign lpvm store(7:wybe.int, <<foo.r>>:wybe.int) @foo:12:6
    foreign lpvm store(14:wybe.int, <<foo.s>>:wybe.int) @foo:13:6
    wybe.int.fmt<0>(42:wybe.int, ?tmp#2##0:wybe.string) #0 @foo:14:39
    wybe.int.fmt<0>(7:wybe.int, ?tmp#4##0:wybe.string) #1 @foo:14:47
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#4##0:wybe.string, ?tmp#3##0:wybe.string) #2 @foo:14:40
    wybe.string.,,<0>(~tmp#2##0:wybe.string, ~tmp#3##0:wybe.string, ?tmp#1##0:wybe.string) #3 @foo:14:39
    wybe.string.,,<0>("before conditional: x = ":wybe.string, ~tmp#1##0:wybe.string, ?tmp#0##0:wybe.string) #4 @foo:14:14
    wybe.string.print<0>[410bae77d3](~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#105##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#105##0:wybe.phantom, ?tmp#106##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#106##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.int.fmt<0>(42:wybe.int, ?tmp#7##0:wybe.string) #17 @foo:16:45
    wybe.int.fmt<0>(7:wybe.int, ?tmp#9##0:wybe.string) #18 @foo:16:53
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#9##0:wybe.string, ?tmp#8##0:wybe.string) #19 @foo:16:46
    wybe.string.,,<0>(~tmp#7##0:wybe.string, ~tmp#8##0:wybe.string, ?tmp#6##0:wybe.string) #20 @foo:16:45
    wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#6##0:wybe.string, ?tmp#5##0:wybe.string) #21 @foo:16:28
    wybe.string.print<0>[410bae77d3](~tmp#5##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#110##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#110##0:wybe.phantom, ?tmp#111##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#111##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foo.#cont#1<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #23


proc #cont#1 > (3 calls)
0: foo.#cont#1<0>
#cont#1(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#17##0:wybe.string) #0 @foo:18:38
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:18:46
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#19##0:wybe.string) #1 @foo:18:46
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#19##0:wybe.string, ?tmp#18##0:wybe.string) #2 @foo:18:39
    wybe.string.,,<0>(~tmp#17##0:wybe.string, ~tmp#18##0:wybe.string, ?tmp#11##0:wybe.string) #3 @foo:18:38
    wybe.string.,,<0>("after conditional; x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#10##0:wybe.string) #4 @foo:18:14
    wybe.string.print<0>(~tmp#10##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#103##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#103##0:wybe.phantom, ?tmp#104##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#104##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.string.,,<0>("before second conditional: x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#15##0:wybe.string) #10 @foo:20:14
    wybe.string.print<0>(~tmp#15##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#106##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#106##0:wybe.phantom, ?tmp#91##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#91##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(9:wybe.int, <<foo.r>>:wybe.int) @foo:21:11
    foo.nope2<0>(?x##1:wybe.int, ?tmp#101##0:wybe.bool) #12 @foo:21:19
    case ~tmp#101##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:21:11
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#11##0:wybe.string, ?tmp#20##0:wybe.string) #19 @foo:22:28
        wybe.string.print<0>[410bae77d3](~tmp#20##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#109##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#109##0:wybe.phantom, ?tmp#110##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#110##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#2<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21

    1:
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#112##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#112##0:wybe.phantom, ?tmp#113##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#113##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#2<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##1:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#2 > (2 calls)
0: foo.#cont#2<0>
#cont#2(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#32##0:wybe.string) #0 @foo:24:45
    foreign lpvm load(<<foo.r>>:wybe.int, ?%tmp#92##0:wybe.int) @foo:24:53
    wybe.int.fmt<0>(~tmp#92##0:wybe.int, ?tmp#34##0:wybe.string) #1 @foo:24:53
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#34##0:wybe.string, ?tmp#33##0:wybe.string) #2 @foo:24:46
    wybe.string.,,<0>(~tmp#32##0:wybe.string, ~tmp#33##0:wybe.string, ?tmp#26##0:wybe.string) #3 @foo:24:45
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#25##0:wybe.string) #4 @foo:24:14
    wybe.string.print<0>(~tmp#25##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#102##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#102##0:wybe.phantom, ?tmp#103##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#103##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.string.,,<0>("before third conditional: x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#30##0:wybe.string) #10 @foo:26:14
    wybe.string.print<0>(~tmp#30##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#105##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#105##0:wybe.phantom, ?tmp#94##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#94##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foo.nope2<0>(?r##3:wybe.int, ?tmp#100##0:wybe.bool) #12 @foo:27:20
    case ~tmp#100##0:wybe.bool of
    0:
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#26##0:wybe.string, ?tmp#35##0:wybe.string) #19 @foo:28:28
        wybe.string.print<0>[410bae77d3](~tmp#35##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#108##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#108##0:wybe.phantom, ?tmp#109##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#109##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#3<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21

    1:
        foreign lpvm store(~%r##3:wybe.int, <<foo.r>>:wybe.int) @foo:27:20
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#111##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#111##0:wybe.phantom, ?tmp#112##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#112##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#3<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 25:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#3 > (2 calls)
0: foo.#cont#3<0>
#cont#3(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(50,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(51,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#42##0:wybe.string) #0 @foo:30:44
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:30:52
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#44##0:wybe.string) #1 @foo:30:52
    wybe.string.,,<0>(", r = ":wybe.string, tmp#44##0:wybe.string, ?tmp#43##0:wybe.string) #2 @foo:30:45
    wybe.string.,,<0>(tmp#42##0:wybe.string, ~tmp#43##0:wybe.string, ?tmp#41##0:wybe.string) #3 @foo:30:44
    wybe.string.,,<0>("after third conditional; x = ":wybe.string, ~tmp#41##0:wybe.string, ?tmp#40##0:wybe.string) #4 @foo:30:14
    wybe.string.print<0>(~tmp#40##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #48 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#101##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#101##0:wybe.phantom, ?tmp#102##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#102##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.int.fmt<0>(y##0:wybe.int, ?tmp#50##0:wybe.string) #7 @foo:32:54
    foreign lpvm load(<<foo.s>>:wybe.int, ?%s##0:wybe.int) @foo:32:70
    wybe.int.fmt<0>(s##0:wybe.int, ?tmp#55##0:wybe.string) #9 @foo:32:70
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#55##0:wybe.string, ?tmp#54##0:wybe.string) #10 @foo:32:63
    wybe.string.,,<0>(~tmp#44##0:wybe.string, ~tmp#54##0:wybe.string, ?tmp#52##0:wybe.string) #11 @foo:32:62
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#52##0:wybe.string, ?tmp#51##0:wybe.string) #12 @foo:32:55
    wybe.string.,,<0>(~tmp#50##0:wybe.string, ~tmp#51##0:wybe.string, ?tmp#49##0:wybe.string) #13 @foo:32:54
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#49##0:wybe.string, ?tmp#48##0:wybe.string) #14 @foo:32:47
    wybe.string.,,<0>(~tmp#42##0:wybe.string, ~tmp#48##0:wybe.string, ?tmp#46##0:wybe.string) #15 @foo:32:46
    wybe.string.,,<0>("before fourth conditional: x = ":wybe.string, tmp#46##0:wybe.string, ?tmp#45##0:wybe.string) #16 @foo:32:14
    wybe.string.print<0>(~tmp#45##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #49 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#104##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#104##0:wybe.phantom, ?tmp#97##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#97##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(10:wybe.int, <<foo.r>>:wybe.int) @foo:33:21
    foo.yup<0>(?tmp#98##0:wybe.bool) #18 @foo:33:30
    case ~tmp#98##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:33:11
        wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #45 @foo:34:28
        wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #50 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#107##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#107##0:wybe.phantom, ?tmp#108##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#108##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #47

    1:
        foreign lpvm store(41:wybe.int, <<foo.s>>:wybe.int) @foo:33:47
        foo.nope<0>(?tmp#99##0:wybe.bool) #19 @foo:33:56
        case ~tmp#99##0:wybe.bool of
        0:
            foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:33:11
            foreign lpvm store(~s##0:wybe.int, <<foo.s>>:wybe.int) @foo:33:11
            wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #32 @foo:34:28
            wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #51 @string:164:33
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#110##0:wybe.phantom) @io:17:31
            foreign c putchar('\n':wybe.char, ~tmp#110##0:wybe.phantom, ?tmp#111##0:wybe.phantom) @io:17:31
            foreign lpvm store(~%tmp#111##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
            foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #34

        1:
            wybe.string.print<0>("nope succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #52 @string:164:33
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#113##0:wybe.phantom) @io:17:31
            foreign c putchar('\n':wybe.char, ~tmp#113##0:wybe.phantom, ?tmp#114##0:wybe.phantom) @io:17:31
            foreign lpvm store(~%tmp#114##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
            foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 26:wybe.int, 12:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21




proc #cont#4 > (3 calls)
0: foo.#cont#4<0>
#cont#4(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(12,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(~x##0:wybe.int, ?tmp#69##0:wybe.string) #0 @foo:36:45
    wybe.int.fmt<0>(~y##0:wybe.int, ?tmp#72##0:wybe.string) #1 @foo:36:53
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:36:61
    wybe.int.fmt<0>(~r##0:wybe.int, ?tmp#75##0:wybe.string) #2 @foo:36:61
    foreign lpvm load(<<foo.s>>:wybe.int, ?%s##0:wybe.int) @foo:36:69
    wybe.int.fmt<0>(~s##0:wybe.int, ?tmp#77##0:wybe.string) #3 @foo:36:69
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#77##0:wybe.string, ?tmp#76##0:wybe.string) #4 @foo:36:62
    wybe.string.,,<0>(~tmp#75##0:wybe.string, ~tmp#76##0:wybe.string, ?tmp#74##0:wybe.string) #5 @foo:36:61
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#74##0:wybe.string, ?tmp#73##0:wybe.string) #6 @foo:36:54
    wybe.string.,,<0>(~tmp#72##0:wybe.string, ~tmp#73##0:wybe.string, ?tmp#71##0:wybe.string) #7 @foo:36:53
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#71##0:wybe.string, ?tmp#70##0:wybe.string) #8 @foo:36:46
    wybe.string.,,<0>(~tmp#69##0:wybe.string, ~tmp#70##0:wybe.string, ?tmp#68##0:wybe.string) #9 @foo:36:45
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, ~tmp#68##0:wybe.string, ?tmp#67##0:wybe.string) #10 @foo:36:14
    wybe.string.print<0>[410bae77d3](~tmp#67##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #12 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#99##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#99##0:wybe.phantom, ?tmp#100##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#100##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#87##0:wybe.int, <<foo.r>>:wybe.int) @foo:11:1
    foreign lpvm store(~%tmp#88##0:wybe.int, <<foo.s>>:wybe.int) @foo:11:1


proc nope > {noinline} (6 calls)
0: foo.nope<0>
nope(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc nope2 > {noinline} (6 calls)
0: foo.nope2<0>
nope2(?value##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(2:wybe.int, ?value##0:wybe.int) @foo:3:42
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc yup > {noinline} (5 calls)
0: foo.yup<0>
yup(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

LLVM code       : None

======================================================================
AFTER EVERYTHING:
 Module 
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use command_line
                    use foo
                    use wybe
                    use wybe.array
                    use wybe.bool
                    use wybe.c_string
                    use wybe.char
                    use wybe.comparison
                    use wybe.control
                    use wybe.count
                    use wybe.float
                    use wybe.int
                    use wybe.io
                    use wybe.list
                    use wybe.machine_word
                    use wybe.memory_management
                    use wybe.phantom
                    use wybe.predicate
                    use wybe.range
                    use wybe.string
  resources       : 
  procs           : 

module top-level code > {terminal,inline,impure} (0 calls)
0: .<0>
(%argc##0:wybe.int, %argv##0:wybe.array.raw_array, %?exit_code##0:wybe.int)<{}; {<<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(~%argc##0:wybe.int, <<command_line.argc>>:wybe.int)
    foreign lpvm store(~%argv##0:wybe.array.raw_array, <<command_line.argv>>:wybe.array.raw_array)
    foreign c {impure} gc_init @memory_management:15:1
    foreign lpvm store(0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:13:5
    command_line.<0><{<<command_line.argc>>, <<command_line.argv>>}; {<<command_line.arguments>>, <<command_line.command>>, <<command_line.exit_code>>}; {}> #2
    foo.<0><{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3
    foreign lpvm load(<<command_line.exit_code>>:wybe.int, ?%exit_code##0:wybe.int)
    foreign c {semipure,terminal} exit(exit_code##0:wybe.int)

  LLVM code       :

; ModuleID = ''


 


@"resource#command_line.argc" = external   global i64 


@"resource#command_line.argv" = external   global i64 


@"resource#command_line.exit_code" = external   global i64 


declare external ccc  void @exit(i64)    


declare external fastcc  void @"foo.<0>"()    


declare external fastcc  void @"command_line.<0>"()    


declare external ccc  void @gc_init()    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external ccc  i64 @main(i64  %"argc##0", i64  %"argv##0") alwaysinline   {
entry:
  store  i64 %"argc##0", i64* @"resource#command_line.argc" 
  store  i64 %"argv##0", i64* @"resource#command_line.argv" 
  tail call ccc  void  @gc_init()  
  tail call fastcc  void  @"command_line.<0>"()  
  tail call fastcc  void  @"foo.<0>"()  
  %0 = load  i64, i64* @"resource#command_line.exit_code" 
  tail call ccc  void  @exit(i64  %0)  
  ret i64 %0 
}
--------------------------------------------------
 Module command_line
  representation  : (not a type)
  public submods  : 
  public resources: argc: command_line.argc
                    arguments: command_line.arguments
                    argv: command_line.argv
                    command: command_line.command
                    exit_code: command_line.exit_code
  public procs    : command_line.<0>
                    command_line.set_exit_code<0>
  imports         : use wybe
  resources       : argc: fromList [(command_line.argc,wybe.int @command_line:6:5)]
                    arguments: fromList [(command_line.arguments,wybe.array(wybe.c_string) = array(argc @command_line:11:48, argv @command_line:11:54) @command_line:11:42 @command_line:11:5)]
                    argv: fromList [(command_line.argv,wybe.array.raw_array @command_line:7:5)]
                    command: fromList [(command_line.command,wybe.c_string = c"" @command_line:15:33 @command_line:15:5)]
                    exit_code: fromList [(command_line.exit_code,wybe.int = 0 @command_line:23:30 @command_line:23:5)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: command_line.<0>
()<{<<command_line.argc>>, <<command_line.argv>>}; {<<command_line.arguments>>, <<command_line.command>>, <<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(1,(wybe.array.[|]<0>,fromList [NonAliasedParamCond 2 []]))]
    foreign lpvm load(<<command_line.argc>>:wybe.int, ?%tmp#3##0:wybe.int) @command_line:11:42
    foreign lpvm load(<<command_line.argv>>:wybe.array.raw_array, ?%tmp#5##0:wybe.array.raw_array) @command_line:11:42
    foreign lpvm alloc(16:wybe.int, ?tmp#12##0:wybe.array(T)) @array:8:21
    foreign lpvm mutate(~tmp#12##0:wybe.array(T), ?tmp#13##0:wybe.array(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#3##0:wybe.int) @array:8:21
    foreign lpvm mutate(~tmp#13##0:wybe.array(T), ?tmp#0##0:wybe.array(wybe.c_string), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#5##0:wybe.array.raw_array) @array:8:21
    foreign lpvm store(tmp#0##0:wybe.array(wybe.c_string), <<command_line.arguments>>:wybe.array(wybe.c_string)) @command_line:11:5
    foreign lpvm store(c"":wybe.c_string, <<command_line.command>>:wybe.c_string) @command_line:15:5
    wybe.array.[|]<0>[785a827a1b](?command##2:wybe.c_string, ?arguments##3:wybe.array(wybe.c_string), ~tmp#0##0:wybe.array(wybe.c_string), ?tmp#9##0:wybe.bool) #1 @command_line:17:6
    case ~tmp#9##0:wybe.bool of
    0:
        foreign c {terminal,semipure} error_exit(c"command_line:18:15":wybe.c_string, c"Erroneous program argument vector":wybe.c_string) @control:22:5

    1:
        foreign lpvm store(~%arguments##3:wybe.array(wybe.c_string), <<command_line.arguments>>:wybe.array(wybe.c_string)) @command_line:17:6
        foreign lpvm store(~%command##2:wybe.c_string, <<command_line.command>>:wybe.c_string) @command_line:17:6
        foreign lpvm store(0:wybe.int, <<command_line.exit_code>>:wybe.int) @command_line:23:5



proc set_exit_code > public {inline} (0 calls)
0: command_line.set_exit_code<0>
set_exit_code(code##0:wybe.int)<{}; {<<command_line.exit_code>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(~code##0:wybe.int, <<command_line.exit_code>>:wybe.int) @command_line:28:6

  LLVM code       :

; ModuleID = 'command_line'


 


@"resource#command_line.argc" =    global i64 undef


@"resource#command_line.arguments" =    global i64 undef


@"resource#command_line.argv" =    global i64 undef


@"resource#command_line.command" =    global i64 undef


@"resource#command_line.exit_code" =    global i64 undef


@command_line.0 =    constant [1 x i8] c"\00"


@command_line.2 =    constant [34 x i8] c"Erroneous program argument vector\00"


@command_line.1 =    constant [19 x i8] c"command_line:18:15\00"


declare external ccc  void @error_exit(i64, i64)    


declare external fastcc  {i64, i64, i1} @"wybe.array.[|]<0>[785a827a1b]"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"command_line.<0>"()    {
entry:
  %0 = load  i64, i64* @"resource#command_line.argc" 
  %1 = load  i64, i64* @"resource#command_line.argv" 
  %2 = trunc i64 16 to i32  
  %3 = tail call ccc  i8*  @wybe_malloc(i32  %2)  
  %4 = ptrtoint i8* %3 to i64 
  %5 = inttoptr i64 %4 to i64* 
  store  i64 %0, i64* %5 
  %6 = add   i64 %4, 8 
  %7 = inttoptr i64 %6 to i64* 
  store  i64 %1, i64* %7 
  store  i64 %4, i64* @"resource#command_line.arguments" 
  store  i64 ptrtoint (i8* getelementptr inbounds ([1 x i8], [1 x i8]* @command_line.0, i32 0, i32 0) to i64), i64* @"resource#command_line.command" 
  %8 = tail call fastcc  {i64, i64, i1}  @"wybe.array.[|]<0>[785a827a1b]"(i64  %4)  
  %9 = extractvalue {i64, i64, i1} %8, 0 
  %10 = extractvalue {i64, i64, i1} %8, 1 
  %11 = extractvalue {i64, i64, i1} %8, 2 
  br i1 %11, label %if.then, label %if.else 
if.then:
  store  i64 %10, i64* @"resource#command_line.arguments" 
  store  i64 %9, i64* @"resource#command_line.command" 
  store  i64 0, i64* @"resource#command_line.exit_code" 
  ret void 
if.else:
  tail call ccc  void  @error_exit(i64  ptrtoint (i8* getelementptr inbounds ([19 x i8], [19 x i8]* @command_line.1, i32 0, i32 0) to i64), i64  ptrtoint (i8* getelementptr inbounds ([34 x i8], [34 x i8]* @command_line.2, i32 0, i32 0) to i64))  
  ret void 
}


define external fastcc  void @"command_line.set_exit_code<0>"(i64  %"code##0") alwaysinline   {
entry:
  store  i64 %"code##0", i64* @"resource#command_line.exit_code" 
  ret void 
}
--------------------------------------------------
 Module foo
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : foo.<0>
  imports         : use command_line
                    use wybe
  resources       : r: fromList [(foo.r,wybe.int @foo:5:1)]
                    s: fromList [(foo.s,wybe.int @foo:6:1)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: foo.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(25,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm load(<<foo.r>>:wybe.int, ?%tmp#87##0:wybe.int) @foo:11:1
    foreign lpvm load(<<foo.s>>:wybe.int, ?%tmp#88##0:wybe.int) @foo:11:1
    foreign lpvm store(7:wybe.int, <<foo.r>>:wybe.int) @foo:12:6
    foreign lpvm store(14:wybe.int, <<foo.s>>:wybe.int) @foo:13:6
    wybe.int.fmt<0>(42:wybe.int, ?tmp#2##0:wybe.string) #0 @foo:14:39
    wybe.int.fmt<0>(7:wybe.int, ?tmp#4##0:wybe.string) #1 @foo:14:47
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#4##0:wybe.string, ?tmp#3##0:wybe.string) #2 @foo:14:40
    wybe.string.,,<0>(~tmp#2##0:wybe.string, ~tmp#3##0:wybe.string, ?tmp#1##0:wybe.string) #3 @foo:14:39
    wybe.string.,,<0>("before conditional: x = ":wybe.string, ~tmp#1##0:wybe.string, ?tmp#0##0:wybe.string) #4 @foo:14:14
    wybe.string.print<0>[410bae77d3](~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#105##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#105##0:wybe.phantom, ?tmp#106##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#106##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.int.fmt<0>(42:wybe.int, ?tmp#7##0:wybe.string) #17 @foo:16:45
    wybe.int.fmt<0>(7:wybe.int, ?tmp#9##0:wybe.string) #18 @foo:16:53
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#9##0:wybe.string, ?tmp#8##0:wybe.string) #19 @foo:16:46
    wybe.string.,,<0>(~tmp#7##0:wybe.string, ~tmp#8##0:wybe.string, ?tmp#6##0:wybe.string) #20 @foo:16:45
    wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#6##0:wybe.string, ?tmp#5##0:wybe.string) #21 @foo:16:28
    wybe.string.print<0>[410bae77d3](~tmp#5##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#110##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#110##0:wybe.phantom, ?tmp#111##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#111##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foo.#cont#1<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #23


proc #cont#1 > (3 calls)
0: foo.#cont#1<0>
#cont#1(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#17##0:wybe.string) #0 @foo:18:38
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:18:46
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#19##0:wybe.string) #1 @foo:18:46
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#19##0:wybe.string, ?tmp#18##0:wybe.string) #2 @foo:18:39
    wybe.string.,,<0>(~tmp#17##0:wybe.string, ~tmp#18##0:wybe.string, ?tmp#11##0:wybe.string) #3 @foo:18:38
    wybe.string.,,<0>("after conditional; x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#10##0:wybe.string) #4 @foo:18:14
    wybe.string.print<0>(~tmp#10##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#103##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#103##0:wybe.phantom, ?tmp#104##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#104##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.string.,,<0>("before second conditional: x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#15##0:wybe.string) #10 @foo:20:14
    wybe.string.print<0>(~tmp#15##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#106##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#106##0:wybe.phantom, ?tmp#91##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#91##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(9:wybe.int, <<foo.r>>:wybe.int) @foo:21:11
    foo.nope2<0>(?x##1:wybe.int, ?tmp#101##0:wybe.bool) #12 @foo:21:19
    case ~tmp#101##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:21:11
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#11##0:wybe.string, ?tmp#20##0:wybe.string) #19 @foo:22:28
        wybe.string.print<0>[410bae77d3](~tmp#20##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#109##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#109##0:wybe.phantom, ?tmp#110##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#110##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#2<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21

    1:
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#112##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#112##0:wybe.phantom, ?tmp#113##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#113##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#2<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##1:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#2 > (2 calls)
0: foo.#cont#2<0>
#cont#2(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#32##0:wybe.string) #0 @foo:24:45
    foreign lpvm load(<<foo.r>>:wybe.int, ?%tmp#92##0:wybe.int) @foo:24:53
    wybe.int.fmt<0>(~tmp#92##0:wybe.int, ?tmp#34##0:wybe.string) #1 @foo:24:53
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#34##0:wybe.string, ?tmp#33##0:wybe.string) #2 @foo:24:46
    wybe.string.,,<0>(~tmp#32##0:wybe.string, ~tmp#33##0:wybe.string, ?tmp#26##0:wybe.string) #3 @foo:24:45
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#25##0:wybe.string) #4 @foo:24:14
    wybe.string.print<0>(~tmp#25##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#102##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#102##0:wybe.phantom, ?tmp#103##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#103##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.string.,,<0>("before third conditional: x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#30##0:wybe.string) #10 @foo:26:14
    wybe.string.print<0>(~tmp#30##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#105##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#105##0:wybe.phantom, ?tmp#94##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#94##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foo.nope2<0>(?r##3:wybe.int, ?tmp#100##0:wybe.bool) #12 @foo:27:20
    case ~tmp#100##0:wybe.bool of
    0:
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#26##0:wybe.string, ?tmp#35##0:wybe.string) #19 @foo:28:28
        wybe.string.print<0>[410bae77d3](~tmp#35##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#108##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#108##0:wybe.phantom, ?tmp#109##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#109##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#3<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21

    1:
        foreign lpvm store(~%r##3:wybe.int, <<foo.r>>:wybe.int) @foo:27:20
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#111##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#111##0:wybe.phantom, ?tmp#112##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#112##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#3<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 25:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#3 > (2 calls)
0: foo.#cont#3<0>
#cont#3(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(50,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(51,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#42##0:wybe.string) #0 @foo:30:44
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:30:52
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#44##0:wybe.string) #1 @foo:30:52
    wybe.string.,,<0>(", r = ":wybe.string, tmp#44##0:wybe.string, ?tmp#43##0:wybe.string) #2 @foo:30:45
    wybe.string.,,<0>(tmp#42##0:wybe.string, ~tmp#43##0:wybe.string, ?tmp#41##0:wybe.string) #3 @foo:30:44
    wybe.string.,,<0>("after third conditional; x = ":wybe.string, ~tmp#41##0:wybe.string, ?tmp#40##0:wybe.string) #4 @foo:30:14
    wybe.string.print<0>(~tmp#40##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #48 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#101##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#101##0:wybe.phantom, ?tmp#102##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#102##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    wybe.int.fmt<0>(y##0:wybe.int, ?tmp#50##0:wybe.string) #7 @foo:32:54
    foreign lpvm load(<<foo.s>>:wybe.int, ?%s##0:wybe.int) @foo:32:70
    wybe.int.fmt<0>(s##0:wybe.int, ?tmp#55##0:wybe.string) #9 @foo:32:70
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#55##0:wybe.string, ?tmp#54##0:wybe.string) #10 @foo:32:63
    wybe.string.,,<0>(~tmp#44##0:wybe.string, ~tmp#54##0:wybe.string, ?tmp#52##0:wybe.string) #11 @foo:32:62
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#52##0:wybe.string, ?tmp#51##0:wybe.string) #12 @foo:32:55
    wybe.string.,,<0>(~tmp#50##0:wybe.string, ~tmp#51##0:wybe.string, ?tmp#49##0:wybe.string) #13 @foo:32:54
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#49##0:wybe.string, ?tmp#48##0:wybe.string) #14 @foo:32:47
    wybe.string.,,<0>(~tmp#42##0:wybe.string, ~tmp#48##0:wybe.string, ?tmp#46##0:wybe.string) #15 @foo:32:46
    wybe.string.,,<0>("before fourth conditional: x = ":wybe.string, tmp#46##0:wybe.string, ?tmp#45##0:wybe.string) #16 @foo:32:14
    wybe.string.print<0>(~tmp#45##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #49 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#104##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#104##0:wybe.phantom, ?tmp#97##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#97##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(10:wybe.int, <<foo.r>>:wybe.int) @foo:33:21
    foo.yup<0>(?tmp#98##0:wybe.bool) #18 @foo:33:30
    case ~tmp#98##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:33:11
        wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #45 @foo:34:28
        wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #50 @string:164:33
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#107##0:wybe.phantom) @io:17:31
        foreign c putchar('\n':wybe.char, ~tmp#107##0:wybe.phantom, ?tmp#108##0:wybe.phantom) @io:17:31
        foreign lpvm store(~%tmp#108##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
        foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #47

    1:
        foreign lpvm store(41:wybe.int, <<foo.s>>:wybe.int) @foo:33:47
        foo.nope<0>(?tmp#99##0:wybe.bool) #19 @foo:33:56
        case ~tmp#99##0:wybe.bool of
        0:
            foreign lpvm store(~r##0:wybe.int, <<foo.r>>:wybe.int) @foo:33:11
            foreign lpvm store(~s##0:wybe.int, <<foo.s>>:wybe.int) @foo:33:11
            wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #32 @foo:34:28
            wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #51 @string:164:33
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#110##0:wybe.phantom) @io:17:31
            foreign c putchar('\n':wybe.char, ~tmp#110##0:wybe.phantom, ?tmp#111##0:wybe.phantom) @io:17:31
            foreign lpvm store(~%tmp#111##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
            foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #34

        1:
            wybe.string.print<0>("nope succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #52 @string:164:33
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#113##0:wybe.phantom) @io:17:31
            foreign c putchar('\n':wybe.char, ~tmp#113##0:wybe.phantom, ?tmp#114##0:wybe.phantom) @io:17:31
            foreign lpvm store(~%tmp#114##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
            foo.#cont#4<0>(~tmp#87##0:wybe.int, ~tmp#88##0:wybe.int, 26:wybe.int, 12:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}> #21




proc #cont#4 > (3 calls)
0: foo.#cont#4<0>
#cont#4(tmp#87##0:wybe.int, tmp#88##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {<<foo.r>>, <<foo.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(12,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(~x##0:wybe.int, ?tmp#69##0:wybe.string) #0 @foo:36:45
    wybe.int.fmt<0>(~y##0:wybe.int, ?tmp#72##0:wybe.string) #1 @foo:36:53
    foreign lpvm load(<<foo.r>>:wybe.int, ?%r##0:wybe.int) @foo:36:61
    wybe.int.fmt<0>(~r##0:wybe.int, ?tmp#75##0:wybe.string) #2 @foo:36:61
    foreign lpvm load(<<foo.s>>:wybe.int, ?%s##0:wybe.int) @foo:36:69
    wybe.int.fmt<0>(~s##0:wybe.int, ?tmp#77##0:wybe.string) #3 @foo:36:69
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#77##0:wybe.string, ?tmp#76##0:wybe.string) #4 @foo:36:62
    wybe.string.,,<0>(~tmp#75##0:wybe.string, ~tmp#76##0:wybe.string, ?tmp#74##0:wybe.string) #5 @foo:36:61
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#74##0:wybe.string, ?tmp#73##0:wybe.string) #6 @foo:36:54
    wybe.string.,,<0>(~tmp#72##0:wybe.string, ~tmp#73##0:wybe.string, ?tmp#71##0:wybe.string) #7 @foo:36:53
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#71##0:wybe.string, ?tmp#70##0:wybe.string) #8 @foo:36:46
    wybe.string.,,<0>(~tmp#69##0:wybe.string, ~tmp#70##0:wybe.string, ?tmp#68##0:wybe.string) #9 @foo:36:45
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, ~tmp#68##0:wybe.string, ?tmp#67##0:wybe.string) #10 @foo:36:14
    wybe.string.print<0>[410bae77d3](~tmp#67##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #12 @string:164:33
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#99##0:wybe.phantom) @io:17:31
    foreign c putchar('\n':wybe.char, ~tmp#99##0:wybe.phantom, ?tmp#100##0:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#100##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:17:31
    foreign lpvm store(~%tmp#87##0:wybe.int, <<foo.r>>:wybe.int) @foo:11:1
    foreign lpvm store(~%tmp#88##0:wybe.int, <<foo.s>>:wybe.int) @foo:11:1


proc nope > {noinline} (6 calls)
0: foo.nope<0>
nope(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc nope2 > {noinline} (6 calls)
0: foo.nope2<0>
nope2(?value##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(2:wybe.int, ?value##0:wybe.int) @foo:3:42
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc yup > {noinline} (5 calls)
0: foo.yup<0>
yup(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

; ModuleID = 'foo'


 


@"resource#foo.r" =    global i64 undef


@"resource#foo.s" =    global i64 undef


@foo.1 =    constant {i64, i64} { i64 6, i64 ptrtoint ([7 x i8]* @foo.0 to i64) }


@foo.21 =    constant {i64, i64} { i64 6, i64 ptrtoint ([7 x i8]* @foo.20 to i64) }


@foo.23 =    constant {i64, i64} { i64 6, i64 ptrtoint ([7 x i8]* @foo.22 to i64) }


@foo.27 =    constant {i64, i64} { i64 14, i64 ptrtoint ([15 x i8]* @foo.26 to i64) }


@foo.11 =    constant {i64, i64} { i64 15, i64 ptrtoint ([16 x i8]* @foo.10 to i64) }


@foo.5 =    constant {i64, i64} { i64 16, i64 ptrtoint ([17 x i8]* @foo.4 to i64) }


@foo.13 =    constant {i64, i64} { i64 17, i64 ptrtoint ([18 x i8]* @foo.12 to i64) }


@foo.7 =    constant {i64, i64} { i64 23, i64 ptrtoint ([24 x i8]* @foo.6 to i64) }


@foo.3 =    constant {i64, i64} { i64 24, i64 ptrtoint ([25 x i8]* @foo.2 to i64) }


@foo.19 =    constant {i64, i64} { i64 29, i64 ptrtoint ([30 x i8]* @foo.18 to i64) }


@foo.15 =    constant {i64, i64} { i64 30, i64 ptrtoint ([31 x i8]* @foo.14 to i64) }


@foo.17 =    constant {i64, i64} { i64 30, i64 ptrtoint ([31 x i8]* @foo.16 to i64) }


@foo.25 =    constant {i64, i64} { i64 31, i64 ptrtoint ([32 x i8]* @foo.24 to i64) }


@foo.9 =    constant {i64, i64} { i64 31, i64 ptrtoint ([32 x i8]* @foo.8 to i64) }


@foo.0 =    constant [7 x i8] c", r = \00"


@foo.20 =    constant [7 x i8] c", s = \00"


@foo.22 =    constant [7 x i8] c", y = \00"


@foo.6 =    constant [24 x i8] c"after conditional; x = \00"


@foo.14 =    constant [31 x i8] c"after second conditional; x = \00"


@foo.18 =    constant [30 x i8] c"after third conditional; x = \00"


@foo.2 =    constant [25 x i8] c"before conditional: x = \00"


@foo.24 =    constant [32 x i8] c"before fourth conditional: x = \00"


@foo.8 =    constant [32 x i8] c"before second conditional: x = \00"


@foo.16 =    constant [31 x i8] c"before third conditional: x = \00"


@foo.4 =    constant [17 x i8] c"nope fails; x = \00"


@foo.26 =    constant [15 x i8] c"nope succeeds!\00"


@foo.12 =    constant [18 x i8] c"nope2 fails; x = \00"


@foo.10 =    constant [16 x i8] c"nope2 succeeds!\00"


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print<0>[410bae77d3]"(i64)    


declare external fastcc  i64 @"wybe.string.,,<0>"(i64, i64)    


declare external fastcc  i64 @"wybe.int.fmt<0>"(i64)    


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"foo.<0>"()    {
entry:
  %0 = load  i64, i64* @"resource#foo.r" 
  %1 = load  i64, i64* @"resource#foo.s" 
  store  i64 7, i64* @"resource#foo.r" 
  store  i64 14, i64* @"resource#foo.s" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  42)  
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  7)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %2, i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.3, i32 0, i32 0) to i64), i64  %5)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  %7 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  42)  
  %8 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %7, i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.5, i32 0, i32 0) to i64), i64  %10)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %11)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"foo.#cont#1<0>"(i64  %0, i64  %1, i64  42, i64  21)  
  ret void 
}


define external fastcc  void @"foo.#cont#1<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#foo.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.7, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.9, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 9, i64* @"resource#foo.r" 
  %7 = tail call fastcc  {i64, i1}  @"foo.nope2<0>"()  
  %8 = extractvalue {i64, i1} %7, 0 
  %9 = extractvalue {i64, i1} %7, 1 
  br i1 %9, label %if.then, label %if.else 
if.then:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.11, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#2<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %8, i64  %"y##0")  
  ret void 
if.else:
  store  i64 %1, i64* @"resource#foo.r" 
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.13, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %10)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#2<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"foo.#cont#2<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#foo.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.15, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.17, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  %7 = tail call fastcc  {i64, i1}  @"foo.nope2<0>"()  
  %8 = extractvalue {i64, i1} %7, 0 
  %9 = extractvalue {i64, i1} %7, 1 
  br i1 %9, label %if.then, label %if.else 
if.then:
  store  i64 %8, i64* @"resource#foo.r" 
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.11, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#3<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  25, i64  %"y##0")  
  ret void 
if.else:
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.13, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %10)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#3<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"foo.#cont#3<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#foo.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.19, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %7 = load  i64, i64* @"resource#foo.s" 
  %8 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.21, i32 0, i32 0) to i64), i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %2, i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %6, i64  %11)  
  %13 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.23, i32 0, i32 0) to i64), i64  %12)  
  %14 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %13)  
  %15 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.25, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %15)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 10, i64* @"resource#foo.r" 
  %16 = tail call fastcc  i1  @"foo.yup<0>"()  
  br i1 %16, label %if.then, label %if.else 
if.then:
  store  i64 41, i64* @"resource#foo.s" 
  %17 = tail call fastcc  i1  @"foo.nope<0>"()  
  br i1 %17, label %if.then1, label %if.else1 
if.else:
  store  i64 %1, i64* @"resource#foo.r" 
  %19 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.5, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %19)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#4<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")  
  ret void 
if.then1:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.27, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#4<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  26, i64  12)  
  ret void 
if.else1:
  store  i64 %1, i64* @"resource#foo.r" 
  store  i64 %7, i64* @"resource#foo.s" 
  %18 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.5, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %18)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"foo.#cont#4<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"foo.#cont#4<0>"(i64  %"tmp#87##0", i64  %"tmp#88##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %2 = load  i64, i64* @"resource#foo.r" 
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %2)  
  %4 = load  i64, i64* @"resource#foo.s" 
  %5 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.21, i32 0, i32 0) to i64), i64  %5)  
  %7 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %3, i64  %6)  
  %8 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.1, i32 0, i32 0) to i64), i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %1, i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.23, i32 0, i32 0) to i64), i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @foo.15, i32 0, i32 0) to i64), i64  %11)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 %"tmp#87##0", i64* @"resource#foo.r" 
  store  i64 %"tmp#88##0", i64* @"resource#foo.s" 
  ret void 
}


define external fastcc  i1 @"foo.nope<0>"() noinline   {
entry:
  ret i1 0 
}


define external fastcc  {i64, i1} @"foo.nope2<0>"() noinline   {
entry:
  %0 = insertvalue {i64, i1} undef, i64 2, 0 
  %1 = insertvalue {i64, i1} %0, i1 0, 1 
  ret {i64, i1} %1 
}


define external fastcc  i1 @"foo.yup<0>"() noinline   {
entry:
  ret i1 1 
}
