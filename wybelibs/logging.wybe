# purpose: Standard Logging Library
# since  : 0.1

pub def {semipure} logmsg(x:int) { foreign c {impure} log_int(x) }
pub def {semipure} logmsg(x:count) { foreign c {impure} log_count(x) }
pub def {semipure} logmsg(x:float) { foreign c {impure} log_float(x) }
pub def {semipure} logmsg(x:char) { foreign c {impure} log_char(x) }
pub def {semipure} logmsg(x:string) { !logmsg(c_string(x)) }
pub def {semipure} logmsg(x:c_string) { foreign c {impure} log_string(x) }
pub def {semipure} logmsg(x:bool) { !logmsg(if { x :: c"true" | else :: c"false" }) }
pub def {semipure} lognl { !logmsg('\n') }
