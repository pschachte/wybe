# purpose: Standard C String type, a null-terminated charater array
# since  : 0.1

pragma no_standard_library  # Standard library can't depend on itself!

use wybe.bool, wybe.int, wybe.char, wybe.io

representation is address

pub def (x:_ =  y:_):bool = foreign c strcmp(x,y):int = 0
pub def (x:_ ~= y:_):bool = foreign c strcmp(x,y):int ~= 0
pub def (x:_ <  y:_):bool = foreign c strcmp(x,y):int < 0
pub def (x:_ <= y:_):bool = foreign c strcmp(x,y):int <= 0
pub def (x:_ >  y:_):bool = foreign c strcmp(x,y):int > 0
pub def (x:_ >= y:_):bool = foreign c strcmp(x,y):int >= 0

pub def length(str:_):int = foreign c strlen(str)

pub def {test} `[|]`(?head:char, ?tail:_, str:_) {
    foreign lpvm access(str, 0, 0, 0, ?head)
    foreign llvm icmp_ne(head, '\0', ?not_done)
    (not_done = true)
    foreign llvm add(str, 1, ?tail)
}

pub def {test} [](str:_, idx:int):char = c where {
    (0 <= idx)
    (idx < length(str))
    ?c = unsafe_c_string_index(str, idx)
}

pub def unsafe_c_string_index(str:_, idx:int):char 
    = foreign lpvm access(str, idx, 1, 0)

pub def print(x:_) use !io { foreign c print_string(x, !io) }

pub def println(x:_) use !io { !print(x); !nl }

pub def read(?x:_) use !io { foreign c read_line(?x, !io) }

    