pragma no_standard_library  # Standard library can't depend on itself!

use foreign object cbits
use foreign library gc

use wybe.bool, wybe.int, wybe.count, wybe.float, wybe.char, wybe.string, wybe.c_string
use wybe.phantom

pub resource io:phantom = phantom

pub def {inline} nl use !io { foreign c putchar('\n', !io) }

pub def {inline} print(x:int) use !io { foreign c print_int(x, !io) }
pub def {inline} println(x:int) use !io { !print(x); !nl }
pub def {inline} read(?x:int) use !io { foreign c read_int(?x, !io) }

pub def {inline} print(x:count) use !io { foreign c print_count(x, !io) }
pub def {inline} println(x:count) use !io { !print(x); !nl }
pub def {inline} read(?x:count) use !io { foreign c read_count(?x, !io) }

pub def {inline} print(x:float) use !io { foreign c print_float(x, !io) }
pub def {inline} println(x:float) use !io { !print(x); !nl }
pub def {inline} read(?x:float) use !io { foreign c read_float(?x, !io) }

pub def {inline} print(x:char) use !io { foreign c putchar(x, !io) }
pub def {inline} println(x:char) use !io { !print(x); !nl }
pub def {inline} read(?x:char) use !io { foreign c read_char(?x, !io) }

pub def {inline} print(x:c_string) use !io { foreign c print_string(x, !io) }
pub def {inline} println(x:c_string) use !io { !print(x); !nl }
pub def {inline} read(?x:c_string) use !io { foreign c read_line(?x, !io) }

pub def print(x:bool) use !io { !print(if {x:: c"true" | else:: c"false"}) }
pub def {inline} println(x:bool) use !io { !print(x); !nl }

pub def {inline} print(x:string) use !io { !print_string(x) }
pub def {inline} println(x:string) use !io { !print(x); !nl }
pub def {inline} read(?x:string) use !io { !read(?str:c_string); ?x = string(str) }

pub def {inline} eof:char = foreign lpvm cast(-1)
