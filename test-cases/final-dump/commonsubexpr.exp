======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module commonsubexpr
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : commonsubexpr.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: commonsubexpr.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#5##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(198:wybe.int, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(198:wybe.int, ~tmp#7##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(11:wybe.int, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#10##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign lpvm store(~%tmp#11##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @commonsubexpr:nn:nn


proc common_subexpr > {inline} (1 calls)
0: commonsubexpr.common_subexpr<0>
common_subexpr(x##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(x##0:wybe.int, 1:wybe.int, ?tmp#2##0:wybe.int) @commonsubexpr:nn:nn
    foreign llvm sub(~x##0:wybe.int, 1:wybe.int, ?tmp#64##0:wybe.int) @commonsubexpr:nn:nn
    foreign llvm mul(tmp#2##0:wybe.int, ~tmp#64##0:wybe.int, ?tmp#50##0:wybe.int) @commonsubexpr:nn:nn
    foreign llvm add(~tmp#50##0:wybe.int, ~tmp#50##0:wybe.int, ?tmp#0##0:wybe.int) @commonsubexpr:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#34##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(tmp#0##0:wybe.int, ~tmp#34##0:wybe.phantom, ?tmp#35##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#35##0:wybe.phantom, ?tmp#36##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(~tmp#0##0:wybe.int, ~tmp#36##0:wybe.phantom, ?tmp#53##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#53##0:wybe.phantom, ?tmp#54##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c print_int(~tmp#2##0:wybe.int, ~tmp#54##0:wybe.phantom, ?tmp#67##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#67##0:wybe.phantom, ?tmp#68##0:wybe.phantom) @commonsubexpr:nn:nn
    foreign lpvm store(~%tmp#68##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @commonsubexpr:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'commonsubexpr'

source_filename = "!ROOT!/final-dump/commonsubexpr.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"commonsubexpr.<0>"() {
  call ccc void @print_int(i64 198)
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 198)
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 11)
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc void @"commonsubexpr.common_subexpr<0>"(i64 %"x##0") {
  %"tmp#2##0" = add i64 %"x##0", 1
  %"tmp#64##0" = sub i64 %"x##0", 1
  %"tmp#50##0" = mul i64 %"tmp#2##0", %"tmp#64##0"
  %"tmp#0##0" = add i64 %"tmp#50##0", %"tmp#50##0"
  call ccc void @print_int(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 %"tmp#2##0")
  call ccc void @putchar(i8 10)
  ret void
}
