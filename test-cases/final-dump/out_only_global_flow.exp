======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module out_only_global_flow
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : out_only_global_flow.<0>
  imports         : use wybe
  resources       : res: fromList [(out_only_global_flow.res,wybe.int @out_only_global_flow:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: out_only_global_flow.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<out_only_global_flow.res>>:wybe.int, ?%tmp#0##0:wybe.int) @out_only_global_flow:nn:nn
    out_only_global_flow.out<0><{}; {<<out_only_global_flow.res>>}; {}> #0 @out_only_global_flow:nn:nn
    foreign lpvm load(<<out_only_global_flow.res>>:wybe.int, ?%res##1:wybe.int) @out_only_global_flow:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @out_only_global_flow:nn:nn
    foreign c print_int(~res##1:wybe.int, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @out_only_global_flow:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @out_only_global_flow:nn:nn
    foreign lpvm store(~%tmp#4##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @out_only_global_flow:nn:nn
    foreign lpvm store(~%tmp#0##0:wybe.int, <<out_only_global_flow.res>>:wybe.int) @out_only_global_flow:nn:nn


proc out > {noinline} (1 calls)
0: out_only_global_flow.out<0>
out()<{}; {<<out_only_global_flow.res>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(11:wybe.int, <<out_only_global_flow.res>>:wybe.int) @out_only_global_flow:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'out_only_global_flow'

source_filename = "!ROOT!/final-dump/out_only_global_flow.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#out_only_global_flow.res" = global i64 undef

define external fastcc void @"out_only_global_flow.<0>"() {
  %"tmp#0##0" = load i64, ptr @"resource#out_only_global_flow.res"
  tail call fastcc void @"out_only_global_flow.out<0>"()
  %"res##1" = load i64, ptr @"resource#out_only_global_flow.res"
  call ccc void @print_int(i64 %"res##1")
  call ccc void @putchar(i8 10)
  store i64 %"tmp#0##0", ptr @"resource#out_only_global_flow.res"
  ret void
}

define external fastcc void @"out_only_global_flow.out<0>"() {
  store i64 11, ptr @"resource#out_only_global_flow.res"
  ret void
}
