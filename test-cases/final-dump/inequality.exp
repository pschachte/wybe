======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module inequality
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : inequality.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: inequality.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.bool.print<0>(1:wybe.bool)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @inequality:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#5##0:wybe.phantom) @inequality:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @inequality:nn:nn
    foreign lpvm store(~%tmp#6##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @inequality:nn:nn
    wybe.bool.print<0>(0:wybe.bool)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @inequality:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#10##0:wybe.phantom) @inequality:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#10##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @inequality:nn:nn
    foreign lpvm store(~%tmp#11##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @inequality:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'inequality'

source_filename = "!ROOT!/final-dump/inequality.wybe"
target triple    ????


declare external fastcc void @"wybe.bool.print<0>"(i1)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"inequality.<0>"() {
  tail call fastcc void @"wybe.bool.print<0>"(i1 1)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.bool.print<0>"(i1 0)
  call ccc void @putchar(i8 10)
  ret void
}
