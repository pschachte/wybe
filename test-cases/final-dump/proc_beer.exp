======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module proc_beer
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : proc_beer.<0>
                    proc_beer.beer99<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: proc_beer.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    proc_beer.beer99#cont#1<0>(99:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @proc_beer:nn:nn


proc beer99 > public {inline} (1 calls)
0: proc_beer.beer99<0>
beer99()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    proc_beer.beer99#cont#1<0>(99:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @proc_beer:nn:nn


proc beer99#cont#1 > (2 calls)
0: proc_beer.beer99#cont#1<0>
beer99#cont#1(count##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_sge(count##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool) @proc_beer:nn:nn
    case ~tmp#0##0:wybe.bool of
    0:

    1:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @proc_beer:nn:nn
        foreign c print_int(count##0:wybe.int, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @proc_beer:nn:nn
        foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @proc_beer:nn:nn
        wybe.string.print<0>(" bottles of beer on the wall":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @proc_beer:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#6##0:wybe.phantom) @proc_beer:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @proc_beer:nn:nn
        foreign lpvm store(~%tmp#7##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @proc_beer:nn:nn
        foreign llvm sub(~count##0:wybe.int, 1:wybe.int, ?tmp#8##0:wybe.int) @proc_beer:nn:nn
        proc_beer.beer99#cont#1<0>(~tmp#8##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3 @proc_beer:nn:nn



proc beer99#cont#2 > {inline} (1 calls)
0: proc_beer.beer99#cont#2<0>
beer99#cont#2(count##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @proc_beer:nn:nn
    foreign c print_int(count##0:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @proc_beer:nn:nn
    foreign lpvm store(~%tmp#2##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @proc_beer:nn:nn
    wybe.string.print<0>(" bottles of beer on the wall":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @proc_beer:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @proc_beer:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @proc_beer:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @proc_beer:nn:nn
    foreign llvm sub(~count##0:wybe.int, 1:wybe.int, ?count##1:wybe.int) @proc_beer:nn:nn
    proc_beer.beer99#cont#1<0>(~count##1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3 @proc_beer:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'proc_beer'

source_filename = "!ROOT!/final-dump/proc_beer.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c" bottles of beer on the wall\00", align 8
@"string#1" = private unnamed_addr constant {i64, i64} { i64 28, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"proc_beer.<0>"() {
  tail call fastcc void @"proc_beer.beer99#cont#1<0>"(i64 99)
  ret void
}

define external fastcc void @"proc_beer.beer99<0>"() {
  tail call fastcc void @"proc_beer.beer99#cont#1<0>"(i64 99)
  ret void
}

define external fastcc void @"proc_beer.beer99#cont#1<0>"(i64 %"count##0") {
  %"tmp#0##0" = icmp sge i64 %"count##0", 0
  br i1 %"tmp#0##0", label %if.then.0, label %if.else.0
if.then.0:
  call ccc void @print_int(i64 %"count##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#1" to i64 ))
  call ccc void @putchar(i8 10)
  %"tmp#8##0" = sub i64 %"count##0", 1
  tail call fastcc void @"proc_beer.beer99#cont#1<0>"(i64 %"tmp#8##0")
  ret void
if.else.0:
  ret void
}

define external fastcc void @"proc_beer.beer99#cont#2<0>"(i64 %"count##0") {
  call ccc void @print_int(i64 %"count##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#1" to i64 ))
  call ccc void @putchar(i8 10)
  %"count##1" = sub i64 %"count##0", 1
  tail call fastcc void @"proc_beer.beer99#cont#1<0>"(i64 %"count##1")
  ret void
}
