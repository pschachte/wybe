======================================================================
AFTER EVERYTHING:
 Module string
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : string.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: string.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#33##0:wybe.phantom) @io:nn:nn
    foreign c print_string(c"TESTING CONSTRUCTION":wybe.c_string, ~tmp#33##0:wybe.phantom, ?tmp#34##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#34##0:wybe.phantom, ?tmp#35##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#35##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #62 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#37##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#37##0:wybe.phantom, ?tmp#38##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#38##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("a":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #63 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#40##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#40##0:wybe.phantom, ?tmp#41##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#41##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("abc":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #64 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#43##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#43##0:wybe.phantom, ?tmp#44##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#44##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.,,<0>("abc":wybe.string, "abc":wybe.string, ?tmp#0##0:wybe.string) #4 @string:nn:nn
    wybe.string.print_string<0>(~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #65 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#46##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#46##0:wybe.phantom, ?tmp#47##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#47##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign llvm shl('a':wybe.string, 2:wybe.string, ?tmp#107##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#107##0:wybe.string, 1024:wybe.string, ?tmp#108##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#108##0:wybe.string, 3:wybe.string, ?tmp#1##0:wybe.string) @string:nn:nn
    wybe.string.print_string<0>(tmp#1##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #66 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#52##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#52##0:wybe.phantom, ?tmp#53##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#53##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.range.construct<0>(1:wybe.int, 3:wybe.int, 100:wybe.int, ?tmp#3##0:wybe.range) #67 @range:nn:nn
    wybe.string.[]<1>("abcdefghi":wybe.string, ~tmp#3##0:wybe.range, ?tmp#2##0:wybe.string) #9 @string:nn:nn
    wybe.string.print_string<0>(~tmp#2##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #68 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#58##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#58##0:wybe.phantom, ?tmp#59##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#59##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.range.construct<0>(1:wybe.int, 3:wybe.int, 100:wybe.int, ?tmp#6##0:wybe.range) #69 @range:nn:nn
    wybe.string.[]<1>("abcdefghi":wybe.string, ~tmp#6##0:wybe.range, ?tmp#5##0:wybe.string) #12 @string:nn:nn
    wybe.range...<0>(1:wybe.int, 3:wybe.int, ?tmp#7##0:wybe.range) #13 @string:nn:nn
    wybe.string.[]<1>(~tmp#5##0:wybe.string, ~tmp#7##0:wybe.range, ?tmp#4##0:wybe.string) #14 @string:nn:nn
    wybe.string.print_string<0>(~tmp#4##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #70 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#64##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#64##0:wybe.phantom, ?tmp#65##0:wybe.phantom) @io:nn:nn
    foreign c print_string(c"\nTESTING CONVERSION TO c_string":wybe.c_string, ~tmp#65##0:wybe.phantom, ?tmp#68##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#68##0:wybe.phantom, ?tmp#69##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#69##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign llvm shl('d':wybe.string, 2:wybe.string, ?tmp#71##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#71##0:wybe.string, 1024:wybe.string, ?tmp#72##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#72##0:wybe.string, 3:wybe.string, ?tmp#10##0:wybe.string) @string:nn:nn
    wybe.range...<0>(1:wybe.int, 2:wybe.int, ?tmp#12##0:wybe.range) #18 @string:nn:nn
    wybe.string.[]<1>("efg":wybe.string, ~tmp#12##0:wybe.range, ?tmp#11##0:wybe.string) #19 @string:nn:nn
    wybe.string.,,<0>(~tmp#10##0:wybe.string, ~tmp#11##0:wybe.string, ?tmp#9##0:wybe.string) #20 @string:nn:nn
    wybe.string.,,<0>("abc":wybe.string, ~tmp#9##0:wybe.string, ?tmp#8##0:wybe.string) #21 @string:nn:nn
    wybe.string.c_string<0>(tmp#8##0:wybe.string, ?r##0:wybe.c_string) #22 @string:nn:nn
    wybe.string.print_string<0>(~tmp#8##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #71 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#75##0:wybe.phantom) @io:nn:nn
    foreign c putchar(' ':wybe.char, ~tmp#75##0:wybe.phantom, ?tmp#76##0:wybe.phantom) @io:nn:nn
    foreign c print_string(~r##0:wybe.c_string, ~tmp#76##0:wybe.phantom, ?tmp#79##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#79##0:wybe.phantom, ?tmp#80##0:wybe.phantom) @io:nn:nn
    foreign c print_string(c"\nTESTING LOOPS":wybe.c_string, ~tmp#80##0:wybe.phantom, ?tmp#83##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#83##0:wybe.phantom, ?tmp#84##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#84##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    string.gen#1<0>("abc":wybe.string, "abc":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #72 @string:nn:nn
    wybe.range.irange<0>(10:wybe.int, -1:wybe.int, 1:wybe.int, ?tmp#14##0:wybe.range) #28 @string:nn:nn
    wybe.string.[]<1>("abcdefghijkl":wybe.string, ~tmp#14##0:wybe.range, ?tmp#13##0:wybe.string) #29 @string:nn:nn
    string.gen#1<0>(~tmp#13##0:wybe.string, ~tmp#13##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #73 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#88##0:wybe.phantom) @io:nn:nn
    foreign c print_string(c"\nTESTING INDEXING":wybe.c_string, ~tmp#88##0:wybe.phantom, ?tmp#89##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#89##0:wybe.phantom, ?tmp#90##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#90##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    string.test_index<0>("abc":wybe.string, 0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #32 @string:nn:nn
    string.test_index<0>("abc":wybe.string, 1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #33 @string:nn:nn
    string.test_index<0>("abcdefghijklmnopqrstuvwxyz":wybe.string, 25:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #34 @string:nn:nn
    wybe.string.,,<0>("ab":wybe.string, "cd":wybe.string, ?tmp#15##0:wybe.string) #35 @string:nn:nn
    string.test_index<0>(~tmp#15##0:wybe.string, 1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #36 @string:nn:nn
    wybe.string.,,<0>("ab":wybe.string, "cd":wybe.string, ?tmp#16##0:wybe.string) #37 @string:nn:nn
    string.test_index<0>(~tmp#16##0:wybe.string, 2:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #38 @string:nn:nn
    string.test_index<0>(tmp#1##0:wybe.string, 0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #40 @string:nn:nn
    wybe.range.construct<0>(0:wybe.int, 2:wybe.int, 10:wybe.int, ?tmp#19##0:wybe.range) #74 @range:nn:nn
    wybe.string.[]<1>("abcdefgh":wybe.string, ~tmp#19##0:wybe.range, ?tmp#18##0:wybe.string) #42 @string:nn:nn
    string.test_index<0>(~tmp#18##0:wybe.string, 0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #43 @string:nn:nn
    string.test_index<0>("abc":wybe.string, 3:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #44 @string:nn:nn
    string.test_index<0>(tmp#1##0:wybe.string, 3:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #46 @string:nn:nn
    string.test_index<0>("abc":wybe.string, -3:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #47 @string:nn:nn
    wybe.range.construct<0>(0:wybe.int, 2:wybe.int, 10:wybe.int, ?tmp#22##0:wybe.range) #75 @range:nn:nn
    wybe.string.[]<1>("abc":wybe.string, ~tmp#22##0:wybe.range, ?tmp#21##0:wybe.string) #49 @string:nn:nn
    string.test_index<0>(~tmp#21##0:wybe.string, 2:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #50 @string:nn:nn
    wybe.string.,,<0>("abc":wybe.string, tmp#1##0:wybe.string, ?tmp#23##0:wybe.string) #52 @string:nn:nn
    string.test_index<0>(~tmp#23##0:wybe.string, 2:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #53 @string:nn:nn
    foreign llvm shl('b':wybe.string, 2:wybe.string, ?tmp#110##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#110##0:wybe.string, 1024:wybe.string, ?tmp#111##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#111##0:wybe.string, 3:wybe.string, ?tmp#29##0:wybe.string) @string:nn:nn
    foreign llvm shl('c':wybe.string, 2:wybe.string, ?tmp#113##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#113##0:wybe.string, 1024:wybe.string, ?tmp#114##0:wybe.string) @string:nn:nn
    foreign llvm or(~tmp#114##0:wybe.string, 3:wybe.string, ?tmp#30##0:wybe.string) @string:nn:nn
    wybe.string.,,<0>(~tmp#29##0:wybe.string, ~tmp#30##0:wybe.string, ?tmp#28##0:wybe.string) #57 @string:nn:nn
    wybe.string.,,<0>(~tmp#1##0:wybe.string, ~tmp#28##0:wybe.string, ?tmp#26##0:wybe.string) #58 @string:nn:nn
    wybe.range...<0>(0:wybe.int, 2:wybe.int, ?tmp#31##0:wybe.range) #59 @string:nn:nn
    wybe.string.[]<1>(~tmp#26##0:wybe.string, ~tmp#31##0:wybe.range, ?tmp#25##0:wybe.string) #60 @string:nn:nn
    string.test_index<0>(~tmp#25##0:wybe.string, 1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #61 @string:nn:nn


gen#1 > (2 calls)
0: string.gen#1<0>
gen#1(s##0:wybe.string, tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: [InterestingUnaliased 1]
  MultiSpeczDepInfo: [(0,(wybe.string.[|]<0>,fromList [NonAliasedParamCond 2 [1]])),(2,(string.gen#1<0>,fromList [NonAliasedParamCond 1 []]))]
    wybe.string.[|]<0>(?c##0:wybe.char, ?tmp#0##1:wybe.string, ~tmp#0##0:wybe.string, ?tmp#1##0:wybe.bool) #0 @string:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn

    1:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
        foreign c putchar(~c##0:wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#4##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        string.gen#1<0>[6dacb8fd25](~s##0:wybe.string, ~tmp#0##1:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #2 @string:nn:nn

 [6dacb8fd25] [NonAliasedParam 1] :
    wybe.string.[|]<0>[785a827a1b](?c##0:wybe.char, ?tmp#0##1:wybe.string, ~tmp#0##0:wybe.string, ?tmp#1##0:wybe.bool) #0 @string:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn

    1:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
        foreign c putchar(~c##0:wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#4##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        string.gen#1<0>[6dacb8fd25](~s##0:wybe.string, ~tmp#0##1:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #2 @string:nn:nn



print_loop > {inline} (2 calls)
0: string.print_loop<0>
print_loop(s##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    string.gen#1<0>(~s##0:wybe.string, ~s##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @string:nn:nn


test_index > (13 calls)
0: string.test_index<0>
test_index(s##0:wybe.string, i##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.[]<0>(~s##0:wybe.string, ~i##0:wybe.int, ?tmp#0##0:wybe.char, ?tmp#1##0:wybe.bool) #0 @string:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
        foreign c print_string(c"OUT OF RANGE":wybe.c_string, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn

    1:
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
        foreign c putchar(~tmp#0##0:wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


  LLVM code       :

; ModuleID = 'string'


 


declare external fastcc  i64 @"wybe.string.[]<1>"(i64, i64)    


declare external fastcc  i64 @"wybe.range...<0>"(i64, i64)    


declare external fastcc  i64 @"wybe.string.,,<0>"(i64, i64)    


declare external fastcc  i64 @"wybe.range.construct<0>"(i64, i64, i64)    


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_string(i64)    


declare external fastcc  i64 @"wybe.range.irange<0>"(i64, i64, i64)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


declare external fastcc  i64 @"wybe.string.c_string<0>"(i64)    


@string.52 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.51 to i64) }


@string.51 =    constant [?? x i8] c"abc\00"


@string.50 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.49 to i64) }


@string.49 =    constant [?? x i8] c"abc\00"


@string.48 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.47 to i64) }


@string.47 =    constant [?? x i8] c"abc\00"


@string.46 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.45 to i64) }


@string.45 =    constant [?? x i8] c"abc\00"


@string.44 =    constant {i64, i64} { i64 8, i64 ptrtoint ([?? x i8]* @string.43 to i64) }


@string.43 =    constant [?? x i8] c"abcdefgh\00"


@string.42 =    constant {i64, i64} { i64 2, i64 ptrtoint ([?? x i8]* @string.41 to i64) }


@string.41 =    constant [?? x i8] c"cd\00"


@string.40 =    constant {i64, i64} { i64 2, i64 ptrtoint ([?? x i8]* @string.39 to i64) }


@string.39 =    constant [?? x i8] c"ab\00"


@string.38 =    constant {i64, i64} { i64 2, i64 ptrtoint ([?? x i8]* @string.37 to i64) }


@string.37 =    constant [?? x i8] c"cd\00"


@string.36 =    constant {i64, i64} { i64 2, i64 ptrtoint ([?? x i8]* @string.35 to i64) }


@string.35 =    constant [?? x i8] c"ab\00"


@string.34 =    constant {i64, i64} { i64 26, i64 ptrtoint ([?? x i8]* @string.33 to i64) }


@string.33 =    constant [?? x i8] c"abcdefghijklmnopqrstuvwxyz\00"


@string.32 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.31 to i64) }


@string.31 =    constant [?? x i8] c"abc\00"


@string.30 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.29 to i64) }


@string.29 =    constant [?? x i8] c"abc\00"


@string.28 =    constant [?? x i8] c"\0aTESTING INDEXING\00"


@string.27 =    constant {i64, i64} { i64 12, i64 ptrtoint ([?? x i8]* @string.26 to i64) }


@string.26 =    constant [?? x i8] c"abcdefghijkl\00"


@string.25 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.24 to i64) }


@string.24 =    constant [?? x i8] c"abc\00"


@string.23 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.22 to i64) }


@string.22 =    constant [?? x i8] c"abc\00"


@string.21 =    constant [?? x i8] c"\0aTESTING LOOPS\00"


@string.20 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.19 to i64) }


@string.19 =    constant [?? x i8] c"abc\00"


@string.18 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.17 to i64) }


@string.17 =    constant [?? x i8] c"efg\00"


@string.16 =    constant [?? x i8] c"\0aTESTING CONVERSION TO c_string\00"


@string.15 =    constant {i64, i64} { i64 9, i64 ptrtoint ([?? x i8]* @string.14 to i64) }


@string.14 =    constant [?? x i8] c"abcdefghi\00"


@string.13 =    constant {i64, i64} { i64 9, i64 ptrtoint ([?? x i8]* @string.12 to i64) }


@string.12 =    constant [?? x i8] c"abcdefghi\00"


@string.11 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.10 to i64) }


@string.10 =    constant [?? x i8] c"abc\00"


@string.9 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.8 to i64) }


@string.8 =    constant [?? x i8] c"abc\00"


@string.7 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @string.6 to i64) }


@string.6 =    constant [?? x i8] c"abc\00"


@string.5 =    constant {i64, i64} { i64 1, i64 ptrtoint ([?? x i8]* @string.4 to i64) }


@string.4 =    constant [?? x i8] c"a\00"


@string.3 =    constant {i64, i64} { i64 0, i64 ptrtoint ([?? x i8]* @string.2 to i64) }


@string.2 =    constant [?? x i8] c"\00"


@string.1 =    constant [?? x i8] c"TESTING CONSTRUCTION\00"


declare external fastcc  {i8, i64, i1} @"wybe.string.[|]<0>"(i64)    


declare external fastcc  {i8, i64, i1} @"wybe.string.[|]<0>[785a827a1b]"(i64)    


declare external fastcc  {i8, i1} @"wybe.string.[]<0>"(i64, i64)    


@string.64 =    constant [?? x i8] c"OUT OF RANGE\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"string.<0>"()    {
entry:
  tail call ccc  void  @print_string(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @string.1, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.3, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.5, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.7, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  %"1#tmp#0##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.9, i32 0, i32 0) to i64), i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.11, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %"1#tmp#0##0")  
  tail call ccc  void  @putchar(i8  10)  
  %"1#tmp#107##0" = shl   i64 97, 2 
  %"1#tmp#108##0" = or i64 %"1#tmp#107##0", 1024 
  %"1#tmp#1##0" = or i64 %"1#tmp#108##0", 3 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %"1#tmp#1##0")  
  tail call ccc  void  @putchar(i8  10)  
  %"1#tmp#3##0" = tail call fastcc  i64  @"wybe.range.construct<0>"(i64  1, i64  3, i64  100)  
  %"1#tmp#2##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.13, i32 0, i32 0) to i64), i64  %"1#tmp#3##0")  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %"1#tmp#2##0")  
  tail call ccc  void  @putchar(i8  10)  
  %"1#tmp#6##0" = tail call fastcc  i64  @"wybe.range.construct<0>"(i64  1, i64  3, i64  100)  
  %"1#tmp#5##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.15, i32 0, i32 0) to i64), i64  %"1#tmp#6##0")  
  %"1#tmp#7##0" = tail call fastcc  i64  @"wybe.range...<0>"(i64  1, i64  3)  
  %"1#tmp#4##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  %"1#tmp#5##0", i64  %"1#tmp#7##0")  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %"1#tmp#4##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_string(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @string.16, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  %"1#tmp#71##0" = shl   i64 100, 2 
  %"1#tmp#72##0" = or i64 %"1#tmp#71##0", 1024 
  %"1#tmp#10##0" = or i64 %"1#tmp#72##0", 3 
  %"1#tmp#12##0" = tail call fastcc  i64  @"wybe.range...<0>"(i64  1, i64  2)  
  %"1#tmp#11##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.18, i32 0, i32 0) to i64), i64  %"1#tmp#12##0")  
  %"1#tmp#9##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %"1#tmp#10##0", i64  %"1#tmp#11##0")  
  %"1#tmp#8##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.20, i32 0, i32 0) to i64), i64  %"1#tmp#9##0")  
  %"1#r##0" = tail call fastcc  i64  @"wybe.string.c_string<0>"(i64  %"1#tmp#8##0")  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %"1#tmp#8##0")  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @print_string(i64  %"1#r##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_string(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @string.21, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"string.gen#1<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.23, i32 0, i32 0) to i64), i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.25, i32 0, i32 0) to i64))  
  %"1#tmp#14##0" = tail call fastcc  i64  @"wybe.range.irange<0>"(i64  10, i64  -1, i64  1)  
  %"1#tmp#13##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.27, i32 0, i32 0) to i64), i64  %"1#tmp#14##0")  
  tail call fastcc  void  @"string.gen#1<0>"(i64  %"1#tmp#13##0", i64  %"1#tmp#13##0")  
  tail call ccc  void  @print_string(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @string.28, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"string.test_index<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.30, i32 0, i32 0) to i64), i64  0)  
  tail call fastcc  void  @"string.test_index<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.32, i32 0, i32 0) to i64), i64  1)  
  tail call fastcc  void  @"string.test_index<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.34, i32 0, i32 0) to i64), i64  25)  
  %"1#tmp#15##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.36, i32 0, i32 0) to i64), i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.38, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#15##0", i64  1)  
  %"1#tmp#16##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.40, i32 0, i32 0) to i64), i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.42, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#16##0", i64  2)  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#1##0", i64  0)  
  %"1#tmp#19##0" = tail call fastcc  i64  @"wybe.range.construct<0>"(i64  0, i64  2, i64  10)  
  %"1#tmp#18##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.44, i32 0, i32 0) to i64), i64  %"1#tmp#19##0")  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#18##0", i64  0)  
  tail call fastcc  void  @"string.test_index<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.46, i32 0, i32 0) to i64), i64  3)  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#1##0", i64  3)  
  tail call fastcc  void  @"string.test_index<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.48, i32 0, i32 0) to i64), i64  -3)  
  %"1#tmp#22##0" = tail call fastcc  i64  @"wybe.range.construct<0>"(i64  0, i64  2, i64  10)  
  %"1#tmp#21##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.50, i32 0, i32 0) to i64), i64  %"1#tmp#22##0")  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#21##0", i64  2)  
  %"1#tmp#23##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @string.52, i32 0, i32 0) to i64), i64  %"1#tmp#1##0")  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#23##0", i64  2)  
  %"1#tmp#110##0" = shl   i64 98, 2 
  %"1#tmp#111##0" = or i64 %"1#tmp#110##0", 1024 
  %"1#tmp#29##0" = or i64 %"1#tmp#111##0", 3 
  %"1#tmp#113##0" = shl   i64 99, 2 
  %"1#tmp#114##0" = or i64 %"1#tmp#113##0", 1024 
  %"1#tmp#30##0" = or i64 %"1#tmp#114##0", 3 
  %"1#tmp#28##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %"1#tmp#29##0", i64  %"1#tmp#30##0")  
  %"1#tmp#26##0" = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %"1#tmp#1##0", i64  %"1#tmp#28##0")  
  %"1#tmp#31##0" = tail call fastcc  i64  @"wybe.range...<0>"(i64  0, i64  2)  
  %"1#tmp#25##0" = tail call fastcc  i64  @"wybe.string.[]<1>"(i64  %"1#tmp#26##0", i64  %"1#tmp#31##0")  
  tail call fastcc  void  @"string.test_index<0>"(i64  %"1#tmp#25##0", i64  1)  
  ret void 
}


define external fastcc  void @"string.gen#1<0>"(i64  %"s##0", i64  %"tmp#0##0")    {
entry:
  %53 = tail call fastcc  {i8, i64, i1}  @"wybe.string.[|]<0>"(i64  %"tmp#0##0")  
  %54 = extractvalue {i8, i64, i1} %53, 0 
  %55 = extractvalue {i8, i64, i1} %53, 1 
  %56 = extractvalue {i8, i64, i1} %53, 2 
  br i1 %56, label %if.then, label %if.else 
if.then:
  tail call ccc  void  @putchar(i8  %54)  
  tail call fastcc  void  @"string.gen#1<0>[6dacb8fd25]"(i64  %"s##0", i64  %55)  
  ret void 
if.else:
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"string.gen#1<0>[6dacb8fd25]"(i64  %"s##0", i64  %"tmp#0##0")    {
entry:
  %57 = tail call fastcc  {i8, i64, i1}  @"wybe.string.[|]<0>[785a827a1b]"(i64  %"tmp#0##0")  
  %58 = extractvalue {i8, i64, i1} %57, 0 
  %59 = extractvalue {i8, i64, i1} %57, 1 
  %60 = extractvalue {i8, i64, i1} %57, 2 
  br i1 %60, label %if.then, label %if.else 
if.then:
  tail call ccc  void  @putchar(i8  %58)  
  tail call fastcc  void  @"string.gen#1<0>[6dacb8fd25]"(i64  %"s##0", i64  %59)  
  ret void 
if.else:
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"string.print_loop<0>"(i64  %"s##0")    {
entry:
  tail call fastcc  void  @"string.gen#1<0>"(i64  %"s##0", i64  %"s##0")  
  ret void 
}


define external fastcc  void @"string.test_index<0>"(i64  %"s##0", i64  %"i##0")    {
entry:
  %61 = tail call fastcc  {i8, i1}  @"wybe.string.[]<0>"(i64  %"s##0", i64  %"i##0")  
  %62 = extractvalue {i8, i1} %61, 0 
  %63 = extractvalue {i8, i1} %61, 1 
  br i1 %63, label %if.then, label %if.else 
if.then:
  tail call ccc  void  @putchar(i8  %62)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
if.else:
  tail call ccc  void  @print_string(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @string.64, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}
