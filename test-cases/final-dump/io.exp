======================================================================
AFTER EVERYTHING:
 Module io
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : io.<0>
                    io.myprint_a<0>
                    io.myprint_b<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: io.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io:nn:nn
    foreign c print_int(100:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign c print_int(200:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#7##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


myprint_a > public {inline} (1 calls)
0: io.myprint_a<0>
myprint_a(x##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io:nn:nn
    foreign c print_int(~x##0:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


myprint_b > public {inline} (1 calls)
0: io.myprint_b<0>
myprint_b(x##0:wybe.int, ?y##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io:nn:nn
    foreign c print_int(~x##0:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign llvm move(200:wybe.int, ?y##0:wybe.int) @io:nn:nn

  LLVM code       :

; ModuleID = 'io'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"io.<0>"()    {
entry:
  tail call ccc  void  @print_int(i64  100)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  200)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"io.myprint_a<0>"(i64  %"x##0")    {
entry:
  tail call ccc  void  @print_int(i64  %"x##0")  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  i64 @"io.myprint_b<0>"(i64  %"x##0")    {
entry:
  tail call ccc  void  @print_int(i64  %"x##0")  
  tail call ccc  void  @putchar(i8  10)  
  ret i64 200 
}
