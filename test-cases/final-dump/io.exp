======================================================================
AFTER EVERYTHING:
 Module io
  public submods  : 
  public types    : 
  public resources: 
  public procs    : io.<0>
                    io.myprint_a<0>
                    io.myprint_b<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public inline (0 calls)
0: (argc#0:wybe.int, [?argc#0:wybe.int], argv#0:wybe.int, [?argv#0:wybe.int], exit_code#0:wybe.int, [?exit_code#0:wybe.int], io#0:wybe.phantom, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_int(100:wybe.int, ~#io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn
    foreign c print_int(200:wybe.int, ~#io#1:wybe.phantom, ?tmp$5#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$5#0:wybe.phantom, ?#io#2:wybe.phantom) @wybe:nn:nn


myprint_a > public inline (1 calls)
0: myprint_a(x#0:wybe.int, io#0:wybe.phantom, ?io#1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_int(~x#0:wybe.int, ~#io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn


myprint_b > public inline (1 calls)
0: myprint_b(x#0:wybe.int, ?y#0:wybe.int, io#0:wybe.phantom, ?io#1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_int(~x#0:wybe.int, ~#io#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$2#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn
    foreign llvm move(200:wybe.int, ?y#0:wybe.int) @io:7:3

  LLVM code       :

; ModuleID = 'io'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"io.<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  tail call ccc  void  @print_int(i64  100)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  200)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"io.myprint_a<0>"(i64  %"x#0")    {
entry:
  tail call ccc  void  @print_int(i64  %"x#0")  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  i64 @"io.myprint_b<0>"(i64  %"x#0")    {
entry:
  tail call ccc  void  @print_int(i64  %"x#0")  
  tail call ccc  void  @putchar(i8  10)  
  ret i64 200 
}
