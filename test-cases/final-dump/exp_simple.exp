======================================================================
AFTER EVERYTHING:
 Module exp_simple
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : exp_simple.<0>
  imports         : use wybe
  resources       : 
  procs           : 

*main* > public {impure} (0 calls) 
0: exp_simple.<0>
(*#globals##0:wybe.phantom, *?#globals##7:wybe.phantom):
  GlobalFlows: {<<wybe.io.io>>::{FlowIn, FlowOut}} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#8##0:wybe.phantom, ~*#globals##0:wybe.phantom, ?*#globals##2:wybe.phantom)
    foreign c print_int(3:wybe.int, ~%tmp#8##0:wybe.phantom, ?%tmp#10##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~%tmp#10##0:wybe.phantom, ?%tmp#11##0:wybe.phantom) @io:nn:nn
    foreign c print_float(3.5999999999999996:wybe.float, ~%tmp#11##0:wybe.phantom, ?%tmp#18##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~%tmp#18##0:wybe.phantom, ?%tmp#19##0:wybe.phantom) @io:nn:nn
    foreign c putchar('h':wybe.char, ~%tmp#19##0:wybe.phantom, ?%tmp#24##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~%tmp#24##0:wybe.phantom, ?%tmp#25##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#25##0:wybe.phantom, ~*#globals##2:wybe.phantom, ?*#globals##3:wybe.phantom)
    wybe.string.print_string<0>("hello":wybe.string, ~*#globals##3:wybe.phantom, ?*#globals##4:wybe.phantom) #12 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#32##0:wybe.phantom, ~*#globals##4:wybe.phantom, ?*#globals##6:wybe.phantom)
    foreign c print_int(3:wybe.int, ~%tmp#32##0:wybe.phantom, ?%tmp#34##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~%tmp#34##0:wybe.phantom, ?%tmp#35##0:wybe.phantom) @io:nn:nn
    foreign c print_int(1001:wybe.int, ~%tmp#35##0:wybe.phantom, ?%tmp#41##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~%tmp#41##0:wybe.phantom, ?%tmp#42##0:wybe.phantom) @io:nn:nn
    foreign c print_int(3:wybe.int, ~%tmp#42##0:wybe.phantom, ?%tmp#47##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#47##0:wybe.phantom, ~*#globals##6:wybe.phantom, ?*#globals##7:wybe.phantom)


foreign_add > {inline} (1 calls) 
0: exp_simple.foreign_add<0>
foreign_add(?#result##0:wybe.int):
  GlobalFlows: {} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(3:wybe.int, ?#result##0:wybe.int) @exp_simple:nn:nn

  LLVM code       :

; ModuleID = 'exp_simple'


 


declare external ccc  void @print_int(i64)    


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


declare external ccc  void @print_float(double)    


@exp_simple.2 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @exp_simple.1 to i64) }


@exp_simple.1 =    constant [?? x i8] c"hello\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"exp_simple.<0>"()    {
entry:
  tail call ccc  void  @print_int(i64  3)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_float(double  3.600000e0)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @exp_simple.2, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_int(i64  3)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  1001)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  3)  
  ret void 
}


define external fastcc  i64 @"exp_simple.foreign_add<0>"()    {
entry:
  ret i64 3 
}
