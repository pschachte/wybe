======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module exp_simple
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : exp_simple.<0>
  constants       : 0:: CStringInfo {cstringChars = "hello"}
                    1:: StructInfo {structSize = 16, structData = [IntStructMember 5 8,PointerStructMember c"hello"]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: exp_simple.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#8##0:wybe.phantom) @exp_simple:nn:nn
    foreign c print_int(3:wybe.int, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @exp_simple:nn:nn
    foreign c print_float(3.5999999999999996:wybe.float, ~tmp#10##0:wybe.phantom, ?tmp#15##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#15##0:wybe.phantom, ?tmp#16##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(104:wybe.char, ~tmp#16##0:wybe.phantom, ?tmp#19##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#19##0:wybe.phantom, ?tmp#20##0:wybe.phantom) @exp_simple:nn:nn
    foreign lpvm store(~%tmp#20##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @exp_simple:nn:nn
    wybe.string.print<0>("hello":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #6 @exp_simple:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#28##0:wybe.phantom) @exp_simple:nn:nn
    foreign c print_int(3:wybe.int, ~tmp#28##0:wybe.phantom, ?tmp#29##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#29##0:wybe.phantom, ?tmp#30##0:wybe.phantom) @exp_simple:nn:nn
    foreign c print_int(1001:wybe.int, ~tmp#30##0:wybe.phantom, ?tmp#34##0:wybe.phantom) @exp_simple:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#34##0:wybe.phantom, ?tmp#35##0:wybe.phantom) @exp_simple:nn:nn
    foreign c print_int(3:wybe.int, ~tmp#35##0:wybe.phantom, ?tmp#38##0:wybe.phantom) @exp_simple:nn:nn
    foreign lpvm store(~%tmp#38##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @exp_simple:nn:nn


proc foreign_add > {inline} (1 calls)
0: exp_simple.foreign_add<0>
foreign_add(?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(3:wybe.int, ?#result##0:wybe.int) @exp_simple:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'exp_simple'

source_filename = "!ROOT!/final-dump/exp_simple.wybe"
target triple    ????

@"exp_simple#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"hello\00", align 8
@"exp_simple#constant#1" = private unnamed_addr constant {i64, ptr} { i64 5, ptr @"exp_simple#constant#0" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @print_float(double)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"exp_simple.<0>"() {
  call ccc void @print_int(i64 3)
  call ccc void @putchar(i8 10)
  call ccc void @print_float(double 3.5999999999999996)
  call ccc void @putchar(i8 10)
  call ccc void @putchar(i8 104)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"exp_simple#constant#1" to i64 ))
  call ccc void @print_int(i64 3)
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 1001)
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 3)
  ret void
}

define external fastcc i64 @"exp_simple.foreign_add<0>"() {
  ret i64 3
}
