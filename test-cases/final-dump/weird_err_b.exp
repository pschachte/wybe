======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module weird_err_b
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : weird_err_b.<0>
  imports         : use weird_err_d
                    use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: weird_err_b.<0>
()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'weird_err_b'

source_filename = "!ROOT!/final-dump/weird_err_b.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"weird_err_b.<0>"() {
  ret void
}

--------------------------------------------------
 Module weird_err_d
  representation  : 0 bit unsigned
  public submods  : a -> weird_err_d.a
                    c -> weird_err_d.c
  public resources: 
  public procs    : weird_err_d.=<0>
                    weird_err_d.empty<0>
                    weird_err_d.~=<0>
  imports         : public use weird_err_d.a
                    public use weird_err_d.c
                    use wybe
  resources       : 
  submodules      : weird_err_d.a, weird_err_d.c
  procs           : 

proc = > public {inline} (1 calls)
0: weird_err_d.=<0>
=([#left##0:weird_err_d], [#right##0:weird_err_d], ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)


proc empty > public {inline} (0 calls)
0: weird_err_d.empty<0>
empty(?#result##0:weird_err_d)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:weird_err_d, ?#result##0:weird_err_d)


proc ~= > public {inline} (0 calls)
0: weird_err_d.~=<0>
~=([#left##0:weird_err_d], [#right##0:weird_err_d], ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'weird_err_d'

source_filename = "!ROOT!/final-dump/weird_err_d.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i1 @"weird_err_d.=<0>"() {
  ret i1 1
}

define external fastcc void @"weird_err_d.empty<0>"() {
  ret void
}

define external fastcc i1 @"weird_err_d.~=<0>"() {
  ret i1 0
}

--------------------------------------------------
 Module weird_err_d.a
  representation  : pointer
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use weird_err_d
                    use wybe
  resources       : 
  procs           : 


  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'weird_err_d.a'

source_filename = "!ROOT!/final-dump/weird_err_d.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

--------------------------------------------------
 Module weird_err_d.c
  representation  : pointer
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use weird_err_d
                    use wybe
  resources       : 
  procs           : 


  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'weird_err_d.c'

source_filename = "!ROOT!/final-dump/weird_err_d.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
