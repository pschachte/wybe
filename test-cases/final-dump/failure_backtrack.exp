======================================================================
AFTER EVERYTHING:
 Module failure_backtrack
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : failure_backtrack.<0>
  imports         : use wybe
  resources       : r: fromList [(failure_backtrack.r,wybe.int @failure_backtrack:nn:nn)]
                    s: fromList [(failure_backtrack.s,wybe.int @failure_backtrack:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: failure_backtrack.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(25,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#143##0:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%tmp#144##0:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(7:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(14:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(42:wybe.int, ?tmp#2##0:wybe.string) #0 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(7:wybe.int, ?tmp#4##0:wybe.string) #1 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#4##0:wybe.string, ?tmp#3##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#2##0:wybe.string, ~tmp#3##0:wybe.string, ?tmp#1##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before conditional: x = ":wybe.string, ~tmp#1##0:wybe.string, ?tmp#0##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#173##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#173##0:wybe.phantom, ?tmp#174##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#174##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.int.fmt<0>(42:wybe.int, ?tmp#7##0:wybe.string) #17 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(7:wybe.int, ?tmp#9##0:wybe.string) #18 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#9##0:wybe.string, ?tmp#8##0:wybe.string) #19 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#7##0:wybe.string, ~tmp#8##0:wybe.string, ?tmp#6##0:wybe.string) #20 @failure_backtrack:nn:nn
    wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#6##0:wybe.string, ?tmp#5##0:wybe.string) #21 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#5##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#178##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#178##0:wybe.phantom, ?tmp#179##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#179##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    failure_backtrack.#cont#1<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #23


proc #cont#1 > (3 calls)
0: failure_backtrack.#cont#1<0>
#cont#1(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#17##0:wybe.string) #0 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#19##0:wybe.string) #1 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#19##0:wybe.string, ?tmp#18##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#17##0:wybe.string, ~tmp#18##0:wybe.string, ?tmp#11##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after conditional; x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#10##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#10##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#171##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#171##0:wybe.phantom, ?tmp#172##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#172##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.,,<0>("before second conditional: x = ":wybe.string, tmp#11##0:wybe.string, ?tmp#15##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#15##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#174##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#174##0:wybe.phantom, ?tmp#147##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#147##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(9:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope2<0>(?x##1:wybe.int, ?tmp#169##0:wybe.bool) #12 @failure_backtrack:nn:nn
    case ~tmp#169##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#11##0:wybe.string, ?tmp#20##0:wybe.string) #19 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#20##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#177##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#177##0:wybe.phantom, ?tmp#178##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#178##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        failure_backtrack.#cont#2<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21

    1:
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#180##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#180##0:wybe.phantom, ?tmp#181##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#181##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        failure_backtrack.#cont#2<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, ~x##1:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#2 > (2 calls)
0: failure_backtrack.#cont#2<0>
#cont#2(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(24,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#32##0:wybe.string) #0 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#148##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~tmp#148##0:wybe.int, ?tmp#34##0:wybe.string) #1 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#34##0:wybe.string, ?tmp#33##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#32##0:wybe.string, ~tmp#33##0:wybe.string, ?tmp#26##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#25##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#25##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #22 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#170##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#170##0:wybe.phantom, ?tmp#171##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#171##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.,,<0>("before third conditional: x = ":wybe.string, tmp#26##0:wybe.string, ?tmp#30##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#30##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#173##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#173##0:wybe.phantom, ?tmp#150##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#150##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    failure_backtrack.nope2<0>(?r##3:wybe.int, ?tmp#168##0:wybe.bool) #12 @failure_backtrack:nn:nn
    case ~tmp#168##0:wybe.bool of
    0:
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#26##0:wybe.string, ?tmp#35##0:wybe.string) #19 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#35##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @string:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#176##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#176##0:wybe.phantom, ?tmp#177##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#177##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        failure_backtrack.#cont#3<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21

    1:
        foreign lpvm store(~%r##3:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @string:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#179##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#179##0:wybe.phantom, ?tmp#180##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#180##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        failure_backtrack.#cont#3<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 25:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#3 > (2 calls)
0: failure_backtrack.#cont#3<0>
#cont#3(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(50,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(51,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(x##0:wybe.int, ?tmp#42##0:wybe.string) #0 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(r##0:wybe.int, ?tmp#44##0:wybe.string) #1 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#44##0:wybe.string, ?tmp#43##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#42##0:wybe.string, ~tmp#43##0:wybe.string, ?tmp#41##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after third conditional; x = ":wybe.string, ~tmp#41##0:wybe.string, ?tmp#40##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#40##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #48 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#169##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#169##0:wybe.phantom, ?tmp#170##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#170##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.int.fmt<0>(y##0:wybe.int, ?tmp#50##0:wybe.string) #7 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(s##0:wybe.int, ?tmp#55##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#55##0:wybe.string, ?tmp#54##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#44##0:wybe.string, ~tmp#54##0:wybe.string, ?tmp#52##0:wybe.string) #11 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#52##0:wybe.string, ?tmp#51##0:wybe.string) #12 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#50##0:wybe.string, ~tmp#51##0:wybe.string, ?tmp#49##0:wybe.string) #13 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#49##0:wybe.string, ?tmp#48##0:wybe.string) #14 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#42##0:wybe.string, ~tmp#48##0:wybe.string, ?tmp#46##0:wybe.string) #15 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before fourth conditional: x = ":wybe.string, tmp#46##0:wybe.string, ?tmp#45##0:wybe.string) #16 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#45##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #49 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#172##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#172##0:wybe.phantom, ?tmp#153##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#153##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(10:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.yup<0>(?tmp#166##0:wybe.bool) #18 @failure_backtrack:nn:nn
    case ~tmp#166##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #45 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #50 @string:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#175##0:wybe.phantom) @io:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#175##0:wybe.phantom, ?tmp#176##0:wybe.phantom) @io:nn:nn
        foreign lpvm store(~%tmp#176##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
        failure_backtrack.#cont#4<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #47

    1:
        foreign lpvm store(41:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.nope<0>(?tmp#167##0:wybe.bool) #19 @failure_backtrack:nn:nn
        case ~tmp#167##0:wybe.bool of
        0:
            foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
            foreign lpvm store(~s##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
            wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#56##0:wybe.string) #32 @failure_backtrack:nn:nn
            wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #51 @string:nn:nn
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#178##0:wybe.phantom) @io:nn:nn
            foreign c putchar('\n':wybe.char, ~tmp#178##0:wybe.phantom, ?tmp#179##0:wybe.phantom) @io:nn:nn
            foreign lpvm store(~%tmp#179##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
            failure_backtrack.#cont#4<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #34

        1:
            wybe.string.print<0>("nope succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #52 @string:nn:nn
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#181##0:wybe.phantom) @io:nn:nn
            foreign c putchar('\n':wybe.char, ~tmp#181##0:wybe.phantom, ?tmp#182##0:wybe.phantom) @io:nn:nn
            foreign lpvm store(~%tmp#182##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
            failure_backtrack.#cont#4<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 26:wybe.int, 12:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21




proc #cont#4 > (3 calls)
0: failure_backtrack.#cont#4<0>
#cont#4(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(28,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(~x##0:wybe.int, ?tmp#80##0:wybe.string) #0 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(y##0:wybe.int, ?tmp#83##0:wybe.string) #1 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#131##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~tmp#131##0:wybe.int, ?tmp#86##0:wybe.string) #2 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(s##0:wybe.int, ?tmp#88##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#88##0:wybe.string, ?tmp#87##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#86##0:wybe.string, ~tmp#87##0:wybe.string, ?tmp#85##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#85##0:wybe.string, ?tmp#84##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#83##0:wybe.string, ~tmp#84##0:wybe.string, ?tmp#82##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#82##0:wybe.string, ?tmp#81##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#80##0:wybe.string, ~tmp#81##0:wybe.string, ?tmp#68##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after fourth conditional; x = ":wybe.string, tmp#68##0:wybe.string, ?tmp#67##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#67##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #27 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#167##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#167##0:wybe.phantom, ?tmp#168##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#168##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.,,<0>("before first disjunction: x = ":wybe.string, ~tmp#68##0:wybe.string, ?tmp#78##0:wybe.string) #22 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#78##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #28 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#170##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#170##0:wybe.phantom, ?tmp#156##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#156##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(11:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(40:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope<0>(?tmp#165##0:wybe.bool) #24 @failure_backtrack:nn:nn
    case ~tmp#165##0:wybe.bool of
    0:
        foreign lpvm store(~s##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
        foreign lpvm store(12:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.#cont#5<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 28:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #26

    1:
        failure_backtrack.#cont#5<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 27:wybe.int, 13:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #25



proc #cont#5 > (2 calls)
0: failure_backtrack.#cont#5<0>
#cont#5(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(29,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(30,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(~x##0:wybe.int, ?tmp#91##0:wybe.string) #0 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~y##0:wybe.int, ?tmp#94##0:wybe.string) #1 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~r##0:wybe.int, ?tmp#97##0:wybe.string) #2 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~s##0:wybe.int, ?tmp#99##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#99##0:wybe.string, ?tmp#98##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#97##0:wybe.string, ~tmp#98##0:wybe.string, ?tmp#96##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#96##0:wybe.string, ?tmp#95##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#94##0:wybe.string, ~tmp#95##0:wybe.string, ?tmp#93##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#93##0:wybe.string, ?tmp#92##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#91##0:wybe.string, ~tmp#92##0:wybe.string, ?tmp#90##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after first disjunction: x = ":wybe.string, ~tmp#90##0:wybe.string, ?tmp#89##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#89##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #29 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#166##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#166##0:wybe.phantom, ?tmp#167##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#167##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(14:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(42:wybe.int, ?tmp#102##0:wybe.string) #12 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(21:wybe.int, ?tmp#105##0:wybe.string) #13 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(7:wybe.int, ?tmp#108##0:wybe.string) #14 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(14:wybe.int, ?tmp#110##0:wybe.string) #15 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#110##0:wybe.string, ?tmp#109##0:wybe.string) #16 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#108##0:wybe.string, ~tmp#109##0:wybe.string, ?tmp#107##0:wybe.string) #17 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#107##0:wybe.string, ?tmp#106##0:wybe.string) #18 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#105##0:wybe.string, ~tmp#106##0:wybe.string, ?tmp#104##0:wybe.string) #19 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#104##0:wybe.string, ?tmp#103##0:wybe.string) #20 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#102##0:wybe.string, ~tmp#103##0:wybe.string, ?tmp#101##0:wybe.string) #21 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before second disjunction: x = ":wybe.string, ~tmp#101##0:wybe.string, ?tmp#100##0:wybe.string) #22 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#100##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #30 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#169##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#169##0:wybe.phantom, ?tmp#162##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#162##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(12:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope<0>(?tmp#164##0:wybe.bool) #24 @failure_backtrack:nn:nn
    case ~tmp#164##0:wybe.bool of
    0:
        foreign lpvm store(7:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.#cont#6<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #28

    1:
        failure_backtrack.#cont#6<0>(~tmp#143##0:wybe.int, ~tmp#144##0:wybe.int, 28:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #25



proc #cont#6 > (3 calls)
0: failure_backtrack.#cont#6<0>
#cont#6(tmp#143##0:wybe.int, tmp#144##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(12,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<0>(~x##0:wybe.int, ?tmp#113##0:wybe.string) #0 @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~y##0:wybe.int, ?tmp#116##0:wybe.string) #1 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~r##0:wybe.int, ?tmp#119##0:wybe.string) #2 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<0>(~s##0:wybe.int, ?tmp#121##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#121##0:wybe.string, ?tmp#120##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#119##0:wybe.string, ~tmp#120##0:wybe.string, ?tmp#118##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#118##0:wybe.string, ?tmp#117##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#116##0:wybe.string, ~tmp#117##0:wybe.string, ?tmp#115##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#115##0:wybe.string, ?tmp#114##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#113##0:wybe.string, ~tmp#114##0:wybe.string, ?tmp#112##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after second disjunction: x = ":wybe.string, ~tmp#112##0:wybe.string, ?tmp#111##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#111##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #12 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#164##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#164##0:wybe.phantom, ?tmp#165##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#165##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#143##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#144##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn


proc nope > {noinline} (15 calls)
0: failure_backtrack.nope<0>
nope(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc nope2 > {noinline} (6 calls)
0: failure_backtrack.nope2<0>
nope2(?value##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(2:wybe.int, ?value##0:wybe.int) @failure_backtrack:nn:nn
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc yup > {noinline} (5 calls)
0: failure_backtrack.yup<0>
yup(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

; ModuleID = 'failure_backtrack'


 


@"resource#failure_backtrack.r" =    global i64 undef


@"resource#failure_backtrack.s" =    global i64 undef


@failure_backtrack.1 =    constant {i64, i64} { i64 6, i64 ptrtoint ([?? x i8]* @failure_backtrack.0 to i64) }


@failure_backtrack.21 =    constant {i64, i64} { i64 6, i64 ptrtoint ([?? x i8]* @failure_backtrack.20 to i64) }


@failure_backtrack.23 =    constant {i64, i64} { i64 6, i64 ptrtoint ([?? x i8]* @failure_backtrack.22 to i64) }


@failure_backtrack.27 =    constant {i64, i64} { i64 14, i64 ptrtoint ([?? x i8]* @failure_backtrack.26 to i64) }


@failure_backtrack.11 =    constant {i64, i64} { i64 15, i64 ptrtoint ([?? x i8]* @failure_backtrack.10 to i64) }


@failure_backtrack.5 =    constant {i64, i64} { i64 16, i64 ptrtoint ([?? x i8]* @failure_backtrack.4 to i64) }


@failure_backtrack.13 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @failure_backtrack.12 to i64) }


@failure_backtrack.7 =    constant {i64, i64} { i64 23, i64 ptrtoint ([?? x i8]* @failure_backtrack.6 to i64) }


@failure_backtrack.3 =    constant {i64, i64} { i64 24, i64 ptrtoint ([?? x i8]* @failure_backtrack.2 to i64) }


@failure_backtrack.19 =    constant {i64, i64} { i64 29, i64 ptrtoint ([?? x i8]* @failure_backtrack.18 to i64) }


@failure_backtrack.33 =    constant {i64, i64} { i64 29, i64 ptrtoint ([?? x i8]* @failure_backtrack.32 to i64) }


@failure_backtrack.15 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @failure_backtrack.14 to i64) }


@failure_backtrack.17 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @failure_backtrack.16 to i64) }


@failure_backtrack.29 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @failure_backtrack.28 to i64) }


@failure_backtrack.31 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @failure_backtrack.30 to i64) }


@failure_backtrack.37 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @failure_backtrack.36 to i64) }


@failure_backtrack.25 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @failure_backtrack.24 to i64) }


@failure_backtrack.35 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @failure_backtrack.34 to i64) }


@failure_backtrack.9 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @failure_backtrack.8 to i64) }


@failure_backtrack.0 =    constant [?? x i8] c", r = \00"


@failure_backtrack.20 =    constant [?? x i8] c", s = \00"


@failure_backtrack.22 =    constant [?? x i8] c", y = \00"


@failure_backtrack.6 =    constant [?? x i8] c"after conditional; x = \00"


@failure_backtrack.32 =    constant [?? x i8] c"after first disjunction: x = \00"


@failure_backtrack.28 =    constant [?? x i8] c"after fourth conditional; x = \00"


@failure_backtrack.14 =    constant [?? x i8] c"after second conditional; x = \00"


@failure_backtrack.36 =    constant [?? x i8] c"after second disjunction: x = \00"


@failure_backtrack.18 =    constant [?? x i8] c"after third conditional; x = \00"


@failure_backtrack.2 =    constant [?? x i8] c"before conditional: x = \00"


@failure_backtrack.30 =    constant [?? x i8] c"before first disjunction: x = \00"


@failure_backtrack.24 =    constant [?? x i8] c"before fourth conditional: x = \00"


@failure_backtrack.8 =    constant [?? x i8] c"before second conditional: x = \00"


@failure_backtrack.34 =    constant [?? x i8] c"before second disjunction: x = \00"


@failure_backtrack.16 =    constant [?? x i8] c"before third conditional: x = \00"


@failure_backtrack.4 =    constant [?? x i8] c"nope fails; x = \00"


@failure_backtrack.26 =    constant [?? x i8] c"nope succeeds!\00"


@failure_backtrack.12 =    constant [?? x i8] c"nope2 fails; x = \00"


@failure_backtrack.10 =    constant [?? x i8] c"nope2 succeeds!\00"


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print<0>[410bae77d3]"(i64)    


declare external fastcc  i64 @"wybe.string.,,<0>"(i64, i64)    


declare external fastcc  i64 @"wybe.int.fmt<0>"(i64)    


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"failure_backtrack.<0>"()    {
entry:
  %0 = load  i64, i64* @"resource#failure_backtrack.r" 
  %1 = load  i64, i64* @"resource#failure_backtrack.s" 
  store  i64 7, i64* @"resource#failure_backtrack.r" 
  store  i64 14, i64* @"resource#failure_backtrack.s" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  42)  
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  7)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %2, i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.3, i32 0, i32 0) to i64), i64  %5)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  %7 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  42)  
  %8 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %7, i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.5, i32 0, i32 0) to i64), i64  %10)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %11)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"failure_backtrack.#cont#1<0>"(i64  %0, i64  %1, i64  42, i64  21)  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#1<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#failure_backtrack.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.7, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.9, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 9, i64* @"resource#failure_backtrack.r" 
  %7 = tail call fastcc  {i64, i1}  @"failure_backtrack.nope2<0>"()  
  %8 = extractvalue {i64, i1} %7, 0 
  %9 = extractvalue {i64, i1} %7, 1 
  br i1 %9, label %if.then, label %if.else 
if.then:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.11, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#2<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %8, i64  %"y##0")  
  ret void 
if.else:
  store  i64 %1, i64* @"resource#failure_backtrack.r" 
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.13, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %10)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#2<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#2<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#failure_backtrack.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.15, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.17, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  %7 = tail call fastcc  {i64, i1}  @"failure_backtrack.nope2<0>"()  
  %8 = extractvalue {i64, i1} %7, 0 
  %9 = extractvalue {i64, i1} %7, 1 
  br i1 %9, label %if.then, label %if.else 
if.then:
  store  i64 %8, i64* @"resource#failure_backtrack.r" 
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.11, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#3<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  25, i64  %"y##0")  
  ret void 
if.else:
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.13, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %10)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#3<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#3<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = load  i64, i64* @"resource#failure_backtrack.r" 
  %2 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %1)  
  %3 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %2)  
  %4 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %3)  
  %5 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.19, i32 0, i32 0) to i64), i64  %4)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %5)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %7 = load  i64, i64* @"resource#failure_backtrack.s" 
  %8 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.21, i32 0, i32 0) to i64), i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %2, i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %6, i64  %11)  
  %13 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.23, i32 0, i32 0) to i64), i64  %12)  
  %14 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %13)  
  %15 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.25, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %15)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 10, i64* @"resource#failure_backtrack.r" 
  %16 = tail call fastcc  i1  @"failure_backtrack.yup<0>"()  
  br i1 %16, label %if.then, label %if.else 
if.then:
  store  i64 41, i64* @"resource#failure_backtrack.s" 
  %17 = tail call fastcc  i1  @"failure_backtrack.nope<0>"()  
  br i1 %17, label %if.then1, label %if.else1 
if.else:
  store  i64 %1, i64* @"resource#failure_backtrack.r" 
  %19 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.5, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %19)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#4<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")  
  ret void 
if.then1:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.27, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#4<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  26, i64  12)  
  ret void 
if.else1:
  store  i64 %1, i64* @"resource#failure_backtrack.r" 
  store  i64 %7, i64* @"resource#failure_backtrack.s" 
  %18 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.5, i32 0, i32 0) to i64), i64  %14)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %18)  
  tail call ccc  void  @putchar(i8  10)  
  musttail call fastcc  void  @"failure_backtrack.#cont#4<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#4<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %2 = load  i64, i64* @"resource#failure_backtrack.r" 
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %2)  
  %4 = load  i64, i64* @"resource#failure_backtrack.s" 
  %5 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.21, i32 0, i32 0) to i64), i64  %5)  
  %7 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %3, i64  %6)  
  %8 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %1, i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.23, i32 0, i32 0) to i64), i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.29, i32 0, i32 0) to i64), i64  %11)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  %13 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.31, i32 0, i32 0) to i64), i64  %11)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %13)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 11, i64* @"resource#failure_backtrack.r" 
  store  i64 40, i64* @"resource#failure_backtrack.s" 
  %14 = tail call fastcc  i1  @"failure_backtrack.nope<0>"()  
  br i1 %14, label %if.then, label %if.else 
if.then:
  musttail call fastcc  void  @"failure_backtrack.#cont#5<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  27, i64  13)  
  ret void 
if.else:
  store  i64 %4, i64* @"resource#failure_backtrack.s" 
  store  i64 12, i64* @"resource#failure_backtrack.r" 
  musttail call fastcc  void  @"failure_backtrack.#cont#5<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  28, i64  %"y##0")  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#5<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %2 = load  i64, i64* @"resource#failure_backtrack.r" 
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %2)  
  %4 = load  i64, i64* @"resource#failure_backtrack.s" 
  %5 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.21, i32 0, i32 0) to i64), i64  %5)  
  %7 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %3, i64  %6)  
  %8 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %1, i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.23, i32 0, i32 0) to i64), i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.33, i32 0, i32 0) to i64), i64  %11)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 14, i64* @"resource#failure_backtrack.s" 
  %13 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  42)  
  %14 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  21)  
  %15 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  7)  
  %16 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  14)  
  %17 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.21, i32 0, i32 0) to i64), i64  %16)  
  %18 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %15, i64  %17)  
  %19 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %18)  
  %20 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %14, i64  %19)  
  %21 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.23, i32 0, i32 0) to i64), i64  %20)  
  %22 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %13, i64  %21)  
  %23 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.35, i32 0, i32 0) to i64), i64  %22)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %23)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 12, i64* @"resource#failure_backtrack.r" 
  %24 = tail call fastcc  i1  @"failure_backtrack.nope<0>"()  
  br i1 %24, label %if.then, label %if.else 
if.then:
  musttail call fastcc  void  @"failure_backtrack.#cont#6<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  28, i64  21)  
  ret void 
if.else:
  store  i64 7, i64* @"resource#failure_backtrack.r" 
  musttail call fastcc  void  @"failure_backtrack.#cont#6<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  42, i64  21)  
  ret void 
}


define external fastcc  void @"failure_backtrack.#cont#6<0>"(i64  %"tmp#143##0", i64  %"tmp#144##0", i64  %"x##0", i64  %"y##0")    {
entry:
  %0 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"x##0")  
  %1 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %"y##0")  
  %2 = load  i64, i64* @"resource#failure_backtrack.r" 
  %3 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %2)  
  %4 = load  i64, i64* @"resource#failure_backtrack.s" 
  %5 = tail call fastcc  i64  @"wybe.int.fmt<0>"(i64  %4)  
  %6 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.21, i32 0, i32 0) to i64), i64  %5)  
  %7 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %3, i64  %6)  
  %8 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.1, i32 0, i32 0) to i64), i64  %7)  
  %9 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %1, i64  %8)  
  %10 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.23, i32 0, i32 0) to i64), i64  %9)  
  %11 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  %0, i64  %10)  
  %12 = tail call fastcc  i64  @"wybe.string.,,<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @failure_backtrack.37, i32 0, i32 0) to i64), i64  %11)  
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 %"tmp#143##0", i64* @"resource#failure_backtrack.r" 
  store  i64 %"tmp#144##0", i64* @"resource#failure_backtrack.s" 
  ret void 
}


define external fastcc  i1 @"failure_backtrack.nope<0>"() noinline   {
entry:
  ret i1 0 
}


define external fastcc  {i64, i1} @"failure_backtrack.nope2<0>"() noinline   {
entry:
  %0 = insertvalue {i64, i1} undef, i64 2, 0 
  %1 = insertvalue {i64, i1} %0, i1 0, 1 
  ret {i64, i1} %1 
}


define external fastcc  i1 @"failure_backtrack.yup<0>"() noinline   {
entry:
  ret i1 1 
}
