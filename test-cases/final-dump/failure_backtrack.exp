======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module failure_backtrack
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : failure_backtrack.<0>
  imports         : use wybe
  resources       : r: fromList [(failure_backtrack.r,wybe.int @failure_backtrack:nn:nn)]
                    s: fromList [(failure_backtrack.s,wybe.int @failure_backtrack:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: failure_backtrack.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(29,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#139##0:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%tmp#140##0:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(7:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(14:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(42:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#2##0:wybe.string) #24 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(7:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#4##0:wybe.string) #25 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#4##0:wybe.string, ?tmp#3##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#2##0:wybe.string, ~tmp#3##0:wybe.string, ?tmp#1##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before conditional: x = ":wybe.string, ~tmp#1##0:wybe.string, ?tmp#0##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #26 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#171##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#171##0:wybe.phantom, ?tmp#172##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#172##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#4##0:wybe.string, ?tmp#8##0:wybe.string) #19 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#2##0:wybe.string, ~tmp#8##0:wybe.string, ?tmp#6##0:wybe.string) #20 @failure_backtrack:nn:nn
    wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#6##0:wybe.string, ?tmp#5##0:wybe.string) #21 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#5##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #29 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#178##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#178##0:wybe.phantom, ?tmp#179##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#179##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    failure_backtrack.#cont#1<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #23


proc #cont#1 > {semipure} (3 calls)
0: failure_backtrack.#cont#1<0>
#cont#1(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(30,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#12##0:wybe.string) #22 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(r##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#14##0:wybe.string) #23 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#14##0:wybe.string, ?tmp#13##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#12##0:wybe.string, ~tmp#13##0:wybe.string, ?tmp#11##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after conditional; x = ":wybe.string, ~tmp#11##0:wybe.string, ?tmp#10##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#10##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#169##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#169##0:wybe.phantom, ?tmp#170##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#170##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#14##0:wybe.string, ?tmp#18##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#12##0:wybe.string, ~tmp#18##0:wybe.string, ?tmp#16##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before second conditional: x = ":wybe.string, ~tmp#16##0:wybe.string, ?tmp#15##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#15##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #27 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#174##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#174##0:wybe.phantom, ?tmp#143##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#143##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(9:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope2<0>(?x##1:wybe.int, ?tmp#165##0:wybe.bool) #12 @failure_backtrack:nn:nn
    case ~tmp#165##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.,,<0>(", r = ":wybe.string, ~tmp#14##0:wybe.string, ?tmp#23##0:wybe.string) #17 @failure_backtrack:nn:nn
        wybe.string.,,<0>(~tmp#12##0:wybe.string, ~tmp#23##0:wybe.string, ?tmp#21##0:wybe.string) #18 @failure_backtrack:nn:nn
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#21##0:wybe.string, ?tmp#20##0:wybe.string) #19 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#20##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #30 @failure_backtrack:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#179##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#179##0:wybe.phantom, ?tmp#180##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign lpvm store(~%tmp#180##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
        failure_backtrack.#cont#2<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21

    1:
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #31 @failure_backtrack:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#182##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#182##0:wybe.phantom, ?tmp#183##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign lpvm store(~%tmp#183##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
        failure_backtrack.#cont#2<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, ~x##1:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#2 > {semipure} (2 calls)
0: failure_backtrack.#cont#2<0>
#cont#2(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(30,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#27##0:wybe.string) #22 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#144##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~tmp#144##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#29##0:wybe.string) #23 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#29##0:wybe.string, ?tmp#28##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#27##0:wybe.string, ~tmp#28##0:wybe.string, ?tmp#26##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after second conditional; x = ":wybe.string, ~tmp#26##0:wybe.string, ?tmp#25##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#25##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#168##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#168##0:wybe.phantom, ?tmp#169##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#169##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#29##0:wybe.string, ?tmp#33##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#27##0:wybe.string, ~tmp#33##0:wybe.string, ?tmp#31##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before third conditional: x = ":wybe.string, ~tmp#31##0:wybe.string, ?tmp#30##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#30##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #27 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#173##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#173##0:wybe.phantom, ?tmp#146##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#146##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    failure_backtrack.nope2<0>(?r##3:wybe.int, ?tmp#164##0:wybe.bool) #12 @failure_backtrack:nn:nn
    case ~tmp#164##0:wybe.bool of
    0:
        wybe.string.,,<0>(", r = ":wybe.string, ~tmp#29##0:wybe.string, ?tmp#38##0:wybe.string) #17 @failure_backtrack:nn:nn
        wybe.string.,,<0>(~tmp#27##0:wybe.string, ~tmp#38##0:wybe.string, ?tmp#36##0:wybe.string) #18 @failure_backtrack:nn:nn
        wybe.string.,,<0>("nope2 fails; x = ":wybe.string, ~tmp#36##0:wybe.string, ?tmp#35##0:wybe.string) #19 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#35##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #30 @failure_backtrack:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#178##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#178##0:wybe.phantom, ?tmp#179##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign lpvm store(~%tmp#179##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
        failure_backtrack.#cont#3<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21

    1:
        foreign lpvm store(~%r##3:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.print<0>("nope2 succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #31 @failure_backtrack:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#181##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#181##0:wybe.phantom, ?tmp#182##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign lpvm store(~%tmp#182##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
        failure_backtrack.#cont#3<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 25:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #14



proc #cont#3 > {semipure} (2 calls)
0: failure_backtrack.#cont#3<0>
#cont#3(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(60,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(65,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#42##0:wybe.string) #48 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(r##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#44##0:wybe.string) #49 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, tmp#44##0:wybe.string, ?tmp#43##0:wybe.string) #2 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#42##0:wybe.string, ~tmp#43##0:wybe.string, ?tmp#41##0:wybe.string) #3 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after third conditional; x = ":wybe.string, ~tmp#41##0:wybe.string, ?tmp#40##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#40##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #50 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#167##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#167##0:wybe.phantom, ?tmp#168##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#168##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(y##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#50##0:wybe.string) #52 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(s##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#55##0:wybe.string) #54 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, tmp#55##0:wybe.string, ?tmp#54##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#44##0:wybe.string, ~tmp#54##0:wybe.string, ?tmp#52##0:wybe.string) #11 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#52##0:wybe.string, ?tmp#51##0:wybe.string) #12 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#50##0:wybe.string, ~tmp#51##0:wybe.string, ?tmp#49##0:wybe.string) #13 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#49##0:wybe.string, ?tmp#48##0:wybe.string) #14 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#42##0:wybe.string, ~tmp#48##0:wybe.string, ?tmp#46##0:wybe.string) #15 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before fourth conditional: x = ":wybe.string, ~tmp#46##0:wybe.string, ?tmp#45##0:wybe.string) #16 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#45##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #55 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#174##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#174##0:wybe.phantom, ?tmp#149##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#149##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(10:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.yup<0>(?tmp#162##0:wybe.bool) #18 @failure_backtrack:nn:nn
    case ~tmp#162##0:wybe.bool of
    0:
        foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        wybe.string.,,<0>(", s = ":wybe.string, ~tmp#55##0:wybe.string, ?tmp#65##0:wybe.string) #39 @failure_backtrack:nn:nn
        wybe.string.,,<0>(~tmp#44##0:wybe.string, ~tmp#65##0:wybe.string, ?tmp#63##0:wybe.string) #40 @failure_backtrack:nn:nn
        wybe.string.,,<0>(", r = ":wybe.string, ~tmp#63##0:wybe.string, ?tmp#62##0:wybe.string) #41 @failure_backtrack:nn:nn
        wybe.string.,,<0>(~tmp#50##0:wybe.string, ~tmp#62##0:wybe.string, ?tmp#60##0:wybe.string) #42 @failure_backtrack:nn:nn
        wybe.string.,,<0>(", y = ":wybe.string, ~tmp#60##0:wybe.string, ?tmp#59##0:wybe.string) #43 @failure_backtrack:nn:nn
        wybe.string.,,<0>(~tmp#42##0:wybe.string, ~tmp#59##0:wybe.string, ?tmp#57##0:wybe.string) #44 @failure_backtrack:nn:nn
        wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#57##0:wybe.string, ?tmp#56##0:wybe.string) #45 @failure_backtrack:nn:nn
        wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #60 @failure_backtrack:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#181##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#181##0:wybe.phantom, ?tmp#182##0:wybe.phantom) @failure_backtrack:nn:nn
        foreign lpvm store(~%tmp#182##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
        failure_backtrack.#cont#4<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #47

    1:
        foreign lpvm store(41:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.nope<0>(?tmp#163##0:wybe.bool) #19 @failure_backtrack:nn:nn
        case ~tmp#163##0:wybe.bool of
        0:
            foreign lpvm store(~r##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
            foreign lpvm store(~s##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
            wybe.string.,,<0>(", s = ":wybe.string, ~tmp#55##0:wybe.string, ?tmp#65##0:wybe.string) #26 @failure_backtrack:nn:nn
            wybe.string.,,<0>(~tmp#44##0:wybe.string, ~tmp#65##0:wybe.string, ?tmp#63##0:wybe.string) #27 @failure_backtrack:nn:nn
            wybe.string.,,<0>(", r = ":wybe.string, ~tmp#63##0:wybe.string, ?tmp#62##0:wybe.string) #28 @failure_backtrack:nn:nn
            wybe.string.,,<0>(~tmp#50##0:wybe.string, ~tmp#62##0:wybe.string, ?tmp#60##0:wybe.string) #29 @failure_backtrack:nn:nn
            wybe.string.,,<0>(", y = ":wybe.string, ~tmp#60##0:wybe.string, ?tmp#59##0:wybe.string) #30 @failure_backtrack:nn:nn
            wybe.string.,,<0>(~tmp#42##0:wybe.string, ~tmp#59##0:wybe.string, ?tmp#57##0:wybe.string) #31 @failure_backtrack:nn:nn
            wybe.string.,,<0>("nope fails; x = ":wybe.string, ~tmp#57##0:wybe.string, ?tmp#56##0:wybe.string) #32 @failure_backtrack:nn:nn
            wybe.string.print<0>[410bae77d3](~tmp#56##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #65 @failure_backtrack:nn:nn
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#188##0:wybe.phantom) @failure_backtrack:nn:nn
            foreign c putchar('\n':wybe.char, ~tmp#188##0:wybe.phantom, ?tmp#189##0:wybe.phantom) @failure_backtrack:nn:nn
            foreign lpvm store(~%tmp#189##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
            failure_backtrack.#cont#4<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, ~x##0:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #34

        1:
            wybe.string.print<0>("nope succeeds!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #66 @failure_backtrack:nn:nn
            foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#191##0:wybe.phantom) @failure_backtrack:nn:nn
            foreign c putchar('\n':wybe.char, ~tmp#191##0:wybe.phantom, ?tmp#192##0:wybe.phantom) @failure_backtrack:nn:nn
            foreign lpvm store(~%tmp#192##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
            failure_backtrack.#cont#4<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 26:wybe.int, 12:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #21




proc #cont#4 > {semipure} (3 calls)
0: failure_backtrack.#cont#4<0>
#cont#4(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(36,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(~x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#69##0:wybe.string) #27 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(y##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#72##0:wybe.string) #28 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%tmp#150##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~tmp#150##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#75##0:wybe.string) #29 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(s##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#77##0:wybe.string) #30 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, tmp#77##0:wybe.string, ?tmp#76##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#75##0:wybe.string, ~tmp#76##0:wybe.string, ?tmp#74##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#74##0:wybe.string, ?tmp#73##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#72##0:wybe.string, ~tmp#73##0:wybe.string, ?tmp#71##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#71##0:wybe.string, ?tmp#70##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(tmp#69##0:wybe.string, ~tmp#70##0:wybe.string, ?tmp#68##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after fourth conditional; x = ":wybe.string, ~tmp#68##0:wybe.string, ?tmp#67##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>(~tmp#67##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #31 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#167##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#167##0:wybe.phantom, ?tmp#168##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#168##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#77##0:wybe.string, ?tmp#87##0:wybe.string) #16 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#75##0:wybe.string, ~tmp#87##0:wybe.string, ?tmp#85##0:wybe.string) #17 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#85##0:wybe.string, ?tmp#84##0:wybe.string) #18 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#72##0:wybe.string, ~tmp#84##0:wybe.string, ?tmp#82##0:wybe.string) #19 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#82##0:wybe.string, ?tmp#81##0:wybe.string) #20 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#69##0:wybe.string, ~tmp#81##0:wybe.string, ?tmp#79##0:wybe.string) #21 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before first disjunction: x = ":wybe.string, ~tmp#79##0:wybe.string, ?tmp#78##0:wybe.string) #22 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#78##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #36 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#174##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#174##0:wybe.phantom, ?tmp#152##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#152##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(11:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(40:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope<0>(?tmp#161##0:wybe.bool) #24 @failure_backtrack:nn:nn
    case ~tmp#161##0:wybe.bool of
    0:
        foreign lpvm store(~s##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
        foreign lpvm store(12:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.#cont#5<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 28:wybe.int, ~y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #26

    1:
        failure_backtrack.#cont#5<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 27:wybe.int, 13:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #25



proc #cont#5 > {semipure} (2 calls)
0: failure_backtrack.#cont#5<0>
#cont#5(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(33,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(38,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(~x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#91##0:wybe.string) #29 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~y##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#94##0:wybe.string) #30 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~r##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#97##0:wybe.string) #31 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~s##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#99##0:wybe.string) #32 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#99##0:wybe.string, ?tmp#98##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#97##0:wybe.string, ~tmp#98##0:wybe.string, ?tmp#96##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#96##0:wybe.string, ?tmp#95##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#94##0:wybe.string, ~tmp#95##0:wybe.string, ?tmp#93##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#93##0:wybe.string, ?tmp#92##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#91##0:wybe.string, ~tmp#92##0:wybe.string, ?tmp#90##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after first disjunction: x = ":wybe.string, ~tmp#90##0:wybe.string, ?tmp#89##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#89##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #33 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#166##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#166##0:wybe.phantom, ?tmp#167##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#167##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(14:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(42:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#102##0:wybe.string) #34 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(21:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#105##0:wybe.string) #35 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(7:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#108##0:wybe.string) #36 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(14:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#110##0:wybe.string) #37 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#110##0:wybe.string, ?tmp#109##0:wybe.string) #16 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#108##0:wybe.string, ~tmp#109##0:wybe.string, ?tmp#107##0:wybe.string) #17 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#107##0:wybe.string, ?tmp#106##0:wybe.string) #18 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#105##0:wybe.string, ~tmp#106##0:wybe.string, ?tmp#104##0:wybe.string) #19 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#104##0:wybe.string, ?tmp#103##0:wybe.string) #20 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#102##0:wybe.string, ~tmp#103##0:wybe.string, ?tmp#101##0:wybe.string) #21 @failure_backtrack:nn:nn
    wybe.string.,,<0>("before second disjunction: x = ":wybe.string, ~tmp#101##0:wybe.string, ?tmp#100##0:wybe.string) #22 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#100##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #38 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#173##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#173##0:wybe.phantom, ?tmp#155##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#155##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(12:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    failure_backtrack.nope<0>(?tmp#160##0:wybe.bool) #24 @failure_backtrack:nn:nn
    case ~tmp#160##0:wybe.bool of
    0:
        foreign lpvm store(13:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
        failure_backtrack.nope<0>(?tmp#159##0:wybe.bool) #26 @failure_backtrack:nn:nn
        case ~tmp#159##0:wybe.bool of
        0:
            foreign lpvm store(7:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
            failure_backtrack.#cont#6<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 42:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #28

        1:
            failure_backtrack.#cont#6<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 29:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #27


    1:
        failure_backtrack.#cont#6<0>(~tmp#139##0:wybe.int, ~tmp#140##0:wybe.int, 28:wybe.int, 21:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}> #25



proc #cont#6 > {semipure} (3 calls)
0: failure_backtrack.#cont#6<0>
#cont#6(tmp#139##0:wybe.int, tmp#140##0:wybe.int, x##0:wybe.int, y##0:wybe.int)<{<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {<<failure_backtrack.r>>, <<failure_backtrack.s>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(16,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.int.fmt<2>(~x##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#113##0:wybe.string) #12 @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~y##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#116##0:wybe.string) #13 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.r>>:wybe.int, ?%r##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~r##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#119##0:wybe.string) #14 @failure_backtrack:nn:nn
    foreign lpvm load(<<failure_backtrack.s>>:wybe.int, ?%s##0:wybe.int) @failure_backtrack:nn:nn
    wybe.int.fmt<2>(~s##0:wybe.int, 0:wybe.int, ' ':wybe.char, ?tmp#121##0:wybe.string) #15 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", s = ":wybe.string, ~tmp#121##0:wybe.string, ?tmp#120##0:wybe.string) #4 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#119##0:wybe.string, ~tmp#120##0:wybe.string, ?tmp#118##0:wybe.string) #5 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", r = ":wybe.string, ~tmp#118##0:wybe.string, ?tmp#117##0:wybe.string) #6 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#116##0:wybe.string, ~tmp#117##0:wybe.string, ?tmp#115##0:wybe.string) #7 @failure_backtrack:nn:nn
    wybe.string.,,<0>(", y = ":wybe.string, ~tmp#115##0:wybe.string, ?tmp#114##0:wybe.string) #8 @failure_backtrack:nn:nn
    wybe.string.,,<0>(~tmp#113##0:wybe.string, ~tmp#114##0:wybe.string, ?tmp#112##0:wybe.string) #9 @failure_backtrack:nn:nn
    wybe.string.,,<0>("after second disjunction: x = ":wybe.string, ~tmp#112##0:wybe.string, ?tmp#111##0:wybe.string) #10 @failure_backtrack:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#111##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #16 @failure_backtrack:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#164##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#164##0:wybe.phantom, ?tmp#165##0:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#165##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#139##0:wybe.int, <<failure_backtrack.r>>:wybe.int) @failure_backtrack:nn:nn
    foreign lpvm store(~%tmp#140##0:wybe.int, <<failure_backtrack.s>>:wybe.int) @failure_backtrack:nn:nn


proc nope > {noinline} (15 calls)
0: failure_backtrack.nope<0>
nope(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc nope2 > {noinline} (6 calls)
0: failure_backtrack.nope2<0>
nope2(?value##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(2:wybe.int, ?value##0:wybe.int) @failure_backtrack:nn:nn
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)


proc yup > {noinline} (5 calls)
0: failure_backtrack.yup<0>
yup(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'failure_backtrack'

source_filename = "!ROOT!/final-dump/failure_backtrack.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c", r = \00", align 8
@"cstring#1" = private unnamed_addr constant [ ?? x i8 ] c", s = \00", align 8
@"cstring#2" = private unnamed_addr constant [ ?? x i8 ] c", y = \00", align 8
@"cstring#3" = private unnamed_addr constant [ ?? x i8 ] c"after conditional; x = \00", align 8
@"cstring#4" = private unnamed_addr constant [ ?? x i8 ] c"after first disjunction: x = \00", align 8
@"cstring#5" = private unnamed_addr constant [ ?? x i8 ] c"after fourth conditional; x = \00", align 8
@"cstring#6" = private unnamed_addr constant [ ?? x i8 ] c"after second conditional; x = \00", align 8
@"cstring#7" = private unnamed_addr constant [ ?? x i8 ] c"after second disjunction: x = \00", align 8
@"cstring#8" = private unnamed_addr constant [ ?? x i8 ] c"after third conditional; x = \00", align 8
@"cstring#9" = private unnamed_addr constant [ ?? x i8 ] c"before conditional: x = \00", align 8
@"cstring#10" = private unnamed_addr constant [ ?? x i8 ] c"before first disjunction: x = \00", align 8
@"cstring#11" = private unnamed_addr constant [ ?? x i8 ] c"before fourth conditional: x = \00", align 8
@"cstring#12" = private unnamed_addr constant [ ?? x i8 ] c"before second conditional: x = \00", align 8
@"cstring#13" = private unnamed_addr constant [ ?? x i8 ] c"before second disjunction: x = \00", align 8
@"cstring#14" = private unnamed_addr constant [ ?? x i8 ] c"before third conditional: x = \00", align 8
@"cstring#15" = private unnamed_addr constant [ ?? x i8 ] c"nope fails; x = \00", align 8
@"cstring#16" = private unnamed_addr constant [ ?? x i8 ] c"nope succeeds!\00", align 8
@"cstring#17" = private unnamed_addr constant [ ?? x i8 ] c"nope2 fails; x = \00", align 8
@"cstring#18" = private unnamed_addr constant [ ?? x i8 ] c"nope2 succeeds!\00", align 8
@"string#19" = private unnamed_addr constant {i64, i64} { i64 6, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8
@"string#20" = private unnamed_addr constant {i64, i64} { i64 6, i64 ptrtoint( ptr @"cstring#1" to i64 ) }, align 8
@"string#21" = private unnamed_addr constant {i64, i64} { i64 6, i64 ptrtoint( ptr @"cstring#2" to i64 ) }, align 8
@"string#22" = private unnamed_addr constant {i64, i64} { i64 23, i64 ptrtoint( ptr @"cstring#3" to i64 ) }, align 8
@"string#23" = private unnamed_addr constant {i64, i64} { i64 29, i64 ptrtoint( ptr @"cstring#4" to i64 ) }, align 8
@"string#24" = private unnamed_addr constant {i64, i64} { i64 30, i64 ptrtoint( ptr @"cstring#5" to i64 ) }, align 8
@"string#25" = private unnamed_addr constant {i64, i64} { i64 30, i64 ptrtoint( ptr @"cstring#6" to i64 ) }, align 8
@"string#26" = private unnamed_addr constant {i64, i64} { i64 30, i64 ptrtoint( ptr @"cstring#7" to i64 ) }, align 8
@"string#27" = private unnamed_addr constant {i64, i64} { i64 29, i64 ptrtoint( ptr @"cstring#8" to i64 ) }, align 8
@"string#28" = private unnamed_addr constant {i64, i64} { i64 24, i64 ptrtoint( ptr @"cstring#9" to i64 ) }, align 8
@"string#29" = private unnamed_addr constant {i64, i64} { i64 30, i64 ptrtoint( ptr @"cstring#10" to i64 ) }, align 8
@"string#30" = private unnamed_addr constant {i64, i64} { i64 31, i64 ptrtoint( ptr @"cstring#11" to i64 ) }, align 8
@"string#31" = private unnamed_addr constant {i64, i64} { i64 31, i64 ptrtoint( ptr @"cstring#12" to i64 ) }, align 8
@"string#32" = private unnamed_addr constant {i64, i64} { i64 31, i64 ptrtoint( ptr @"cstring#13" to i64 ) }, align 8
@"string#33" = private unnamed_addr constant {i64, i64} { i64 30, i64 ptrtoint( ptr @"cstring#14" to i64 ) }, align 8
@"string#34" = private unnamed_addr constant {i64, i64} { i64 16, i64 ptrtoint( ptr @"cstring#15" to i64 ) }, align 8
@"string#35" = private unnamed_addr constant {i64, i64} { i64 14, i64 ptrtoint( ptr @"cstring#16" to i64 ) }, align 8
@"string#36" = private unnamed_addr constant {i64, i64} { i64 17, i64 ptrtoint( ptr @"cstring#17" to i64 ) }, align 8
@"string#37" = private unnamed_addr constant {i64, i64} { i64 15, i64 ptrtoint( ptr @"cstring#18" to i64 ) }, align 8

declare external fastcc i64 @"wybe.int.fmt<2>"(i64, i64, i8)
declare external fastcc i64 @"wybe.string.,,<0>"(i64, i64)
declare external fastcc void @"wybe.string.print<0>"(i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#failure_backtrack.r" = global i64 undef
@"resource#failure_backtrack.s" = global i64 undef

define external fastcc void @"failure_backtrack.<0>"() {
  %"tmp#139##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#140##0" = load i64, ptr @"resource#failure_backtrack.s"
  store i64 7, ptr @"resource#failure_backtrack.r"
  store i64 14, ptr @"resource#failure_backtrack.s"
  %"tmp#2##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 42, i64 0, i8 32)
  %"tmp#4##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 7, i64 0, i8 32)
  %"tmp#3##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#4##0")
  %"tmp#1##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#2##0", i64 %"tmp#3##0")
  %"tmp#0##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#28" to i64 ), i64 %"tmp#1##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  %"tmp#8##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#4##0")
  %"tmp#6##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#2##0", i64 %"tmp#8##0")
  %"tmp#5##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#34" to i64 ), i64 %"tmp#6##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#5##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#1<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 42, i64 21)
  ret void
}

define external fastcc void @"failure_backtrack.#cont#1<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#12##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"r##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#14##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"r##0", i64 0, i8 32)
  %"tmp#13##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#14##0")
  %"tmp#11##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#12##0", i64 %"tmp#13##0")
  %"tmp#10##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#22" to i64 ), i64 %"tmp#11##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#10##0")
  call ccc void @putchar(i8 10)
  %"tmp#18##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#14##0")
  %"tmp#16##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#12##0", i64 %"tmp#18##0")
  %"tmp#15##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#31" to i64 ), i64 %"tmp#16##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#15##0")
  call ccc void @putchar(i8 10)
  store i64 9, ptr @"resource#failure_backtrack.r"
  %"tmp#184##0" = tail call fastcc {i64, i1} @"failure_backtrack.nope2<0>"()
  %"x##1" = extractvalue {i64, i1}%"tmp#184##0", 0
  %"tmp#165##0" = extractvalue {i64, i1}%"tmp#184##0", 1
  br i1 %"tmp#165##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#37" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#2<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##1", i64 %"y##0")
  ret void
if.else.0:
  store i64 %"r##0", ptr @"resource#failure_backtrack.r"
  %"tmp#23##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#14##0")
  %"tmp#21##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#12##0", i64 %"tmp#23##0")
  %"tmp#20##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#36" to i64 ), i64 %"tmp#21##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#20##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#2<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0")
  ret void
}

define external fastcc void @"failure_backtrack.#cont#2<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#27##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"tmp#144##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#29##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"tmp#144##0", i64 0, i8 32)
  %"tmp#28##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#29##0")
  %"tmp#26##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#27##0", i64 %"tmp#28##0")
  %"tmp#25##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#25" to i64 ), i64 %"tmp#26##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#25##0")
  call ccc void @putchar(i8 10)
  %"tmp#33##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#29##0")
  %"tmp#31##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#27##0", i64 %"tmp#33##0")
  %"tmp#30##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#33" to i64 ), i64 %"tmp#31##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#30##0")
  call ccc void @putchar(i8 10)
  %"tmp#183##0" = tail call fastcc {i64, i1} @"failure_backtrack.nope2<0>"()
  %"r##3" = extractvalue {i64, i1}%"tmp#183##0", 0
  %"tmp#164##0" = extractvalue {i64, i1}%"tmp#183##0", 1
  br i1 %"tmp#164##0", label %if.then.0, label %if.else.0
if.then.0:
  store i64 %"r##3", ptr @"resource#failure_backtrack.r"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#37" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#3<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 25, i64 %"y##0")
  ret void
if.else.0:
  %"tmp#38##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#29##0")
  %"tmp#36##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#27##0", i64 %"tmp#38##0")
  %"tmp#35##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#36" to i64 ), i64 %"tmp#36##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#35##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#3<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0")
  ret void
}

define external fastcc void @"failure_backtrack.#cont#3<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#42##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"r##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#44##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"r##0", i64 0, i8 32)
  %"tmp#43##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#44##0")
  %"tmp#41##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#42##0", i64 %"tmp#43##0")
  %"tmp#40##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#27" to i64 ), i64 %"tmp#41##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#40##0")
  call ccc void @putchar(i8 10)
  %"tmp#50##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"y##0", i64 0, i8 32)
  %"s##0" = load i64, ptr @"resource#failure_backtrack.s"
  %"tmp#55##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"s##0", i64 0, i8 32)
  %"tmp#54##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#55##0")
  %"tmp#52##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#44##0", i64 %"tmp#54##0")
  %"tmp#51##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#52##0")
  %"tmp#49##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#50##0", i64 %"tmp#51##0")
  %"tmp#48##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#49##0")
  %"tmp#46##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#42##0", i64 %"tmp#48##0")
  %"tmp#45##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#30" to i64 ), i64 %"tmp#46##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#45##0")
  call ccc void @putchar(i8 10)
  store i64 10, ptr @"resource#failure_backtrack.r"
  %"tmp#162##0" = tail call fastcc i1 @"failure_backtrack.yup<0>"()
  br i1 %"tmp#162##0", label %if.then.0, label %if.else.0
if.then.0:
  store i64 41, ptr @"resource#failure_backtrack.s"
  %"tmp#163##0" = tail call fastcc i1 @"failure_backtrack.nope<0>"()
  br i1 %"tmp#163##0", label %if.then.1, label %if.else.1
if.then.1:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#35" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#4<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 26, i64 12)
  ret void
if.else.1:
  store i64 %"r##0", ptr @"resource#failure_backtrack.r"
  store i64 %"s##0", ptr @"resource#failure_backtrack.s"
  %"tmp#65##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#55##0")
  %"tmp#63##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#44##0", i64 %"tmp#65##0")
  %"tmp#62##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#63##0")
  %"tmp#60##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#50##0", i64 %"tmp#62##0")
  %"tmp#59##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#60##0")
  %"tmp#57##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#42##0", i64 %"tmp#59##0")
  %"tmp#56##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#34" to i64 ), i64 %"tmp#57##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#56##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#4<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0")
  ret void
if.else.0:
  store i64 %"r##0", ptr @"resource#failure_backtrack.r"
  %"tmp#193##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#55##0")
  %"tmp#194##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#44##0", i64 %"tmp#193##0")
  %"tmp#195##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#194##0")
  %"tmp#196##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#50##0", i64 %"tmp#195##0")
  %"tmp#197##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#196##0")
  %"tmp#198##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#42##0", i64 %"tmp#197##0")
  %"tmp#199##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#34" to i64 ), i64 %"tmp#198##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#199##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"failure_backtrack.#cont#4<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0")
  ret void
}

define external fastcc void @"failure_backtrack.#cont#4<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#69##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"tmp#72##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"y##0", i64 0, i8 32)
  %"tmp#150##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#75##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"tmp#150##0", i64 0, i8 32)
  %"s##0" = load i64, ptr @"resource#failure_backtrack.s"
  %"tmp#77##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"s##0", i64 0, i8 32)
  %"tmp#76##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#77##0")
  %"tmp#74##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#75##0", i64 %"tmp#76##0")
  %"tmp#73##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#74##0")
  %"tmp#71##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#72##0", i64 %"tmp#73##0")
  %"tmp#70##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#71##0")
  %"tmp#68##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#69##0", i64 %"tmp#70##0")
  %"tmp#67##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#24" to i64 ), i64 %"tmp#68##0")
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#67##0")
  call ccc void @putchar(i8 10)
  %"tmp#87##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#77##0")
  %"tmp#85##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#75##0", i64 %"tmp#87##0")
  %"tmp#84##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#85##0")
  %"tmp#82##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#72##0", i64 %"tmp#84##0")
  %"tmp#81##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#82##0")
  %"tmp#79##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#69##0", i64 %"tmp#81##0")
  %"tmp#78##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#29" to i64 ), i64 %"tmp#79##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#78##0")
  call ccc void @putchar(i8 10)
  store i64 11, ptr @"resource#failure_backtrack.r"
  store i64 40, ptr @"resource#failure_backtrack.s"
  %"tmp#161##0" = tail call fastcc i1 @"failure_backtrack.nope<0>"()
  br i1 %"tmp#161##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"failure_backtrack.#cont#5<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 27, i64 13)
  ret void
if.else.0:
  store i64 %"s##0", ptr @"resource#failure_backtrack.s"
  store i64 12, ptr @"resource#failure_backtrack.r"
  tail call fastcc void @"failure_backtrack.#cont#5<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 28, i64 %"y##0")
  ret void
}

define external fastcc void @"failure_backtrack.#cont#5<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#91##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"tmp#94##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"y##0", i64 0, i8 32)
  %"r##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#97##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"r##0", i64 0, i8 32)
  %"s##0" = load i64, ptr @"resource#failure_backtrack.s"
  %"tmp#99##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"s##0", i64 0, i8 32)
  %"tmp#98##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#99##0")
  %"tmp#96##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#97##0", i64 %"tmp#98##0")
  %"tmp#95##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#96##0")
  %"tmp#93##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#94##0", i64 %"tmp#95##0")
  %"tmp#92##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#93##0")
  %"tmp#90##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#91##0", i64 %"tmp#92##0")
  %"tmp#89##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#23" to i64 ), i64 %"tmp#90##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#89##0")
  call ccc void @putchar(i8 10)
  store i64 14, ptr @"resource#failure_backtrack.s"
  %"tmp#102##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 42, i64 0, i8 32)
  %"tmp#105##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 21, i64 0, i8 32)
  %"tmp#108##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 7, i64 0, i8 32)
  %"tmp#110##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 14, i64 0, i8 32)
  %"tmp#109##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#110##0")
  %"tmp#107##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#108##0", i64 %"tmp#109##0")
  %"tmp#106##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#107##0")
  %"tmp#104##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#105##0", i64 %"tmp#106##0")
  %"tmp#103##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#104##0")
  %"tmp#101##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#102##0", i64 %"tmp#103##0")
  %"tmp#100##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#32" to i64 ), i64 %"tmp#101##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#100##0")
  call ccc void @putchar(i8 10)
  store i64 12, ptr @"resource#failure_backtrack.r"
  %"tmp#160##0" = tail call fastcc i1 @"failure_backtrack.nope<0>"()
  br i1 %"tmp#160##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"failure_backtrack.#cont#6<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 28, i64 21)
  ret void
if.else.0:
  store i64 13, ptr @"resource#failure_backtrack.r"
  %"tmp#159##0" = tail call fastcc i1 @"failure_backtrack.nope<0>"()
  br i1 %"tmp#159##0", label %if.then.1, label %if.else.1
if.then.1:
  tail call fastcc void @"failure_backtrack.#cont#6<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 29, i64 21)
  ret void
if.else.1:
  store i64 7, ptr @"resource#failure_backtrack.r"
  tail call fastcc void @"failure_backtrack.#cont#6<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 42, i64 21)
  ret void
}

define external fastcc void @"failure_backtrack.#cont#6<0>"(i64 %"tmp#139##0", i64 %"tmp#140##0", i64 %"x##0", i64 %"y##0") {
  %"tmp#113##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"x##0", i64 0, i8 32)
  %"tmp#116##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"y##0", i64 0, i8 32)
  %"r##0" = load i64, ptr @"resource#failure_backtrack.r"
  %"tmp#119##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"r##0", i64 0, i8 32)
  %"s##0" = load i64, ptr @"resource#failure_backtrack.s"
  %"tmp#121##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"s##0", i64 0, i8 32)
  %"tmp#120##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#20" to i64 ), i64 %"tmp#121##0")
  %"tmp#118##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#119##0", i64 %"tmp#120##0")
  %"tmp#117##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#19" to i64 ), i64 %"tmp#118##0")
  %"tmp#115##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#116##0", i64 %"tmp#117##0")
  %"tmp#114##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#21" to i64 ), i64 %"tmp#115##0")
  %"tmp#112##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#113##0", i64 %"tmp#114##0")
  %"tmp#111##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string#26" to i64 ), i64 %"tmp#112##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#111##0")
  call ccc void @putchar(i8 10)
  store i64 %"tmp#139##0", ptr @"resource#failure_backtrack.r"
  store i64 %"tmp#140##0", ptr @"resource#failure_backtrack.s"
  ret void
}

define external fastcc i1 @"failure_backtrack.nope<0>"() {
  ret i1 0
}

define external fastcc {i64, i1} @"failure_backtrack.nope2<0>"() {
  %"tmp#0##0" = insertvalue {i64, i1} undef, i64 2, 0
  %"tmp#1##0" = insertvalue {i64, i1} %"tmp#0##0", i1 0, 1
  ret {i64, i1} %"tmp#1##0"
}

define external fastcc i1 @"failure_backtrack.yup<0>"() {
  ret i1 1
}
