======================================================================
AFTER EVERYTHING:
 Module main_hello
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : main_hello.<0>
  imports         : use command_line
                    use wybe
  resources       : 
  procs           : 

*main* > public {impure} (0 calls)
0: main_hello.<0>
(#arguments##0:wybe.array(wybe.c_string), [#?arguments##0:wybe.array(wybe.c_string)], #command##0:wybe.c_string, [#?command##0:wybe.c_string], [#exit_code##0:wybe.int], #?exit_code##1:wybe.int, #io##0:wybe.phantom, #?io##3:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?#exit_code##1:wybe.int) @command_line:nn:nn
    wybe.string.print_string<0>("hello, world!":wybe.string, ~#io##0:wybe.phantom, ?tmp#5##0:wybe.phantom) #5 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#5##0:wybe.phantom, ?#io##1:wybe.phantom) @io:nn:nn
    foreign lpvm access(arguments##0:wybe.array(?T), 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.int)
    foreign c print_int(~tmp#0##0:wybe.int, ~#io##1:wybe.phantom, ?#io##2:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>(" command line argument(s)":wybe.string, ~#io##2:wybe.phantom, ?tmp#11##0:wybe.phantom) #6 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#11##0:wybe.phantom, ?#io##3:wybe.phantom) @io:nn:nn

  LLVM code       :

; ModuleID = 'main_hello'


 


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


declare external ccc  void @print_int(i64)    


@main_hello.7 =    constant {i64, i64} { i64 25, i64 ptrtoint ([?? x i8]* @main_hello.6 to i64) }


@main_hello.6 =    constant [?? x i8] c" command line argument(s)\00"


@main_hello.2 =    constant {i64, i64} { i64 13, i64 ptrtoint ([?? x i8]* @main_hello.1 to i64) }


@main_hello.1 =    constant [?? x i8] c"hello, world!\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  i64 @"main_hello.<0>"(i64  %"arguments##0", i64  %"command##0")    {
entry:
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @main_hello.2, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  %3 = inttoptr i64 %"arguments##0" to i64* 
  %4 = getelementptr  i64, i64* %3, i64 0 
  %5 = load  i64, i64* %4 
  tail call ccc  void  @print_int(i64  %5)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @main_hello.7, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  ret i64 42 
}
