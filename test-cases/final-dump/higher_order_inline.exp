======================================================================
AFTER EVERYTHING:
 Module higher_order_inline
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : higher_order_inline.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: higher_order_inline.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @int:nn:nn
    foreign c print_int(1:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


#closure#1 > {inline} (1 calls)
0: higher_order_inline.#closure#1<0>
#closure#1(a##0:A, ?#result##0:A)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~a##0:A, ?#result##0:A) @predicate:nn:nn

  LLVM code       :

; ModuleID = 'higher_order_inline'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"higher_order_inline.<0>"() alwaysinline   {
entry:
  tail call ccc  void  @print_int(i64  1)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  i64 @"higher_order_inline.#closure#1<0>"(i64  %"#env##0", i64  %"a##0") alwaysinline   {
entry:
  ret i64 %"a##0" 
}
