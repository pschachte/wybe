======================================================================
AFTER EVERYTHING:
 Module unexported_type_overload
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : unexported_type_overload.proc<0>
  imports         : use unexported_type_overload.sub
                    use wybe
  resources       : 
  submodules      : unexported_type_overload.sub
  procs           : 

proc > public {inline} (0 calls)
0: unexported_type_overload.proc<0>
proc([x##0:wybe.bool])<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []

  LLVM code       :

; ModuleID = 'unexported_type_overload'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"unexported_type_overload.proc<0>"()    {
entry:
  ret void 
}
--------------------------------------------------
 Module unexported_type_overload.sub
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : unexported_type_overload.sub.proc<0>
                    unexported_type_overload.sub.proc<1>
  imports         : use unexported_type_overload
                    use unexported_type_overload.sub.hidden
                    use wybe
  resources       : 
  submodules      : unexported_type_overload.sub.hidden
  procs           : 

proc > public {inline} (0 calls)
0: unexported_type_overload.sub.proc<0>
proc([x##0:wybe.char])<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
proc > public {inline} (0 calls)
1: unexported_type_overload.sub.proc<1>
proc([x##0:unexported_type_overload.sub.hidden])<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []

  LLVM code       :

; ModuleID = 'unexported_type_overload.sub'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"unexported_type_overload.sub.proc<0>"()    {
entry:
  ret void 
}


define external fastcc  void @"unexported_type_overload.sub.proc<1>"()    {
entry:
  ret void 
}
--------------------------------------------------
 Module unexported_type_overload.sub.hidden
  representation  : 0 bit unsigned
  public submods  : 
  public resources: 
  public procs    : unexported_type_overload.sub.hidden.=<0>
                    unexported_type_overload.sub.hidden.~=<0>
  imports         : use unexported_type_overload.sub
                    use wybe
  resources       : 
  procs           : 

= > public {inline} (1 calls)
0: unexported_type_overload.sub.hidden.=<0>
=([#left##0:unexported_type_overload.sub.hidden], [#right##0:unexported_type_overload.sub.hidden], ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)


hidden > {inline} (0 calls)
0: unexported_type_overload.sub.hidden.hidden<0>
hidden(?#result##0:unexported_type_overload.sub.hidden)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:unexported_type_overload.sub.hidden, ?#result##0:unexported_type_overload.sub.hidden)


~= > public {inline} (0 calls)
0: unexported_type_overload.sub.hidden.~=<0>
~=([#left##0:unexported_type_overload.sub.hidden], [#right##0:unexported_type_overload.sub.hidden], ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

; ModuleID = 'unexported_type_overload.sub.hidden'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  i1 @"unexported_type_overload.sub.hidden.=<0>"()    {
entry:
  ret i1 1 
}


define external fastcc  void @"unexported_type_overload.sub.hidden.hidden<0>"()    {
entry:
  ret void 
}


define external fastcc  i1 @"unexported_type_overload.sub.hidden.~=<0>"()    {
entry:
  ret i1 0 
}
