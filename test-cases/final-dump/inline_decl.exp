======================================================================
AFTER EVERYTHING:
 Module inline_decl
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : inline_decl.<0>
                    inline_decl.finish<0>
                    inline_decl.long<0>
  imports         : use wybe
  resources       : 
  procs           : 

*main* > public {impure} (0 calls) 
0: inline_decl.<0>
(*#globals##0:wybe.phantom, *?#globals##1:wybe.phantom):
  GlobalFlows: {<<wybe.io.io>>::{FlowIn, FlowOut}} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom, *#globals##0:wybe.phantom)
    foreign c putchar('h':wybe.char, ~%tmp#1##0:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('e':wybe.char, ~%tmp#2##0:wybe.phantom, ?%tmp#4##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#4##0:wybe.phantom, ?%tmp#5##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#5##0:wybe.phantom, ?%tmp#6##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~%tmp#6##0:wybe.phantom, ?%tmp#7##0:wybe.phantom) @io:nn:nn
    foreign c putchar(' ':wybe.char, ~%tmp#7##0:wybe.phantom, ?%tmp#8##0:wybe.phantom) @io:nn:nn
    foreign c putchar('w':wybe.char, ~%tmp#8##0:wybe.phantom, ?%tmp#9##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~%tmp#9##0:wybe.phantom, ?%tmp#10##0:wybe.phantom) @io:nn:nn
    foreign c putchar('r':wybe.char, ~%tmp#10##0:wybe.phantom, ?%tmp#11##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#11##0:wybe.phantom, ?%tmp#12##0:wybe.phantom) @io:nn:nn
    foreign c putchar('d':wybe.char, ~%tmp#12##0:wybe.phantom, ?%tmp#13##0:wybe.phantom) @io:nn:nn
    foreign c putchar('!':wybe.char, ~%tmp#13##0:wybe.phantom, ?%tmp#14##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#14##0:wybe.phantom, ~*#globals##0:wybe.phantom, ?*tmp#15##0:wybe.phantom)
    inline_decl.finish<0>(~*tmp#15##0:wybe.phantom, ?*#globals##1:wybe.phantom) #1 @inline_decl:nn:nn


finish > public {noinline} (1 calls) 
0: inline_decl.finish<0>
finish(*#globals##0:wybe.phantom, *?#globals##1:wybe.phantom):
  GlobalFlows: {<<wybe.io.io>>::{FlowIn, FlowOut}} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom, *#globals##0:wybe.phantom)
    foreign c putchar('\n':wybe.char, ~%tmp#1##0:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#2##0:wybe.phantom, ~*#globals##0:wybe.phantom, ?*#globals##1:wybe.phantom)


long > public {inline} (1 calls) 
0: inline_decl.long<0>
long(*#globals##0:wybe.phantom, *?#globals##13:wybe.phantom):
  GlobalFlows: {<<wybe.io.io>>::{FlowIn, FlowOut}} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom, *#globals##0:wybe.phantom)
    foreign c putchar('h':wybe.char, ~%tmp#2##0:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
    foreign llvm move(~*#globals##0:wybe.phantom, ?*#globals##11:wybe.phantom)
    foreign c putchar('e':wybe.char, ~%tmp#3##0:wybe.phantom, ?%tmp#7##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#7##0:wybe.phantom, ?%tmp#11##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#11##0:wybe.phantom, ?%tmp#15##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~%tmp#15##0:wybe.phantom, ?%tmp#19##0:wybe.phantom) @io:nn:nn
    foreign c putchar(' ':wybe.char, ~%tmp#19##0:wybe.phantom, ?%tmp#23##0:wybe.phantom) @io:nn:nn
    foreign c putchar('w':wybe.char, ~%tmp#23##0:wybe.phantom, ?%tmp#27##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~%tmp#27##0:wybe.phantom, ?%tmp#31##0:wybe.phantom) @io:nn:nn
    foreign c putchar('r':wybe.char, ~%tmp#31##0:wybe.phantom, ?%tmp#35##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~%tmp#35##0:wybe.phantom, ?%tmp#39##0:wybe.phantom) @io:nn:nn
    foreign c putchar('d':wybe.char, ~%tmp#39##0:wybe.phantom, ?%tmp#43##0:wybe.phantom) @io:nn:nn
    foreign c putchar('!':wybe.char, ~%tmp#43##0:wybe.phantom, ?%tmp#47##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#47##0:wybe.phantom, ~*#globals##11:wybe.phantom, ?*#globals##12:wybe.phantom)
    inline_decl.finish<0>(~*#globals##12:wybe.phantom, ?*#globals##13:wybe.phantom) #12 @inline_decl:nn:nn

  LLVM code       :

; ModuleID = 'inline_decl'


 


declare external ccc  void @putchar(i8)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"inline_decl.<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}


define external fastcc  void @"inline_decl.finish<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"inline_decl.long<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}
