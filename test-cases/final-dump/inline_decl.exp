======================================================================
AFTER EVERYTHING:
 Module inline_decl
  public submods  : 
  public types    : 
  public resources: 
  public procs    : inline_decl.<0>
                    inline_decl.finish<0>
                    inline_decl.long<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public (0 calls)
0: (argc#0:wybe.int, [?argc#0:wybe.int], argv#0:wybe.int, [?argv#0:wybe.int], exit_code#0:wybe.int, [?exit_code#0:wybe.int], io#0:wybe.phantom, ?io#1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c putchar('h':wybe.char, ~#io#0:wybe.phantom, ?tmp$1#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('e':wybe.char, ~tmp$1#0:wybe.phantom, ?tmp$2#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~tmp$2#0:wybe.phantom, ?tmp$3#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~tmp$3#0:wybe.phantom, ?tmp$4#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('o':wybe.char, ~tmp$4#0:wybe.phantom, ?tmp$5#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar(' ':wybe.char, ~tmp$5#0:wybe.phantom, ?tmp$6#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('w':wybe.char, ~tmp$6#0:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('o':wybe.char, ~tmp$7#0:wybe.phantom, ?tmp$8#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('r':wybe.char, ~tmp$8#0:wybe.phantom, ?tmp$9#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~tmp$9#0:wybe.phantom, ?tmp$10#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('d':wybe.char, ~tmp$10#0:wybe.phantom, ?tmp$11#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('!':wybe.char, ~tmp$11#0:wybe.phantom, ?tmp$12#0:wybe.phantom) @wybe:nn:nn
    inline_decl.finish<0>(~tmp$12#0:wybe.phantom, ?#io#1:wybe.phantom) #1 @inline_decl:16:6


finish > public {noinline} (1 calls)
0: finish(io#0:wybe.phantom, ?io#1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c putchar('\n':wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn


long > public {inline} (1 calls)
0: long(io#0:wybe.phantom, ?io#13:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c putchar('h':wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn
    foreign c putchar('e':wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~#io#2:wybe.phantom, ?#io#3:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~#io#3:wybe.phantom, ?#io#4:wybe.phantom) @wybe:nn:nn
    foreign c putchar('o':wybe.char, ~#io#4:wybe.phantom, ?#io#5:wybe.phantom) @wybe:nn:nn
    foreign c putchar(' ':wybe.char, ~#io#5:wybe.phantom, ?#io#6:wybe.phantom) @wybe:nn:nn
    foreign c putchar('w':wybe.char, ~#io#6:wybe.phantom, ?#io#7:wybe.phantom) @wybe:nn:nn
    foreign c putchar('o':wybe.char, ~#io#7:wybe.phantom, ?#io#8:wybe.phantom) @wybe:nn:nn
    foreign c putchar('r':wybe.char, ~#io#8:wybe.phantom, ?#io#9:wybe.phantom) @wybe:nn:nn
    foreign c putchar('l':wybe.char, ~#io#9:wybe.phantom, ?#io#10:wybe.phantom) @wybe:nn:nn
    foreign c putchar('d':wybe.char, ~#io#10:wybe.phantom, ?#io#11:wybe.phantom) @wybe:nn:nn
    foreign c putchar('!':wybe.char, ~#io#11:wybe.phantom, ?#io#12:wybe.phantom) @wybe:nn:nn
    inline_decl.finish<0>(~#io#12:wybe.phantom, ?#io#13:wybe.phantom) #12 @inline_decl:16:6

  LLVM code       :

; ModuleID = 'inline_decl'


 


declare external ccc  void @putchar(i8)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"inline_decl.<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}


define external fastcc  void @"inline_decl.finish<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"inline_decl.long<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}
