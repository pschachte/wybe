======================================================================
AFTER EVERYTHING:
 Module inline_decl
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : inline_decl.<0>
                    inline_decl.finish<0>
                    inline_decl.long<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: inline_decl.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#0##0:wybe.phantom) @io:nn:nn
    foreign c putchar('h':wybe.char, ~tmp#0##0:wybe.phantom, ?tmp#1##0:wybe.phantom) @io:nn:nn
    foreign c putchar('e':wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    foreign c putchar(' ':wybe.char, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @io:nn:nn
    foreign c putchar('w':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~tmp#7##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @io:nn:nn
    foreign c putchar('r':wybe.char, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @io:nn:nn
    foreign c putchar('d':wybe.char, ~tmp#10##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @io:nn:nn
    foreign c putchar('!':wybe.char, ~tmp#11##0:wybe.phantom, ?tmp#12##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#12##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    inline_decl.finish<0><{<<wybe.io.io>>}; {<<wybe.io.io>>}> #1 @inline_decl:nn:nn


finish > public {noinline} (1 calls)
0: inline_decl.finish<0>
finish()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#0##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#0##0:wybe.phantom, ?tmp#1##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#1##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


long > public {inline} (1 calls)
0: inline_decl.long<0>
long()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io:nn:nn
    foreign c putchar('h':wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('e':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#5##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#8##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~tmp#11##0:wybe.phantom, ?tmp#14##0:wybe.phantom) @io:nn:nn
    foreign c putchar(' ':wybe.char, ~tmp#14##0:wybe.phantom, ?tmp#17##0:wybe.phantom) @io:nn:nn
    foreign c putchar('w':wybe.char, ~tmp#17##0:wybe.phantom, ?tmp#20##0:wybe.phantom) @io:nn:nn
    foreign c putchar('o':wybe.char, ~tmp#20##0:wybe.phantom, ?tmp#23##0:wybe.phantom) @io:nn:nn
    foreign c putchar('r':wybe.char, ~tmp#23##0:wybe.phantom, ?tmp#26##0:wybe.phantom) @io:nn:nn
    foreign c putchar('l':wybe.char, ~tmp#26##0:wybe.phantom, ?tmp#29##0:wybe.phantom) @io:nn:nn
    foreign c putchar('d':wybe.char, ~tmp#29##0:wybe.phantom, ?tmp#32##0:wybe.phantom) @io:nn:nn
    foreign c putchar('!':wybe.char, ~tmp#32##0:wybe.phantom, ?tmp#35##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#35##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    inline_decl.finish<0><{<<wybe.io.io>>}; {<<wybe.io.io>>}> #12 @inline_decl:nn:nn

  LLVM code       :

; ModuleID = 'inline_decl'


 


declare external ccc  void @putchar(i8)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"inline_decl.<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}


define external fastcc  void @"inline_decl.finish<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  void @"inline_decl.long<0>"()    {
entry:
  tail call ccc  void  @putchar(i8  104)  
  tail call ccc  void  @putchar(i8  101)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  32)  
  tail call ccc  void  @putchar(i8  119)  
  tail call ccc  void  @putchar(i8  111)  
  tail call ccc  void  @putchar(i8  114)  
  tail call ccc  void  @putchar(i8  108)  
  tail call ccc  void  @putchar(i8  100)  
  tail call ccc  void  @putchar(i8  33)  
  tail call fastcc  void  @"inline_decl.finish<0>"()  
  ret void 
}
