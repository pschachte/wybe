======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module resource_tmp_vars
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : resource_tmp_vars.<0>
  imports         : use wybe
  resources       : counter: fromList [(resource_tmp_vars.counter,wybe.int = 0 @resource_tmp_vars:nn:nn @resource_tmp_vars:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: resource_tmp_vars.<0>
()<{<<resource_tmp_vars.counter>>, <<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<resource_tmp_vars.counter>>:wybe.int, ?%tmp#1##0:wybe.int) @resource_tmp_vars:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#5##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c print_int(1:wybe.int, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c print_int(~tmp#1##0:wybe.int, ~tmp#7##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign lpvm store(~%tmp#9##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @resource_tmp_vars:nn:nn


proc #cont#1 > {inline,semipure} (1 calls)
0: resource_tmp_vars.#cont#1<0>
#cont#1([tmp#0##0:wybe.int], tmp#1##0:wybe.int)<{<<wybe.io.io>>}; {<<resource_tmp_vars.counter>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c print_int(1:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign lpvm store(%tmp#1##0:wybe.int, <<resource_tmp_vars.counter>>:wybe.int) @resource_tmp_vars:nn:nn
    foreign c print_int(~tmp#1##0:wybe.int, ~tmp#5##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @resource_tmp_vars:nn:nn
    foreign lpvm store(~%tmp#9##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @resource_tmp_vars:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'resource_tmp_vars'

source_filename = "!ROOT!/final-dump/resource_tmp_vars.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#resource_tmp_vars.counter" = global i64 undef

define external fastcc void @"resource_tmp_vars.<0>"() {
  %"tmp#1##0" = load i64, ptr @"resource#resource_tmp_vars.counter"
  call ccc void @print_int(i64 1)
  call ccc void @putchar(i8 10)
  call ccc void @print_int(i64 %"tmp#1##0")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc void @"resource_tmp_vars.#cont#1<0>"(i64 %"tmp#1##0") {
  call ccc void @print_int(i64 1)
  call ccc void @putchar(i8 10)
  store i64 %"tmp#1##0", ptr @"resource#resource_tmp_vars.counter"
  call ccc void @print_int(i64 %"tmp#1##0")
  call ccc void @putchar(i8 10)
  ret void
}
