======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module constfold
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : constfold.fold_add<0>
                    constfold.fold_mult<0>
                    constfold.fold_test<0>
                    constfold.fortytwo<0>
  imports         : use wybe
  resources       : 
  procs           : 

proc fold_add > public {inline} (3 calls)
0: constfold.fold_add<0>
fold_add(?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?#result##0:wybe.int) @constfold:nn:nn


proc fold_mult > public {inline} (3 calls)
0: constfold.fold_mult<0>
fold_mult(?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?#result##0:wybe.int) @constfold:nn:nn


proc fold_test > public {inline} (0 calls)
0: constfold.fold_test<0>
fold_test(?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?#result##0:wybe.int) @constfold:nn:nn


proc fortytwo > public {inline} (0 calls)
0: constfold.fortytwo<0>
fortytwo(?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?#result##0:wybe.int) @constfold:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'constfold'

source_filename = "!ROOT!/final-dump/constfold.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i64 @"constfold.fold_add<0>"() {
  ret i64 42
}

define external fastcc i64 @"constfold.fold_mult<0>"() {
  ret i64 42
}

define external fastcc i64 @"constfold.fold_test<0>"() {
  ret i64 42
}

define external fastcc i64 @"constfold.fortytwo<0>"() {
  ret i64 42
}
