======================================================================
AFTER EVERYTHING:
 Module constfold
  public submods  : 
  public types    : 
  public resources: 
  public procs    : constfold.fold_add<0>
                    constfold.fold_mult<0>
                    constfold.fold_test<0>
                    constfold.fortytwo<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

fold_add > public inline (3 calls)
0: fold_add(?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:2:5


fold_mult > public inline (3 calls)
0: fold_mult(?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:3:5


fold_test > public inline (0 calls)
0: fold_test(?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:4:5


fortytwo > public inline (0 calls)
0: fortytwo(?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign llvm move(42:wybe.int, ?$#0:wybe.int) @constfold:1:5

  LLVM code       :

; ModuleID = 'constfold'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  i64 @"constfold.fold_add<0>"()    {
entry:
  ret i64 42 
}


define external fastcc  i64 @"constfold.fold_mult<0>"()    {
entry:
  ret i64 42 
}


define external fastcc  i64 @"constfold.fold_test<0>"()    {
entry:
  ret i64 42 
}


define external fastcc  i64 @"constfold.fortytwo<0>"()    {
entry:
  ret i64 42 
}
