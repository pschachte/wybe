======================================================================
AFTER EVERYTHING:
 Module current_module_alias_fail
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : current_module_alias_fail.<0>
                    current_module_alias_fail.toCelsius<0>
  imports         : use math.temperature
                    use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: current_module_alias_fail.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    current_module_alias_fail.toCelsius<0>(1.0:wybe.float, ?tmp#0##0:wybe.float) #0 @current_module_alias_fail:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#0##0:wybe.float, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#4##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


toCelsius > public {noinline} (1 calls)
0: current_module_alias_fail.toCelsius<0>
toCelsius(f##0:wybe.float, ?#result##0:wybe.float)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fsub(~f##0:wybe.float, 32.0:wybe.float, ?tmp#1##0:wybe.float) @float:nn:nn
    foreign llvm fdiv(~tmp#1##0:wybe.float, 1.8:wybe.float, ?#result##0:wybe.float) @float:nn:nn

  LLVM code       :

; ModuleID = 'current_module_alias_fail'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_float(double)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"current_module_alias_fail.<0>"()    {
entry:
  %"1#tmp#0##0" = tail call fastcc  double  @"current_module_alias_fail.toCelsius<0>"(double  1.000000e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#0##0")  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  double @"current_module_alias_fail.toCelsius<0>"(double  %"f##0")    {
entry:
  %"1#tmp#1##0" = fsub double %"f##0", 3.200000e1 
  %"1##result##0" = fdiv double %"1#tmp#1##0", 1.800000e0 
  ret double %"1##result##0" 
}
--------------------------------------------------
 Module math.temperature
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : math.temperature.toCelsius<0>
  imports         : use wybe
  resources       : 
  procs           : 

toCelsius > public {inline} (0 calls)
0: math.temperature.toCelsius<0>
toCelsius(f##0:wybe.float, ?#result##0:wybe.float)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fsub(~f##0:wybe.float, 32.0:wybe.float, ?tmp#1##0:wybe.float) @float:nn:nn
    foreign llvm fdiv(~tmp#1##0:wybe.float, 1.8:wybe.float, ?#result##0:wybe.float) @float:nn:nn

  LLVM code       :

; ModuleID = 'math.temperature'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  double @"math.temperature.toCelsius<0>"(double  %"f##0")    {
entry:
  %"1#tmp#1##0" = fsub double %"f##0", 3.200000e1 
  %"1##result##0" = fdiv double %"1#tmp#1##0", 1.800000e0 
  ret double %"1##result##0" 
}
[93mfinal-dump/current_module_alias_fail.wybe:5:10: Multiple procedures match this call's types and flows:
    current_module_alias_fail.toCelsius<0>
    math.temperature.toCelsius<0>
Defaulting to: current_module_alias_fail.toCelsius<0>
[0m
