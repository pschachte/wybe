======================================================================
AFTER EVERYTHING:
 Module higher_order_resources
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : higher_order_resources.<0>
  imports         : use wybe
  resources       : maximum: fromList [(higher_order_resources.maximum,wybe.int @higher_order_resources:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: higher_order_resources.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?tmp#35##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#35##0:wybe.list(T), ?tmp#36##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 3:T) @list:nn:nn
    foreign lpvm mutate(~tmp#36##0:wybe.list(T), ?tmp#3##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#39##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#39##0:wybe.list(T), ?tmp#40##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 2:T) @list:nn:nn
    foreign lpvm mutate(~tmp#40##0:wybe.list(T), ?tmp#2##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#3##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#43##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#43##0:wybe.list(T), ?tmp#44##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#44##0:wybe.list(T), ?tmp#1##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#2##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#47##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#47##0:wybe.list(T), ?tmp#48##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#48##0:wybe.list(T), ?tmp#7##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#51##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#51##0:wybe.list(T), ?tmp#52##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 5:T) @list:nn:nn
    foreign lpvm mutate(~tmp#52##0:wybe.list(T), ?tmp#6##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#7##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#55##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#55##0:wybe.list(T), ?tmp#56##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#6##0:T) @list:nn:nn
    foreign lpvm mutate(~tmp#56##0:wybe.list(T), ?tmp#5##0:wybe.list(wybe.list(wybe.int)), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#59##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#59##0:wybe.list(T), ?tmp#60##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#1##0:T) @list:nn:nn
    foreign lpvm mutate(~tmp#60##0:wybe.list(T), ?tmp#0##0:wybe.list(wybe.list(wybe.int)), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#5##0:wybe.list(T)) @list:nn:nn
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%tmp#30##0:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm store(-1000:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.map#cont#1<0>(higher_order_resources.#anon#1<1><>:{resource}(T), ~tmp#0##0:wybe.list(T))<Everything; Everything> #31 @list:nn:nn
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%maximum##1:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#64##0:wybe.phantom) @int:nn:nn
    foreign c print_int(~maximum##1:wybe.int, ~tmp#64##0:wybe.phantom, ?tmp#65##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#65##0:wybe.phantom, ?tmp#66##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#66##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("*****":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #32 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#68##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#68##0:wybe.phantom, ?tmp#69##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#69##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#72##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#72##0:wybe.list(T), ?tmp#73##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 3:T) @list:nn:nn
    foreign lpvm mutate(~tmp#73##0:wybe.list(T), ?tmp#14##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#76##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#76##0:wybe.list(T), ?tmp#77##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 2:T) @list:nn:nn
    foreign lpvm mutate(~tmp#77##0:wybe.list(T), ?tmp#13##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#14##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#80##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#80##0:wybe.list(T), ?tmp#81##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#81##0:wybe.list(T), ?tmp#12##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#13##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#84##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#84##0:wybe.list(T), ?tmp#85##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 2:T) @list:nn:nn
    foreign lpvm mutate(~tmp#85##0:wybe.list(T), ?tmp#20##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#88##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#88##0:wybe.list(T), ?tmp#89##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#89##0:wybe.list(T), ?tmp#19##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#20##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#92##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#92##0:wybe.list(T), ?tmp#93##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 2:T) @list:nn:nn
    foreign lpvm mutate(~tmp#93##0:wybe.list(T), ?tmp#18##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#19##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#96##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#96##0:wybe.list(T), ?tmp#97##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#97##0:wybe.list(T), ?tmp#17##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#18##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#100##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#100##0:wybe.list(T), ?tmp#101##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:T) @list:nn:nn
    foreign lpvm mutate(~tmp#101##0:wybe.list(T), ?tmp#24##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#104##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#104##0:wybe.list(T), ?tmp#105##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 5:T) @list:nn:nn
    foreign lpvm mutate(~tmp#105##0:wybe.list(T), ?tmp#23##0:wybe.list(wybe.int), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#24##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#108##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#108##0:wybe.list(T), ?tmp#109##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#23##0:T) @list:nn:nn
    foreign lpvm mutate(~tmp#109##0:wybe.list(T), ?tmp#22##0:wybe.list(wybe.list(wybe.int)), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#112##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#112##0:wybe.list(T), ?tmp#113##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#17##0:T) @list:nn:nn
    foreign lpvm mutate(~tmp#113##0:wybe.list(T), ?tmp#16##0:wybe.list(wybe.list(wybe.int)), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#22##0:wybe.list(T)) @list:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#116##0:wybe.list(T)) @list:nn:nn
    foreign lpvm mutate(~tmp#116##0:wybe.list(T), ?tmp#117##0:wybe.list(T), 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#12##0:T) @list:nn:nn
    foreign lpvm mutate(~tmp#117##0:wybe.list(T), ?tmp#11##0:wybe.list(wybe.list(wybe.int)), 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#16##0:wybe.list(T)) @list:nn:nn
    foreign lpvm store(-1000:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.map#cont#1<0>(higher_order_resources.#anon#2<1><>:{resource}(T), ~tmp#11##0:wybe.list(T))<Everything; Everything> #33 @list:nn:nn
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%maximum##3:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#121##0:wybe.phantom) @int:nn:nn
    foreign c print_int(~maximum##3:wybe.int, ~tmp#121##0:wybe.phantom, ?tmp#122##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#122##0:wybe.phantom, ?tmp#123##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#123##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(~tmp#30##0:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn


#anon#1 > {inline} (1 calls)
0: higher_order_resources.#anon#1<0>
#anon#1(anon#1#1##0:wybe.list(wybe.int))<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.list.length1<0>(~anon#1#1##0:wybe.list(T), 0:wybe.int, ?tmp#10##0:wybe.int) #2 @list:nn:nn
    higher_order_resources.take_max<0>(~tmp#10##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}> #1 @higher_order_resources:nn:nn
#anon#1 > {inline} (1 calls)
1: higher_order_resources.#anon#1<1>
#anon#1(anon#1#1##0:wybe.list(wybe.int))<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.list.length1<0>(~anon#1#1##0:wybe.list(T), 0:wybe.int, ?tmp#1##0:wybe.int) #1 @list:nn:nn
    higher_order_resources.take_max<0>(~tmp#1##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}> #2 @higher_order_resources:nn:nn


#anon#2 > {inline} (1 calls)
0: higher_order_resources.#anon#2<0>
#anon#2(anon#2#1##0:wybe.list(wybe.int))<{<<higher_order_resources.maximum>>, <<wybe.io.io>>}; {<<higher_order_resources.maximum>>, <<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%maximum##3:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm store(-1000:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.map#cont#1<0>(higher_order_resources.#anon#2#closure#1<0><>:{resource}(T), anon#2#1##0:wybe.list(T))<Everything; Everything> #5 @list:nn:nn
    wybe.string.print<0>("> ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #1 @higher_order_resources:nn:nn
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%maximum##2:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#36##0:wybe.phantom) @int:nn:nn
    foreign c print_int(~maximum##2:wybe.int, ~tmp#36##0:wybe.phantom, ?tmp#37##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#37##0:wybe.phantom, ?tmp#38##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#38##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(~maximum##3:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.length1<0>(~anon#2#1##0:wybe.list(T), 0:wybe.int, ?tmp#28##0:wybe.int) #6 @list:nn:nn
    higher_order_resources.take_max<0>(~tmp#28##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}> #4 @higher_order_resources:nn:nn
#anon#2 > {inline} (1 calls)
1: higher_order_resources.#anon#2<1>
#anon#2(anon#2#1##0:wybe.list(wybe.int))<{<<higher_order_resources.maximum>>, <<wybe.io.io>>}; {<<higher_order_resources.maximum>>, <<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%tmp#1##0:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm store(-1000:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.map#cont#1<0>(higher_order_resources.#anon#2#closure#1<0><>:{resource}(T), anon#2#1##0:wybe.list(T))<Everything; Everything> #1 @list:nn:nn
    wybe.string.print<0>("> ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #2 @higher_order_resources:nn:nn
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%tmp#2##0:wybe.int) @higher_order_resources:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @int:nn:nn
    foreign c print_int(~tmp#2##0:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    foreign lpvm store(~tmp#1##0:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn
    wybe.list.length1<0>(~anon#2#1##0:wybe.list(T), 0:wybe.int, ?tmp#6##0:wybe.int) #3 @list:nn:nn
    higher_order_resources.take_max<0>(~tmp#6##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}> #4 @higher_order_resources:nn:nn


#anon#2#closure#1 > {inline} (1 calls)
0: higher_order_resources.#anon#2#closure#1<0>
#anon#2#closure#1(i##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    higher_order_resources.take_max<0>(~i##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}> #0


take_max > (3 calls)
0: higher_order_resources.take_max<0>
take_max(i##0:wybe.int)<{<<higher_order_resources.maximum>>}; {<<higher_order_resources.maximum>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<higher_order_resources.maximum>>:wybe.int, ?%maximum##0:wybe.int) @higher_order_resources:nn:nn
    wybe.int.max<0>(~i##0:wybe.int, ~maximum##0:wybe.int, ?tmp#0##0:wybe.int) #0 @higher_order_resources:nn:nn
    foreign lpvm store(~tmp#0##0:wybe.int, <<higher_order_resources.maximum>>:wybe.int) @higher_order_resources:nn:nn

  LLVM code       :

; ModuleID = 'higher_order_resources'


 


@"resource#higher_order_resources.maximum" =    global i64 undef


@higher_order_resources.6 =    constant {i64, i64} { i64 2, i64 ptrtoint ([?? x i8]* @higher_order_resources.5 to i64) }


@higher_order_resources.2 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @higher_order_resources.1 to i64) }


@higher_order_resources.1 =    constant [?? x i8] c"*****\00"


@higher_order_resources.5 =    constant [?? x i8] c"> \00"


@higher_order_resources.0 =    constant [1 x i64] [i64 ptrtoint (void (i64, i64)* @"higher_order_resources.#anon#1<1>" to i64)]


@higher_order_resources.4 =    constant [1 x i64] [i64 ptrtoint (void (i64, i64)* @"higher_order_resources.#anon#2#closure#1<0>" to i64)]


@higher_order_resources.3 =    constant [1 x i64] [i64 ptrtoint (void (i64, i64)* @"higher_order_resources.#anon#2<1>" to i64)]


declare external fastcc  i64 @"wybe.int.max<0>"(i64, i64)    


declare external fastcc  i64 @"wybe.list.length1<0>"(i64, i64)    


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external fastcc  void @"wybe.list.map#cont#1<0>"(i64, i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"higher_order_resources.<0>"()    {
entry:
  %0 = trunc i64 16 to i32  
  %1 = tail call ccc  i8*  @wybe_malloc(i32  %0)  
  %2 = ptrtoint i8* %1 to i64 
  %3 = inttoptr i64 %2 to i64* 
  store  i64 3, i64* %3 
  %4 = add   i64 %2, 8 
  %5 = inttoptr i64 %4 to i64* 
  store  i64 0, i64* %5 
  %6 = trunc i64 16 to i32  
  %7 = tail call ccc  i8*  @wybe_malloc(i32  %6)  
  %8 = ptrtoint i8* %7 to i64 
  %9 = inttoptr i64 %8 to i64* 
  store  i64 2, i64* %9 
  %10 = add   i64 %8, 8 
  %11 = inttoptr i64 %10 to i64* 
  store  i64 %2, i64* %11 
  %12 = trunc i64 16 to i32  
  %13 = tail call ccc  i8*  @wybe_malloc(i32  %12)  
  %14 = ptrtoint i8* %13 to i64 
  %15 = inttoptr i64 %14 to i64* 
  store  i64 1, i64* %15 
  %16 = add   i64 %14, 8 
  %17 = inttoptr i64 %16 to i64* 
  store  i64 %8, i64* %17 
  %18 = trunc i64 16 to i32  
  %19 = tail call ccc  i8*  @wybe_malloc(i32  %18)  
  %20 = ptrtoint i8* %19 to i64 
  %21 = inttoptr i64 %20 to i64* 
  store  i64 1, i64* %21 
  %22 = add   i64 %20, 8 
  %23 = inttoptr i64 %22 to i64* 
  store  i64 0, i64* %23 
  %24 = trunc i64 16 to i32  
  %25 = tail call ccc  i8*  @wybe_malloc(i32  %24)  
  %26 = ptrtoint i8* %25 to i64 
  %27 = inttoptr i64 %26 to i64* 
  store  i64 5, i64* %27 
  %28 = add   i64 %26, 8 
  %29 = inttoptr i64 %28 to i64* 
  store  i64 %20, i64* %29 
  %30 = trunc i64 16 to i32  
  %31 = tail call ccc  i8*  @wybe_malloc(i32  %30)  
  %32 = ptrtoint i8* %31 to i64 
  %33 = inttoptr i64 %32 to i64* 
  store  i64 %26, i64* %33 
  %34 = add   i64 %32, 8 
  %35 = inttoptr i64 %34 to i64* 
  store  i64 0, i64* %35 
  %36 = trunc i64 16 to i32  
  %37 = tail call ccc  i8*  @wybe_malloc(i32  %36)  
  %38 = ptrtoint i8* %37 to i64 
  %39 = inttoptr i64 %38 to i64* 
  store  i64 %14, i64* %39 
  %40 = add   i64 %38, 8 
  %41 = inttoptr i64 %40 to i64* 
  store  i64 %32, i64* %41 
  %42 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  store  i64 -1000, i64* @"resource#higher_order_resources.maximum" 
  tail call fastcc  void  @"wybe.list.map#cont#1<0>"(i64  ptrtoint (i64* getelementptr inbounds ([1 x i64], [1 x i64]* @higher_order_resources.0, i32 0, i32 0) to i64), i64  %38)  
  %43 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  tail call ccc  void  @print_int(i64  %43)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @higher_order_resources.2, i32 0, i32 0) to i64))  
  tail call ccc  void  @putchar(i8  10)  
  %44 = trunc i64 16 to i32  
  %45 = tail call ccc  i8*  @wybe_malloc(i32  %44)  
  %46 = ptrtoint i8* %45 to i64 
  %47 = inttoptr i64 %46 to i64* 
  store  i64 3, i64* %47 
  %48 = add   i64 %46, 8 
  %49 = inttoptr i64 %48 to i64* 
  store  i64 0, i64* %49 
  %50 = trunc i64 16 to i32  
  %51 = tail call ccc  i8*  @wybe_malloc(i32  %50)  
  %52 = ptrtoint i8* %51 to i64 
  %53 = inttoptr i64 %52 to i64* 
  store  i64 2, i64* %53 
  %54 = add   i64 %52, 8 
  %55 = inttoptr i64 %54 to i64* 
  store  i64 %46, i64* %55 
  %56 = trunc i64 16 to i32  
  %57 = tail call ccc  i8*  @wybe_malloc(i32  %56)  
  %58 = ptrtoint i8* %57 to i64 
  %59 = inttoptr i64 %58 to i64* 
  store  i64 1, i64* %59 
  %60 = add   i64 %58, 8 
  %61 = inttoptr i64 %60 to i64* 
  store  i64 %52, i64* %61 
  %62 = trunc i64 16 to i32  
  %63 = tail call ccc  i8*  @wybe_malloc(i32  %62)  
  %64 = ptrtoint i8* %63 to i64 
  %65 = inttoptr i64 %64 to i64* 
  store  i64 2, i64* %65 
  %66 = add   i64 %64, 8 
  %67 = inttoptr i64 %66 to i64* 
  store  i64 0, i64* %67 
  %68 = trunc i64 16 to i32  
  %69 = tail call ccc  i8*  @wybe_malloc(i32  %68)  
  %70 = ptrtoint i8* %69 to i64 
  %71 = inttoptr i64 %70 to i64* 
  store  i64 1, i64* %71 
  %72 = add   i64 %70, 8 
  %73 = inttoptr i64 %72 to i64* 
  store  i64 %64, i64* %73 
  %74 = trunc i64 16 to i32  
  %75 = tail call ccc  i8*  @wybe_malloc(i32  %74)  
  %76 = ptrtoint i8* %75 to i64 
  %77 = inttoptr i64 %76 to i64* 
  store  i64 2, i64* %77 
  %78 = add   i64 %76, 8 
  %79 = inttoptr i64 %78 to i64* 
  store  i64 %70, i64* %79 
  %80 = trunc i64 16 to i32  
  %81 = tail call ccc  i8*  @wybe_malloc(i32  %80)  
  %82 = ptrtoint i8* %81 to i64 
  %83 = inttoptr i64 %82 to i64* 
  store  i64 1, i64* %83 
  %84 = add   i64 %82, 8 
  %85 = inttoptr i64 %84 to i64* 
  store  i64 %76, i64* %85 
  %86 = trunc i64 16 to i32  
  %87 = tail call ccc  i8*  @wybe_malloc(i32  %86)  
  %88 = ptrtoint i8* %87 to i64 
  %89 = inttoptr i64 %88 to i64* 
  store  i64 1, i64* %89 
  %90 = add   i64 %88, 8 
  %91 = inttoptr i64 %90 to i64* 
  store  i64 0, i64* %91 
  %92 = trunc i64 16 to i32  
  %93 = tail call ccc  i8*  @wybe_malloc(i32  %92)  
  %94 = ptrtoint i8* %93 to i64 
  %95 = inttoptr i64 %94 to i64* 
  store  i64 5, i64* %95 
  %96 = add   i64 %94, 8 
  %97 = inttoptr i64 %96 to i64* 
  store  i64 %88, i64* %97 
  %98 = trunc i64 16 to i32  
  %99 = tail call ccc  i8*  @wybe_malloc(i32  %98)  
  %100 = ptrtoint i8* %99 to i64 
  %101 = inttoptr i64 %100 to i64* 
  store  i64 %94, i64* %101 
  %102 = add   i64 %100, 8 
  %103 = inttoptr i64 %102 to i64* 
  store  i64 0, i64* %103 
  %104 = trunc i64 16 to i32  
  %105 = tail call ccc  i8*  @wybe_malloc(i32  %104)  
  %106 = ptrtoint i8* %105 to i64 
  %107 = inttoptr i64 %106 to i64* 
  store  i64 %82, i64* %107 
  %108 = add   i64 %106, 8 
  %109 = inttoptr i64 %108 to i64* 
  store  i64 %100, i64* %109 
  %110 = trunc i64 16 to i32  
  %111 = tail call ccc  i8*  @wybe_malloc(i32  %110)  
  %112 = ptrtoint i8* %111 to i64 
  %113 = inttoptr i64 %112 to i64* 
  store  i64 %58, i64* %113 
  %114 = add   i64 %112, 8 
  %115 = inttoptr i64 %114 to i64* 
  store  i64 %106, i64* %115 
  store  i64 -1000, i64* @"resource#higher_order_resources.maximum" 
  tail call fastcc  void  @"wybe.list.map#cont#1<0>"(i64  ptrtoint (i64* getelementptr inbounds ([1 x i64], [1 x i64]* @higher_order_resources.3, i32 0, i32 0) to i64), i64  %112)  
  %116 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  tail call ccc  void  @print_int(i64  %116)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 %42, i64* @"resource#higher_order_resources.maximum" 
  ret void 
}


define external fastcc  void @"higher_order_resources.#anon#1<0>"(i64  %"anon#1#1##0") alwaysinline   {
entry:
  %0 = tail call fastcc  i64  @"wybe.list.length1<0>"(i64  %"anon#1#1##0", i64  0)  
  musttail call fastcc  void  @"higher_order_resources.take_max<0>"(i64  %0)  
  ret void 
}


define external fastcc  void @"higher_order_resources.#anon#1<1>"(i64  %"#env##0", i64  %"anon#1#1##0") alwaysinline   {
entry:
  %0 = tail call fastcc  i64  @"wybe.list.length1<0>"(i64  %"anon#1#1##0", i64  0)  
  tail call fastcc  void  @"higher_order_resources.take_max<0>"(i64  %0)  
  ret void 
}


define external fastcc  void @"higher_order_resources.#anon#2<0>"(i64  %"anon#2#1##0") alwaysinline   {
entry:
  %0 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  store  i64 -1000, i64* @"resource#higher_order_resources.maximum" 
  tail call fastcc  void  @"wybe.list.map#cont#1<0>"(i64  ptrtoint (i64* getelementptr inbounds ([1 x i64], [1 x i64]* @higher_order_resources.4, i32 0, i32 0) to i64), i64  %"anon#2#1##0")  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @higher_order_resources.6, i32 0, i32 0) to i64))  
  %1 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  tail call ccc  void  @print_int(i64  %1)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 %0, i64* @"resource#higher_order_resources.maximum" 
  %2 = tail call fastcc  i64  @"wybe.list.length1<0>"(i64  %"anon#2#1##0", i64  0)  
  musttail call fastcc  void  @"higher_order_resources.take_max<0>"(i64  %2)  
  ret void 
}


define external fastcc  void @"higher_order_resources.#anon#2<1>"(i64  %"#env##0", i64  %"anon#2#1##0") alwaysinline   {
entry:
  %0 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  store  i64 -1000, i64* @"resource#higher_order_resources.maximum" 
  tail call fastcc  void  @"wybe.list.map#cont#1<0>"(i64  ptrtoint (i64* getelementptr inbounds ([1 x i64], [1 x i64]* @higher_order_resources.4, i32 0, i32 0) to i64), i64  %"anon#2#1##0")  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @higher_order_resources.6, i32 0, i32 0) to i64))  
  %1 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  tail call ccc  void  @print_int(i64  %1)  
  tail call ccc  void  @putchar(i8  10)  
  store  i64 %0, i64* @"resource#higher_order_resources.maximum" 
  %2 = tail call fastcc  i64  @"wybe.list.length1<0>"(i64  %"anon#2#1##0", i64  0)  
  tail call fastcc  void  @"higher_order_resources.take_max<0>"(i64  %2)  
  ret void 
}


define external fastcc  void @"higher_order_resources.#anon#2#closure#1<0>"(i64  %"#env##0", i64  %"i##0") alwaysinline   {
entry:
  tail call fastcc  void  @"higher_order_resources.take_max<0>"(i64  %"i##0")  
  ret void 
}


define external fastcc  void @"higher_order_resources.take_max<0>"(i64  %"i##0")    {
entry:
  %0 = load  i64, i64* @"resource#higher_order_resources.maximum" 
  %1 = tail call fastcc  i64  @"wybe.int.max<0>"(i64  %"i##0", i64  %0)  
  store  i64 %1, i64* @"resource#higher_order_resources.maximum" 
  ret void 
}
