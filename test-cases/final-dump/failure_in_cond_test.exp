======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module failure_in_cond_test
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : failure_in_cond_test.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: failure_in_cond_test.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @failure_in_cond_test:nn:nn
    foreign c print_int(1:wybe.int, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @failure_in_cond_test:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @failure_in_cond_test:nn:nn


proc foo > {inline} (3 calls)
0: failure_in_cond_test.foo<0>
foo(?i##3:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.int, ?i##3:wybe.int) @failure_in_cond_test:nn:nn
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'failure_in_cond_test'

source_filename = "!ROOT!/final-dump/failure_in_cond_test.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"failure_in_cond_test.<0>"() {
  call ccc void @print_int(i64 1)
  ret void
}

define external fastcc {i64, i1} @"failure_in_cond_test.foo<0>"() {
  %"tmp#0##0" = insertvalue {i64, i1} undef, i64 1, 0
  %"tmp#1##0" = insertvalue {i64, i1} %"tmp#0##0", i1 1, 1
  ret {i64, i1} %"tmp#1##0"
}
