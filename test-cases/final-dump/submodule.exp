======================================================================
AFTER EVERYTHING:
 Module submodule
  representation  : (not a type)
  public submods  : publictest -> submodule.publictest
  public resources: 
  public procs    : submodule.publictest.visible<0>
  imports         : use submodule.privatetest
                    public use submodule.publictest
                    use wybe
  resources       : 
  submodules      : submodule.privatetest, submodule.publictest
  procs           : 


  LLVM code       :

; ModuleID = 'submodule'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    
--------------------------------------------------
 Module submodule.privatetest
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : submodule.privatetest.semi_hidden<0>
  imports         : use submodule
                    use wybe
  resources       : 
  procs           : 

hidden > {inline} (0 calls)
0: submodule.privatetest.hidden<0>
hidden()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("private proc in a private module":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @submodule:nn:nn


semi_hidden > public {inline} (0 calls)
0: submodule.privatetest.semi_hidden<0>
semi_hidden()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("public proc in a private module":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @submodule:nn:nn

  LLVM code       :

; ModuleID = 'submodule.privatetest'


 


@submodule.privatetest.4 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @submodule.privatetest.3 to i64) }


@submodule.privatetest.2 =    constant {i64, i64} { i64 32, i64 ptrtoint ([?? x i8]* @submodule.privatetest.1 to i64) }


@submodule.privatetest.1 =    constant [?? x i8] c"private proc in a private module\00"


@submodule.privatetest.3 =    constant [?? x i8] c"public proc in a private module\00"


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"submodule.privatetest.hidden<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @submodule.privatetest.2, i32 0, i32 0) to i64))  
  ret void 
}


define external fastcc  void @"submodule.privatetest.semi_hidden<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @submodule.privatetest.4, i32 0, i32 0) to i64))  
  ret void 
}
--------------------------------------------------
 Module submodule.publictest
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : submodule.publictest.visible<0>
  imports         : use submodule
                    use wybe
  resources       : 
  procs           : 

semi_visible > {inline} (0 calls)
0: submodule.publictest.semi_visible<0>
semi_visible()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("private proc in a public module":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @submodule:nn:nn


visible > public {inline} (0 calls)
0: submodule.publictest.visible<0>
visible()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("public proc in a public module":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @submodule:nn:nn

  LLVM code       :

; ModuleID = 'submodule.publictest'


 


@submodule.publictest.4 =    constant {i64, i64} { i64 30, i64 ptrtoint ([?? x i8]* @submodule.publictest.3 to i64) }


@submodule.publictest.2 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @submodule.publictest.1 to i64) }


@submodule.publictest.1 =    constant [?? x i8] c"private proc in a public module\00"


@submodule.publictest.3 =    constant [?? x i8] c"public proc in a public module\00"


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"submodule.publictest.semi_visible<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @submodule.publictest.2, i32 0, i32 0) to i64))  
  ret void 
}


define external fastcc  void @"submodule.publictest.visible<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @submodule.publictest.4, i32 0, i32 0) to i64))  
  ret void 
}
