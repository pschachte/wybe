======================================================================
AFTER EVERYTHING:
 Module proc_print2
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : proc_print2.print2<0>
  imports         : use wybe
  resources       : 
  procs           : 

print2 > public {inline} (0 calls) 
0: proc_print2.print2<0>
print2(x##0:wybe.int, y##0:wybe.int, *#globals##0:wybe.phantom, *?#globals##2:wybe.phantom):
  GlobalFlows: {<<wybe.io.io>>::{FlowIn, FlowOut}} 
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom, *#globals##0:wybe.phantom)
    foreign c print_int(~x##0:wybe.int, ~%tmp#2##0:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
    foreign llvm move(~*#globals##0:wybe.phantom, ?*#globals##1:wybe.phantom)
    foreign c print_int(~y##0:wybe.int, ~%tmp#3##0:wybe.phantom, ?%tmp#7##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(<<wybe.io.io>>:wybe.phantom, ~%tmp#7##0:wybe.phantom, ~*#globals##1:wybe.phantom, ?*#globals##2:wybe.phantom)

  LLVM code       :

; ModuleID = 'proc_print2'


 


declare external ccc  void @print_int(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"proc_print2.print2<0>"(i64  %"x##0", i64  %"y##0")    {
entry:
  tail call ccc  void  @print_int(i64  %"x##0")  
  tail call ccc  void  @print_int(i64  %"y##0")  
  ret void 
}
