======================================================================
AFTER EVERYTHING:
 Module exp_if
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : exp_if.<0>
                    exp_if.if_test<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: exp_if.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("expect larger: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @exp_if:nn:nn
    exp_if.if_test<0>(3:wybe.int, ?tmp#0##0:wybe.string) #1 @exp_if:nn:nn
    wybe.string.print<0>(~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @exp_if:nn:nn


proc if_test > public (1 calls)
0: exp_if.if_test<0>
if_test(x##0:wybe.int, ?#result##0:wybe.string)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_sgt(~x##0:wybe.int, 0:wybe.int, ?tmp#1##0:wybe.bool) @int:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign llvm move("smaller":wybe.string, ?#result##0:wybe.string) @exp_if:nn:nn

    1:
        foreign llvm move("larger":wybe.string, ?#result##0:wybe.string) @exp_if:nn:nn


  LLVM code       :

; ModuleID = 'exp_if'


 


@exp_if.3 =    constant {i64, i64} { i64 6, i64 ptrtoint ([?? x i8]* @exp_if.2 to i64) }


@exp_if.5 =    constant {i64, i64} { i64 7, i64 ptrtoint ([?? x i8]* @exp_if.4 to i64) }


@exp_if.1 =    constant {i64, i64} { i64 15, i64 ptrtoint ([?? x i8]* @exp_if.0 to i64) }


@exp_if.0 =    constant [?? x i8] c"expect larger: \00"


@exp_if.2 =    constant [?? x i8] c"larger\00"


@exp_if.4 =    constant [?? x i8] c"smaller\00"


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"exp_if.<0>"() alwaysinline   {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @exp_if.1, i32 0, i32 0) to i64))  
  %0 = tail call fastcc  i64  @"exp_if.if_test<0>"(i64  3)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  %0)  
  ret void 
}


define external fastcc  i64 @"exp_if.if_test<0>"(i64  %"x##0")    {
entry:
  %0 = icmp sgt i64 %"x##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  ret i64 ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @exp_if.3, i32 0, i32 0) to i64) 
if.else:
  ret i64 ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @exp_if.5, i32 0, i32 0) to i64) 
}
