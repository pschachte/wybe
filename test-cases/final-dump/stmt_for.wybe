pub def single_generator use !io {
    ?x = [1, 2, 3]

    for ?i in x {
        !println(i)
    }
}

pub def multiple_generator use !io {
    ?x = [1, 2, 3]
    ?y = [4, 5, 6]

    for ?i in x; ?j in y {
        !println(i)
        !println(j)
    }
}

pub def shortest_generator_termination use !io {
    ?x = [1, 2, 3, 4]
    ?y = [4, 5]

    for ?i in x
        ?j in y {
        !println(i)
        !println(j)
    }
}

pub def using_break use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        if {
            i = 3 :: break
        }
        !println(i)
    }
}

pub def using_next use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        if {
            i = 3 :: next
        }
        !println(i)
    }
}

pub def using_while use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        while i < 3
        !println(i)
    }
}

pub def using_until use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        until i = 3
        !println(i)
    }
}

pub def using_when use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        when i < 3
        !println(i)
    }
}

pub def using_unless use !io {
    ?x = [1, 2, 3, 4]

    for ?i in x {
        unless i < 3
        !println(i)
    }
}

pub def using_xrange use !io {
    for ?i in xrange(1, 1, 10) {
        !println(i)
    }
}

pub def using_xrange_reverse use !io {
    for ?i in xrange(10, -1, 1) {
        !println(i)
    }
}

pub def using_irange use !io {
    for ?i in irange(1, 1, 10) {
        !println(i)
    }
}

pub def using_irange_reverse use !io {
    for ?i in irange(10, -1, 1) {
        !println(i)
    }
}

pub def {test} semi_det_for_loop use !io {
    for ?i in xrange(0, 1, 10) {
        (i < 5)
        !println(i)
    }
}

# Testing code
!println("single_generator:")
!single_generator
!println("\nmultiple_generator")
!multiple_generator
!println("\nshortest_generator_termination")
!shortest_generator_termination
!println("\nusing_break")
!using_break
!println("\nusing_next")
!using_next
!println("\nusing_while")
!using_while
!println("\nusing_until")
!using_until
!println("\nusing_when")
!using_when
!println("\nusing_unless")
!using_unless
!println("\nusing_xrange")
!using_xrange
!println("\nusing_xrange_reverse")
!using_xrange_reverse
!println("\nusing_irange")
!using_irange
!println("\nusing_irange_reverse")
!using_irange_reverse
# !println("\nsemi_det_for_loop")
# !semi_det_for_loop
