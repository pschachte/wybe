======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module use_resource
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : use_resource.<0>
  constants       : 0:: CStringInfo {cstringChars = "Inner count (4): "}
                    1:: CStringInfo {cstringChars = "Outer count (1): "}
                    2:: StructInfo {structSize = 16, structData = [IntStructMember 17 8,PointerStructMember c"Inner count (4): "]}
                    3:: StructInfo {structSize = 16, structData = [IntStructMember 17 8,PointerStructMember c"Outer count (1): "]}
  imports         : use wybe
  resources       : count: fromList [(use_resource.count,wybe.int = 0 @use_resource:nn:nn @use_resource:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: use_resource.<0>
()<{<<use_resource.count>>, <<wybe.io.io>>}; {<<use_resource.count>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<use_resource.count>>:wybe.int, ?%tmp#0##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#0##0:wybe.int, 1:wybe.int, ?tmp#1##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(tmp#1##0:wybe.int, 1:wybe.int, ?tmp#2##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#2##0:wybe.int, 1:wybe.int, ?tmp#3##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#3##0:wybe.int, 1:wybe.int, ?tmp#4##0:wybe.int) @use_resource:nn:nn
    wybe.string.print<0>("Inner count (4): ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @use_resource:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#5##0:wybe.phantom) @use_resource:nn:nn
    foreign c print_int(~tmp#4##0:wybe.int, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @use_resource:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(~%tmp#7##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(tmp#1##0:wybe.int, <<use_resource.count>>:wybe.int) @use_resource:nn:nn
    wybe.string.print<0>("Outer count (1): ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @use_resource:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#8##0:wybe.phantom) @use_resource:nn:nn
    foreign c print_int(~tmp#1##0:wybe.int, ~tmp#8##0:wybe.phantom, ?tmp#9##0:wybe.phantom) @use_resource:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(~%tmp#10##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @use_resource:nn:nn


proc inc_count > {inline} (4 calls)
0: use_resource.inc_count<0>
inc_count()<{<<use_resource.count>>}; {<<use_resource.count>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<use_resource.count>>:wybe.int, ?%count##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~count##0:wybe.int, 1:wybe.int, ?tmp#0##0:wybe.int) @use_resource:nn:nn
    foreign lpvm store(~tmp#0##0:wybe.int, <<use_resource.count>>:wybe.int) @use_resource:nn:nn


proc use_test > {inline} (1 calls)
0: use_resource.use_test<0>
use_test()<{<<use_resource.count>>, <<wybe.io.io>>}; {<<use_resource.count>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<use_resource.count>>:wybe.int, ?%tmp#4##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#4##0:wybe.int, 1:wybe.int, ?tmp#5##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(tmp#5##0:wybe.int, 1:wybe.int, ?tmp#7##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#7##0:wybe.int, 1:wybe.int, ?tmp#9##0:wybe.int) @use_resource:nn:nn
    foreign llvm add(~tmp#9##0:wybe.int, 1:wybe.int, ?tmp#11##0:wybe.int) @use_resource:nn:nn
    wybe.string.print<0>("Inner count (4): ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @use_resource:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#17##0:wybe.phantom) @use_resource:nn:nn
    foreign c print_int(~tmp#11##0:wybe.int, ~tmp#17##0:wybe.phantom, ?tmp#18##0:wybe.phantom) @use_resource:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#18##0:wybe.phantom, ?tmp#19##0:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(~%tmp#19##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(tmp#5##0:wybe.int, <<use_resource.count>>:wybe.int) @use_resource:nn:nn
    wybe.string.print<0>("Outer count (1): ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #8 @use_resource:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#25##0:wybe.phantom) @use_resource:nn:nn
    foreign c print_int(~tmp#5##0:wybe.int, ~tmp#25##0:wybe.phantom, ?tmp#26##0:wybe.phantom) @use_resource:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#26##0:wybe.phantom, ?tmp#27##0:wybe.phantom) @use_resource:nn:nn
    foreign lpvm store(~%tmp#27##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @use_resource:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'use_resource'

source_filename = "!ROOT!/final-dump/use_resource.wybe"
target triple    ????

@"use_resource#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"Inner count (4): \00", align 8
@"use_resource#constant#1" = private unnamed_addr constant [ ?? x i8 ] c"Outer count (1): \00", align 8
@"use_resource#constant#2" = private unnamed_addr constant {i64, ptr} { i64 17, ptr @"use_resource#constant#0" }, align 8
@"use_resource#constant#3" = private unnamed_addr constant {i64, ptr} { i64 17, ptr @"use_resource#constant#1" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#use_resource.count" = global i64 undef

define external fastcc void @"use_resource.<0>"() {
  %"tmp#0##0" = load i64, ptr @"resource#use_resource.count"
  %"tmp#1##0" = add i64 %"tmp#0##0", 1
  %"tmp#2##0" = add i64 %"tmp#1##0", 1
  %"tmp#3##0" = add i64 %"tmp#2##0", 1
  %"tmp#4##0" = add i64 %"tmp#3##0", 1
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"use_resource#constant#2" to i64 ))
  call ccc void @print_int(i64 %"tmp#4##0")
  call ccc void @putchar(i8 10)
  store i64 %"tmp#1##0", ptr @"resource#use_resource.count"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"use_resource#constant#3" to i64 ))
  call ccc void @print_int(i64 %"tmp#1##0")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc void @"use_resource.inc_count<0>"() {
  %"count##0" = load i64, ptr @"resource#use_resource.count"
  %"tmp#0##0" = add i64 %"count##0", 1
  store i64 %"tmp#0##0", ptr @"resource#use_resource.count"
  ret void
}

define external fastcc void @"use_resource.use_test<0>"() {
  %"tmp#4##0" = load i64, ptr @"resource#use_resource.count"
  %"tmp#5##0" = add i64 %"tmp#4##0", 1
  %"tmp#7##0" = add i64 %"tmp#5##0", 1
  %"tmp#9##0" = add i64 %"tmp#7##0", 1
  %"tmp#11##0" = add i64 %"tmp#9##0", 1
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"use_resource#constant#2" to i64 ))
  call ccc void @print_int(i64 %"tmp#11##0")
  call ccc void @putchar(i8 10)
  store i64 %"tmp#5##0", ptr @"resource#use_resource.count"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"use_resource#constant#3" to i64 ))
  call ccc void @print_int(i64 %"tmp#5##0")
  call ccc void @putchar(i8 10)
  ret void
}
