======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module import_in_sub_mod_lib
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : import_in_sub_mod_lib.foo<0>
  imports         : use wybe
  resources       : 
  procs           : 

proc foo > public {inline} (0 calls)
0: import_in_sub_mod_lib.foo<0>
foo(v##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @import_in_sub_mod_lib:nn:nn
    foreign c print_int(~v##0:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @import_in_sub_mod_lib:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @import_in_sub_mod_lib:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @import_in_sub_mod_lib:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'import_in_sub_mod_lib'

source_filename = "!ROOT!/final-dump/import_in_sub_mod_lib.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"import_in_sub_mod_lib.foo<0>"(i64 %"v##0") {
  call ccc void @print_int(i64 %"v##0")
  call ccc void @putchar(i8 10)
  ret void
}
