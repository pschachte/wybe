======================================================================
AFTER EVERYTHING:
 Module loop_terminators
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use wybe
  resources       : 
  procs           : 

loop0 > {inline} (0 calls)
0: loop_terminators.loop0<0>
loop0()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop0#cont#1 > {inline} (2 calls)
0: loop_terminators.loop0#cont#1<0>
loop0#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop1 > {inline} (0 calls)
0: loop_terminators.loop1<0>
loop1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop1#cont#1 > {inline} (2 calls)
0: loop_terminators.loop1#cont#1<0>
loop1#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop2 > {inline} (0 calls)
0: loop_terminators.loop2<0>
loop2()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop2#cont#1 > {inline} (1 calls)
0: loop_terminators.loop2#cont#1<0>
loop2#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


loop3 > {inline} (0 calls)
0: loop_terminators.loop3<0>
loop3()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.c_string<0>("lol":wybe.string, ?tmp#0##0:wybe.c_string) #1 @control:nn:nn
    foreign c {terminal,semipure} error_exit(c"loop_terminators:14:11":wybe.c_string, ~tmp#0##0:wybe.c_string) @control:nn:nn


loop3#cont#1 > {inline} (1 calls)
0: loop_terminators.loop3#cont#1<0>
loop3#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.c_string<0>("lol":wybe.string, ?tmp#2##0:wybe.c_string) #1 @control:nn:nn
    foreign c {terminal,semipure} error_exit(c"loop_terminators:14:11":wybe.c_string, ~tmp#2##0:wybe.c_string) @control:nn:nn

  LLVM code       :

; ModuleID = 'loop_terminators'


 


@loop_terminators.1 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @loop_terminators.0 to i64) }


@loop_terminators.0 =    constant [?? x i8] c"lol\00"


@loop_terminators.2 =    constant [?? x i8] c"loop_terminators:14:11\00"


declare external ccc  void @error_exit(i64, i64)    


declare external fastcc  i64 @"wybe.string.c_string<0>"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"loop_terminators.loop0<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop0#cont#1<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop1<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop1#cont#1<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop2<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop2#cont#1<0>"() alwaysinline   {
entry:
  ret void 
}


define external fastcc  void @"loop_terminators.loop3<0>"() alwaysinline   {
entry:
  %0 = tail call fastcc  i64  @"wybe.string.c_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @loop_terminators.1, i32 0, i32 0) to i64))  
  tail call ccc  void  @error_exit(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @loop_terminators.2, i32 0, i32 0) to i64), i64  %0)  
  ret void 
}


define external fastcc  void @"loop_terminators.loop3#cont#1<0>"() alwaysinline   {
entry:
  %0 = tail call fastcc  i64  @"wybe.string.c_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @loop_terminators.1, i32 0, i32 0) to i64))  
  tail call ccc  void  @error_exit(i64  ptrtoint (i8* getelementptr inbounds ([?? x i8], [?? x i8]* @loop_terminators.2, i32 0, i32 0) to i64), i64  %0)  
  ret void 
}
