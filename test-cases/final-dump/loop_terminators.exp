======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module loop_terminators
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : 
  imports         : use wybe
  resources       : 
  procs           : 

proc loop0 > {inline} (0 calls)
0: loop_terminators.loop0<0>
loop0()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop0#cont#1 > {inline} (2 calls)
0: loop_terminators.loop0#cont#1<0>
loop0#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop1 > {inline} (0 calls)
0: loop_terminators.loop1<0>
loop1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop1#cont#1 > {inline} (2 calls)
0: loop_terminators.loop1#cont#1<0>
loop1#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop2 > {inline} (0 calls)
0: loop_terminators.loop2<0>
loop2()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop2#cont#1 > {inline} (1 calls)
0: loop_terminators.loop2#cont#1<0>
loop2#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc loop3 > {inline} (0 calls)
0: loop_terminators.loop3<0>
loop3()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.c_string<0>("lol":wybe.string, ?tmp#0##0:wybe.c_string) #1 @loop_terminators:nn:nn
    foreign c {terminal,semipure} error_exit(c"loop_terminators:14:11":wybe.c_string, ~tmp#0##0:wybe.c_string) @loop_terminators:nn:nn


proc loop3#cont#1 > {inline} (1 calls)
0: loop_terminators.loop3#cont#1<0>
loop3#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.c_string<0>("lol":wybe.string, ?tmp#2##0:wybe.c_string) #1 @loop_terminators:nn:nn
    foreign c {terminal,semipure} error_exit(c"loop_terminators:14:11":wybe.c_string, ~tmp#2##0:wybe.c_string) @loop_terminators:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'loop_terminators'

source_filename = "!ROOT!/final-dump/loop_terminators.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c"lol\00", align 8
@"cstring#1" = private unnamed_addr constant [ ?? x i8 ] c"loop_terminators:14:11\00", align 8
@"string#2" = private unnamed_addr constant {i64, i64} { i64 3, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8

declare external fastcc i64 @"wybe.string.c_string<0>"(i64)
declare external ccc void @error_exit(i64, i64)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"loop_terminators.loop0<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop0#cont#1<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop1<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop1#cont#1<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop2<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop2#cont#1<0>"() {
  ret void
}

define external fastcc void @"loop_terminators.loop3<0>"() {
  %"tmp#0##0" = tail call fastcc i64 @"wybe.string.c_string<0>"(i64 ptrtoint( ptr @"string#2" to i64 ))
  call ccc void @error_exit(i64 ptrtoint( ptr @"cstring#1" to i64 ), i64 %"tmp#0##0")
  ret void
}

define external fastcc void @"loop_terminators.loop3#cont#1<0>"() {
  %"tmp#2##0" = tail call fastcc i64 @"wybe.string.c_string<0>"(i64 ptrtoint( ptr @"string#2" to i64 ))
  call ccc void @error_exit(i64 ptrtoint( ptr @"cstring#1" to i64 ), i64 %"tmp#2##0")
  ret void
}
