======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module io_flow_ok
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : io_flow_ok.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: io_flow_ok.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("hello world!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #6 @io_flow_ok:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io_flow_ok:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io_flow_ok:nn:nn
    foreign lpvm store(~%tmp#2##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn
    io_flow_ok.unknown<0>(?tmp#0##0:wybe.bool) #1 @io_flow_ok:nn:nn
    case ~tmp#0##0:wybe.bool of
    0:
        wybe.string.print<0>("That's odd!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #7 @io_flow_ok:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn
        wybe.string.print<0>("hello world!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #8 @io_flow_ok:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#6##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign lpvm store(~%tmp#7##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn

    1:
        wybe.string.print<0>("OK":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #9 @io_flow_ok:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#9##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign lpvm store(~%tmp#10##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn
        wybe.string.print<0>("hello world!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #10 @io_flow_ok:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#11##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign c putchar('\n':wybe.char, ~tmp#11##0:wybe.phantom, ?tmp#12##0:wybe.phantom) @io_flow_ok:nn:nn
        foreign lpvm store(~%tmp#12##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn



proc aok > {inline} (5 calls)
0: io_flow_ok.aok<0>
aok()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("hello world!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @io_flow_ok:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @io_flow_ok:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io_flow_ok:nn:nn
    foreign lpvm store(~%tmp#2##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io_flow_ok:nn:nn


proc unknown > {noinline} (3 calls)
0: io_flow_ok.unknown<0>
unknown(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'io_flow_ok'

source_filename = "!ROOT!/final-dump/io_flow_ok.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c"OK\00", align 8
@"cstring#1" = private unnamed_addr constant [ ?? x i8 ] c"That's odd!\00", align 8
@"cstring#2" = private unnamed_addr constant [ ?? x i8 ] c"hello world!\00", align 8
@"string#3" = private unnamed_addr constant {i64, i64} { i64 2, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8
@"string#4" = private unnamed_addr constant {i64, i64} { i64 11, i64 ptrtoint( ptr @"cstring#1" to i64 ) }, align 8
@"string#5" = private unnamed_addr constant {i64, i64} { i64 12, i64 ptrtoint( ptr @"cstring#2" to i64 ) }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"io_flow_ok.<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  call ccc void @putchar(i8 10)
  %"tmp#0##0" = tail call fastcc i1 @"io_flow_ok.unknown<0>"()
  br i1 %"tmp#0##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#3" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  call ccc void @putchar(i8 10)
  ret void
if.else.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#4" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc void @"io_flow_ok.aok<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc i1 @"io_flow_ok.unknown<0>"() {
  ret i1 1
}
