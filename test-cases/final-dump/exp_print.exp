======================================================================
AFTER EVERYTHING:
 Module exp_print
  public submods  : 
  public types    : 
  public resources: 
  public procs    : exp_print.<0>
  imports         : use wybe
  types           : 
  resources       : 
  procs           : 

*main* > public (0 calls)
0: (argc#0:wybe.int, [?argc#0:wybe.int], argv#0:wybe.int, [?argv#0:wybe.int], exit_code#0:wybe.int, [?exit_code#0:wybe.int], io#0:wybe.phantom, ?io#6:wybe.phantom): AliasPairs: []
    foreign c print_string("print(x:string) creates a newline already":wybe.string, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:nn:nn
    foreign c print_string("println(x:string) generates an extra newline?":wybe.string, ~#io#1:wybe.phantom, ?tmp$4#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$4#0:wybe.phantom, ?#io#2:wybe.phantom) @wybe:nn:nn
    foreign c print_string("println(x:string) generates an extra newline?":wybe.string, ~#io#2:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$7#0:wybe.phantom, ?#io#3:wybe.phantom) @wybe:nn:nn
    foreign c putchar('c':wybe.char, ~#io#3:wybe.phantom, ?tmp$10#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$10#0:wybe.phantom, ?#io#4:wybe.phantom) @wybe:nn:nn
    foreign c print_int(1:wybe.int, ~#io#4:wybe.phantom, ?tmp$13#0:wybe.phantom) @wybe:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp$13#0:wybe.phantom, ?#io#5:wybe.phantom) @wybe:nn:nn
    foreign c print_int(1:wybe.int, ~#io#5:wybe.phantom, ?#io#6:wybe.phantom) @wybe:nn:nn

  LLVM code       :

; ModuleID = 'exp_print'


 


declare external ccc  void @print_int(i64)    


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_string(i64)    


@exp_print.5 =    constant [46 x i8] c"println(x:string) generates an extra newline?\00"


@exp_print.3 =    constant [46 x i8] c"println(x:string) generates an extra newline?\00"


@exp_print.1 =    constant [42 x i8] c"print(x:string) creates a newline already\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"exp_print.<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  %2 = ptrtoint i8* getelementptr inbounds ([42 x i8], [42 x i8]* @exp_print.1, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %2)  
  %4 = ptrtoint i8* getelementptr inbounds ([46 x i8], [46 x i8]* @exp_print.3, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %4)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = ptrtoint i8* getelementptr inbounds ([46 x i8], [46 x i8]* @exp_print.5, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @putchar(i8  99)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  1)  
  tail call ccc  void  @putchar(i8  10)  
  tail call ccc  void  @print_int(i64  1)  
  ret void 
}
