======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module unique_position
  representation  : (not a type)
  public submods  : unique_position -> unique_position.unique_position
  public resources: 
  public procs    : unique_position.<0>
                    unique_position.printPosition<0>
                    unique_position.unique_position.unique_position<0>
                    unique_position.unique_position.unique_position<1>
                    unique_position.unique_position.x<0>
                    unique_position.unique_position.x<1>
                    unique_position.unique_position.y<0>
                    unique_position.unique_position.y<1>
  imports         : public use unique_position.unique_position
                    use wybe
  resources       : 
  submodules      : unique_position.unique_position
  procs           : 

module top-level code > public {semipure} (0 calls)
0: unique_position.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?tmp#3##0:unique_position.unique_position) @unique_position:nn:nn
    foreign lpvm mutate(~tmp#3##0:unique_position.unique_position, ?tmp#4##0:unique_position.unique_position, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 3:wybe.int) @unique_position:nn:nn
    foreign lpvm mutate(~tmp#4##0:unique_position.unique_position, ?tmp#5##0:unique_position.unique_position, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 4:wybe.int) @unique_position:nn:nn
    foreign lpvm {noalias} mutate(~tmp#5##0:unique_position.unique_position, ?p2##1:unique_position.unique_position, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 5:wybe.int) @unique_position:nn:nn
    unique_position.printPosition<0>(~p2##1:unique_position.unique_position)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @unique_position:nn:nn


proc printPosition > public (1 calls)
0: unique_position.printPosition<0>
printPosition(pos##0:unique_position.unique_position)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(3,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(8,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm {unique} access(pos##0:unique_position.unique_position, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?x##0:wybe.int) @unique_position:nn:nn
    foreign lpvm {unique} access(~pos##0:unique_position.unique_position, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?y##0:wybe.int) @unique_position:nn:nn
    wybe.string.print<0>(" (":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @unique_position:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @unique_position:nn:nn
    foreign c print_int(~x##0:wybe.int, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @unique_position:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @unique_position:nn:nn
    wybe.string.print<0>[410bae77d3](1203:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3 @unique_position:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#10##0:wybe.phantom) @unique_position:nn:nn
    foreign c print_int(~y##0:wybe.int, ~tmp#10##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @unique_position:nn:nn
    foreign lpvm store(~%tmp#11##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @unique_position:nn:nn
    wybe.string.print<0>[410bae77d3](1191:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #8 @unique_position:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#18##0:wybe.phantom) @unique_position:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#18##0:wybe.phantom, ?tmp#19##0:wybe.phantom) @unique_position:nn:nn
    foreign lpvm store(~%tmp#19##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @unique_position:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'unique_position'

source_filename = "!ROOT!/final-dump/unique_position.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c" (\00", align 8
@"string#1" = private unnamed_addr constant {i64, i64} { i64 2, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"unique_position.<0>"() {
  %"tmp#8##0" = call ccc ptr @wybe_malloc(i32 16)
  %"tmp#3##0" = ptrtoint ptr %"tmp#8##0" to i64
  %"tmp#9##0" = inttoptr i64 %"tmp#3##0" to ptr
  store i64 3, ptr %"tmp#9##0"
  %"tmp#10##0" = add i64 %"tmp#3##0", 8
  %"tmp#11##0" = inttoptr i64 %"tmp#10##0" to ptr
  store i64 4, ptr %"tmp#11##0"
  %"tmp#12##0" = inttoptr i64 %"tmp#3##0" to ptr
  store i64 5, ptr %"tmp#12##0"
  tail call fastcc void @"unique_position.printPosition<0>"(i64 %"tmp#3##0")
  ret void
}

define external fastcc void @"unique_position.printPosition<0>"(i64 %"pos##0") {
  %"tmp#20##0" = inttoptr i64 %"pos##0" to ptr
  %"x##0" = load i64, ptr %"tmp#20##0"
  %"tmp#21##0" = add i64 %"pos##0", 8
  %"tmp#22##0" = inttoptr i64 %"tmp#21##0" to ptr
  %"y##0" = load i64, ptr %"tmp#22##0"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#1" to i64 ))
  call ccc void @print_int(i64 %"x##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1203)
  call ccc void @print_int(i64 %"y##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1191)
  call ccc void @putchar(i8 10)
  ret void
}

--------------------------------------------------
 Module unique_position.unique_position
 modifiers       : {unique} 
  representation  : pointer
  public submods  : 
  public resources: 
  public procs    : unique_position.unique_position.unique_position<0>
                    unique_position.unique_position.unique_position<1>
                    unique_position.unique_position.x<0>
                    unique_position.unique_position.x<1>
                    unique_position.unique_position.y<0>
                    unique_position.unique_position.y<1>
  imports         : use unique_position
                    use wybe
  resources       : 
  procs           : 

proc unique_position > public {inline} (0 calls)
0: unique_position.unique_position.unique_position<0>
unique_position(x##0:wybe.int, y##0:wybe.int, ?#result##0:unique_position.unique_position)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?#rec##0:unique_position.unique_position) @unique_position:nn:nn
    foreign lpvm mutate(~#rec##0:unique_position.unique_position, ?#rec##1:unique_position.unique_position, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~x##0:wybe.int) @unique_position:nn:nn
    foreign lpvm mutate(~#rec##1:unique_position.unique_position, ?#result##0:unique_position.unique_position, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~y##0:wybe.int) @unique_position:nn:nn
proc unique_position > public {inline} (0 calls)
1: unique_position.unique_position.unique_position<1>
unique_position(?x##0:wybe.int, ?y##0:wybe.int, #result##0:unique_position.unique_position)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm {unique} access(#result##0:unique_position.unique_position, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?x##0:wybe.int) @unique_position:nn:nn
    foreign lpvm {unique} access(~#result##0:unique_position.unique_position, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?y##0:wybe.int) @unique_position:nn:nn


proc x > public {inline} (0 calls)
0: unique_position.unique_position.x<0>
x(#rec##0:unique_position.unique_position, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:unique_position.unique_position, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.int) @unique_position:nn:nn
proc x > public {inline} (0 calls)
1: unique_position.unique_position.x<1>
x(#rec##0:unique_position.unique_position, ?#rec##1:unique_position.unique_position, #field##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~#rec##0:unique_position.unique_position, ?#rec##1:unique_position.unique_position, 0:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.int) @unique_position:nn:nn


proc y > public {inline} (0 calls)
0: unique_position.unique_position.y<0>
y(#rec##0:unique_position.unique_position, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:unique_position.unique_position, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.int) @unique_position:nn:nn
proc y > public {inline} (0 calls)
1: unique_position.unique_position.y<1>
y(#rec##0:unique_position.unique_position, ?#rec##1:unique_position.unique_position, #field##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~#rec##0:unique_position.unique_position, ?#rec##1:unique_position.unique_position, 8:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.int) @unique_position:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'unique_position.unique_position'

source_filename = "!ROOT!/final-dump/unique_position.wybe"
target triple    ????


declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i64 @"unique_position.unique_position.unique_position<0>"(i64 %"x##0", i64 %"y##0") {
  %"tmp#0##0" = call ccc ptr @wybe_malloc(i32 16)
  %"#rec##0" = ptrtoint ptr %"tmp#0##0" to i64
  %"tmp#1##0" = inttoptr i64 %"#rec##0" to ptr
  store i64 %"x##0", ptr %"tmp#1##0"
  %"tmp#2##0" = add i64 %"#rec##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"y##0", ptr %"tmp#3##0"
  ret i64 %"#rec##0"
}

define external fastcc {i64, i64} @"unique_position.unique_position.unique_position<1>"(i64 %"#result##0") {
  %"tmp#0##0" = inttoptr i64 %"#result##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  %"tmp#2##0" = add i64 %"#result##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  %"tmp#4##0" = load i64, ptr %"tmp#3##0"
  %"tmp#5##0" = insertvalue {i64, i64} undef, i64 %"tmp#1##0", 0
  %"tmp#6##0" = insertvalue {i64, i64} %"tmp#5##0", i64 %"tmp#4##0", 1
  ret {i64, i64} %"tmp#6##0"
}

define external fastcc i64 @"unique_position.unique_position.x<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  ret i64 %"tmp#1##0"
}

define external fastcc i64 @"unique_position.unique_position.x<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"#field##0", ptr %"tmp#3##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"unique_position.unique_position.y<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = add i64 %"#rec##0", 8
  %"tmp#1##0" = inttoptr i64 %"tmp#0##0" to ptr
  %"tmp#2##0" = load i64, ptr %"tmp#1##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"unique_position.unique_position.y<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = add i64 %"tmp#2##0", 8
  %"tmp#4##0" = inttoptr i64 %"tmp#3##0" to ptr
  store i64 %"#field##0", ptr %"tmp#4##0"
  ret i64 %"tmp#2##0"
}
