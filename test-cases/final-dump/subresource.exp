======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module subresource
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : subresource.<0>
  constants       : 0:: CStringInfo {cstringChars = "res = "}
                    1:: StructInfo {structSize = 16, structData = [IntStructMember 6 8,PointerStructMember c"res = "]}
  imports         : use subresource.a
                    use wybe
  resources       : 
  submodules      : subresource.a
  procs           : 

module top-level code > public {semipure} (0 calls)
0: subresource.<0>
()<{<<subresource.a.res>>, <<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(5,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm load(<<subresource.a.res>>:wybe.int, ?%res##0:wybe.int) @subresource:nn:nn
    wybe.int.fmt<2>(~res##0:wybe.int, 0:wybe.int, 32:wybe.char, ?tmp#2##0:wybe.string) #4 @subresource:nn:nn
    wybe.string.,,<0>("res = ":wybe.string, ~tmp#2##0:wybe.string, ?tmp#0##0:wybe.string) #2 @subresource:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @subresource:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#9##0:wybe.phantom) @subresource:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @subresource:nn:nn
    foreign lpvm store(~%tmp#10##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @subresource:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'subresource'

source_filename = "!ROOT!/final-dump/subresource.wybe"
target triple    ????

@"subresource#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"res = \00", align 8
@"subresource#constant#1" = private unnamed_addr constant {i64, ptr} { i64 6, ptr @"subresource#constant#0" }, align 8

declare external fastcc i64 @"wybe.int.fmt<2>"(i64, i64, i8)
declare external fastcc i64 @"wybe.string.,,<0>"(i64, i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"subresource.<0>"() {
  %"res##0" = load i64, ptr @"resource#subresource.a.res"
  %"tmp#2##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"res##0", i64 0, i8 32)
  %"tmp#0##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"subresource#constant#1" to i64 ), i64 %"tmp#2##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  ret void
}

--------------------------------------------------
 Module subresource.a
  representation  : (not a type)
  public submods  : 
  public resources: res: subresource.a.res
  public procs    : 
  constants       : 
  imports         : use subresource
                    use wybe
  resources       : res: fromList [(subresource.a.res,wybe.int = 42 @subresource:nn:nn @subresource:nn:nn)]
  procs           : 


  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'subresource.a'

source_filename = "!ROOT!/final-dump/subresource.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#subresource.a.res" = global i64 undef
