======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module dont_care_constraint
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : dont_care_constraint.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: dont_care_constraint.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @dont_care_constraint:nn:nn
    foreign c read_line(?tmp#2##0:wybe.c_string, ~tmp#1##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @dont_care_constraint:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @dont_care_constraint:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'dont_care_constraint'

source_filename = "!ROOT!/final-dump/dont_care_constraint.wybe"
target triple    ????


declare external ccc i64 @read_line()
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"dont_care_constraint.<0>"() {
  %"tmp#2##0" = call ccc i64 @read_line()
  ret void
}
