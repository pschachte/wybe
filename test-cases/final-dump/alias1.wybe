use position

pub def replicate(p1:position, ?p2:position) use !io {
  ?pp = position(0,0)
  !print("random print")
  !println(pp^x)
  ?p2 = p1
}

pub def foo use !io {
  ?p1 = position(101,102)
  !replicate(p1, ?p2)

  !println("--- Inside foo: ")
  !print("expect p1(101,102):")
  !printPosition(p1)
  !print("expect p2(101,102):")
  !printPosition(p2)

  x(!p1, 555)

  !println("--- Inside foo, after calling x(!p1, 555): ")
  !print("expect p1(555,102):")
  !printPosition(p1)
  !print("expect p2(101,102):")
  !printPosition(p2)
}

pub def bar use !io {
  ?p1 = position(101,102)
  !replicate(p1, ?p2)

  !println("--- Inside bar: ")
  !print("expect p1(101,102):")
  !printPosition(p1)
  !print("expect p2(101,102):")
  !printPosition(p2)

  x(!p2, 555)

  !println("--- Inside bar, after calling x(!p2, 555): ")
  !print("expect p1(101,102):")
  !printPosition(p1)
  !print("expect p2(555,102):")
  !printPosition(p2)
}

pub def baz use !io {
  ?p1 = position(101,102)
  !replicate(p1, ?p2)

  !println("--- Inside baz: ")
  !print("expect p1(101,102):")
  !printPosition(p1)
  !print("expect p2(101,102):")
  !printPosition(p2)

  ?p3 = position(33333333, p2^y)
  !print("expect p3(33333333,102):")
  !printPosition(p3)

  x(!p1, 555)

  !println("--- Inside baz, after calling x(!p1, 555): ")
  !print("expect p1(555,102):")
  !printPosition(p1)
  !print("expect p2(101,102):")
  !printPosition(p2)
  !print("expect p3(33333333,102):")
  !printPosition(p3)
}

!println("-------------- Calling foo: ")
!foo
!println("-------------- Calling bar: ")
!bar
!println("-------------- Calling baz: ")
!baz
