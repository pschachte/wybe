======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module higher_order_refs
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : higher_order_refs.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: higher_order_refs.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    higher_order_refs.app<0>(higher_order_refs.#anon#1<1><>:(wybe.float, ?wybe.float), 1.0:wybe.float, ?tmp#0##0:wybe.float) #0 @higher_order_refs:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#11##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c print_float(~tmp#0##0:wybe.float, ~tmp#11##0:wybe.phantom, ?tmp#12##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#12##0:wybe.phantom, ?tmp#13##0:wybe.phantom) @higher_order_refs:nn:nn
    higher_order_refs.app<0>(higher_order_refs.#anon#2<1><>:(wybe.float, ?wybe.float), 1.0:wybe.float, ?tmp#1##0:wybe.float) #2 @higher_order_refs:nn:nn
    foreign c print_float(~tmp#1##0:wybe.float, ~tmp#13##0:wybe.phantom, ?tmp#16##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#16##0:wybe.phantom, ?tmp#17##0:wybe.phantom) @higher_order_refs:nn:nn
    higher_order_refs.app<0>(higher_order_refs.#anon#3<1><0.5:wybe.float>:(wybe.float, ?wybe.float), 1.0:wybe.float, ?tmp#3##0:wybe.float) #4 @higher_order_refs:nn:nn
    foreign c print_float(~tmp#3##0:wybe.float, ~tmp#17##0:wybe.phantom, ?tmp#20##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#20##0:wybe.phantom, ?tmp#21##0:wybe.phantom) @higher_order_refs:nn:nn
    higher_order_refs.app<0>(higher_order_refs.#closure#1<0><>:(wybe.float, ?wybe.float), 1.0:wybe.float, ?tmp#5##0:wybe.float) #6 @higher_order_refs:nn:nn
    foreign c print_float(~tmp#5##0:wybe.float, ~tmp#21##0:wybe.phantom, ?tmp#24##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#24##0:wybe.phantom, ?tmp#25##0:wybe.phantom) @higher_order_refs:nn:nn
    higher_order_refs.app<0>(higher_order_refs.#closure#2<0><>:(wybe.int, ?wybe.int), 1:wybe.int, ?tmp#6##0:wybe.int) #8 @higher_order_refs:nn:nn
    foreign c print_int(~tmp#6##0:wybe.int, ~tmp#25##0:wybe.phantom, ?tmp#28##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#28##0:wybe.phantom, ?tmp#29##0:wybe.phantom) @higher_order_refs:nn:nn
    higher_order_refs.app<0>(higher_order_refs.#closure#3<0><_:wybe.int>:(wybe.int, ?wybe.int), 1:wybe.int, ?tmp#8##0:wybe.int) #10 @higher_order_refs:nn:nn
    foreign c print_int(~tmp#8##0:wybe.int, ~tmp#29##0:wybe.phantom, ?tmp#32##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#32##0:wybe.phantom, ?tmp#33##0:wybe.phantom) @higher_order_refs:nn:nn
    foreign lpvm store(~%tmp#33##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_refs:nn:nn


proc #anon#1 > {inline} (1 calls)
0: higher_order_refs.#anon#1<0>
#anon#1(anon#1#1##0:wybe.float, ?anon#1#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~anon#1#1##0:wybe.float, ?anon#1#2##0:wybe.float) @higher_order_refs:nn:nn
proc #anon#1 > {inline} (1 calls)
1: higher_order_refs.#anon#1<1>
#anon#1(anon#1#1##0:wybe.float, ?anon#1#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~anon#1#1##0:wybe.float, ?anon#1#2##0:wybe.float) @higher_order_refs:nn:nn


proc #anon#2 > {inline} (1 calls)
0: higher_order_refs.#anon#2<0>
#anon#2(anon#2#1##0:wybe.float, ?anon#2#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~anon#2#1##0:wybe.float, ?anon#2#2##0:wybe.float) @higher_order_refs:nn:nn
proc #anon#2 > {inline} (1 calls)
1: higher_order_refs.#anon#2<1>
#anon#2(anon#2#1##0:wybe.float, ?anon#2#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~anon#2#1##0:wybe.float, ?anon#2#2##0:wybe.float) @higher_order_refs:nn:nn


proc #anon#3 > {inline} (1 calls)
0: higher_order_refs.#anon#3<0>
#anon#3(^y##0:wybe.float, anon#3#1##0:wybe.float, ?anon#3#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fsub(~anon#3#1##0:wybe.float, ~y##0:wybe.float, ?anon#3#2##0:wybe.float) @higher_order_refs:nn:nn
proc #anon#3 > {inline} (1 calls)
1: higher_order_refs.#anon#3<1>
#anon#3(^y##0:wybe.float, anon#3#1##0:wybe.float, ?anon#3#2##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fsub(~anon#3#1##0:wybe.float, ~^y##0:wybe.float, ?anon#3#2##0:wybe.float) @higher_order_refs:nn:nn


proc #closure#1 > {inline} (1 calls)
0: higher_order_refs.#closure#1<0>
#closure#1(a##0:A <{}; {}; {0}>, ?#result##0:A <{}; {}; {0}>)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~a##0:A, ?#result##0:A) @predicate:nn:nn


proc #closure#2 > {inline} (1 calls)
0: higher_order_refs.#closure#2<0>
#closure#2(i##0:wybe.int, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(~i##0:wybe.int, 1:wybe.int, ?#result##0:wybe.int) @higher_order_refs:nn:nn


proc #closure#3 > {inline} (1 calls)
0: higher_order_refs.#closure#3<0>
#closure#3([^x##0:wybe.int], y##0:wybe.int, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(~y##0:wybe.int, 10:wybe.int, ?#result##0:wybe.int) @int:nn:nn


proc add_one > {inline} (1 calls)
0: higher_order_refs.add_one<0>
add_one(i##0:wybe.int, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(~i##0:wybe.int, 1:wybe.int, ?#result##0:wybe.int) @higher_order_refs:nn:nn
proc add_one > {inline} (0 calls)
1: higher_order_refs.add_one<1>
add_one(f##0:wybe.float, ?#result##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fadd(~f##0:wybe.float, 1.0:wybe.float, ?#result##0:wybe.float) @higher_order_refs:nn:nn


proc app > {noinline} (6 calls)
0: higher_order_refs.app<0>
app(f##0:(I, ?J) <{}; {}; {0}>, i##0:I <{}; {}; {1}>, ?#result##0:J <{}; {}; {0, 1}>)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    ~f##0:(I, ?J)(~i##0:I, ?#result##0:J) #0 @higher_order_refs:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'higher_order_refs'

source_filename = "!ROOT!/final-dump/higher_order_refs.wybe"
target triple    ????

@"closure#0" = private unnamed_addr constant {ptr} { ptr @"higher_order_refs.#anon#1<1>" }, align 8
@"closure#1" = private unnamed_addr constant {ptr} { ptr @"higher_order_refs.#anon#2<1>" }, align 8
@"closure#2" = private unnamed_addr constant {ptr, double} { ptr @"higher_order_refs.#anon#3<1>", double 0.5 }, align 8
@"closure#3" = private unnamed_addr constant {ptr} { ptr @"higher_order_refs.#closure#1<0>" }, align 8
@"closure#4" = private unnamed_addr constant {ptr} { ptr @"higher_order_refs.#closure#2<0>" }, align 8
@"closure#5" = private unnamed_addr constant {ptr, i64} { ptr @"higher_order_refs.#closure#3<0>", i64 undef }, align 8

declare external ccc void @print_float(double)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"higher_order_refs.<0>"() {
  %"tmp#34##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#0" to i64 ), i64 bitcast( double 1.0 to i64 ))
  %"tmp#0##0" = bitcast i64 %"tmp#34##0" to double
  call ccc void @print_float(double %"tmp#0##0")
  call ccc void @putchar(i8 10)
  %"tmp#35##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#1" to i64 ), i64 bitcast( double 1.0 to i64 ))
  %"tmp#1##0" = bitcast i64 %"tmp#35##0" to double
  call ccc void @print_float(double %"tmp#1##0")
  call ccc void @putchar(i8 10)
  %"tmp#36##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#2" to i64 ), i64 bitcast( double 1.0 to i64 ))
  %"tmp#3##0" = bitcast i64 %"tmp#36##0" to double
  call ccc void @print_float(double %"tmp#3##0")
  call ccc void @putchar(i8 10)
  %"tmp#37##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#3" to i64 ), i64 bitcast( double 1.0 to i64 ))
  %"tmp#5##0" = bitcast i64 %"tmp#37##0" to double
  call ccc void @print_float(double %"tmp#5##0")
  call ccc void @putchar(i8 10)
  %"tmp#6##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#4" to i64 ), i64 1)
  call ccc void @print_int(i64 %"tmp#6##0")
  call ccc void @putchar(i8 10)
  %"tmp#8##0" = tail call fastcc i64 @"higher_order_refs.app<0>"(i64 ptrtoint( ptr @"closure#5" to i64 ), i64 1)
  call ccc void @print_int(i64 %"tmp#8##0")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc double @"higher_order_refs.#anon#1<0>"(double %"anon#1#1##0") {
  ret double %"anon#1#1##0"
}

define external fastcc i64 @"higher_order_refs.#anon#1<1>"(i64 %"#env##0", i64 %"generic#anon#1#1##0") {
  %"anon#1#1##0" = bitcast i64 %"generic#anon#1#1##0" to double
  %"tmp#1##0" = bitcast double %"anon#1#1##0" to i64
  ret i64 %"tmp#1##0"
}

define external fastcc double @"higher_order_refs.#anon#2<0>"(double %"anon#2#1##0") {
  ret double %"anon#2#1##0"
}

define external fastcc i64 @"higher_order_refs.#anon#2<1>"(i64 %"#env##0", i64 %"generic#anon#2#1##0") {
  %"anon#2#1##0" = bitcast i64 %"generic#anon#2#1##0" to double
  %"tmp#1##0" = bitcast double %"anon#2#1##0" to i64
  ret i64 %"tmp#1##0"
}

define external fastcc double @"higher_order_refs.#anon#3<0>"(double %"y##0", double %"anon#3#1##0") {
  %"tmp#12##0" = fsub double %"anon#3#1##0", %"y##0"
  ret double %"tmp#12##0"
}

define external fastcc i64 @"higher_order_refs.#anon#3<1>"(i64 %"#env##0", i64 %"generic#anon#3#1##0") {
  %"tmp#2##0" = add i64 %"#env##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  %"generic#y##0" = load i64, ptr %"tmp#3##0"
  %"anon#3#1##0" = bitcast i64 %"generic#anon#3#1##0" to double
  %"y##0" = bitcast i64 %"generic#y##0" to double
  %"anon#3#2##0" = fsub double %"anon#3#1##0", %"y##0"
  %"tmp#4##0" = bitcast double %"anon#3#2##0" to i64
  ret i64 %"tmp#4##0"
}

define external fastcc i64 @"higher_order_refs.#closure#1<0>"(i64 %"#env##0", i64 %"generic#a##0") {
  ret i64 %"generic#a##0"
}

define external fastcc i64 @"higher_order_refs.#closure#2<0>"(i64 %"#env##0", i64 %"generic#i##0") {
  %"#result##0" = add i64 %"generic#i##0", 1
  ret i64 %"#result##0"
}

define external fastcc i64 @"higher_order_refs.#closure#3<0>"(i64 %"#env##0", i64 %"generic#y##0") {
  %"#result##0" = add i64 %"generic#y##0", 10
  ret i64 %"#result##0"
}

define external fastcc i64 @"higher_order_refs.add_one<0>"(i64 %"i##0") {
  %"tmp#3##0" = add i64 %"i##0", 1
  ret i64 %"tmp#3##0"
}

define external fastcc double @"higher_order_refs.add_one<1>"(double %"f##0") {
  %"tmp#3##0" = fadd double %"f##0", 1.0
  ret double %"tmp#3##0"
}

define external fastcc i64 @"higher_order_refs.app<0>"(i64 %"f##0", i64 %"i##0") {
  %"tmp#2##0" = inttoptr i64 %"f##0" to ptr
  %"tmp#1##0" = load ptr, ptr %"tmp#2##0"
  %"tmp#3##0" = tail call fastcc i64 %"tmp#1##0"(i64 %"f##0", i64 %"i##0")
  ret i64 %"tmp#3##0"
}
