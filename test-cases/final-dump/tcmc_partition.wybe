# tests that this implementation of `partition` gets TCMC-optimized.

def partition(p: {test}(T), l: list(T), ?yes: list(T), ?no: list(T)) {
    if { [?h | ?t] = l ::
            # XXX: this doesn't optimize when `partition`
            # is hoisted above the if/else:
            #
            #   partition(p, t, ?yes0, ?no0)
            #
            # since the current implementation only looks for
            # last-calls in "leaves" of the proc body
            if { p(h) ::
                partition(p, t, ?yes0, ?no0)
                ?yes = [h|yes0]
                ?no = no0
                | else ::
                partition(p, t, ?yes0, ?no0)
                ?yes = yes0
                ?no = [h|no0]
            }
        | else ::
            ?yes = []
            ?no = []
    }
}

?l = [1,2,9,3,4,5,6,7]
!println(print, l)
partition({test} { @1 >= 3}, l, ?yes, ?no)
!print(print, yes)
!print(", ")
!print(print, no)
!nl