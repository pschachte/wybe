#pub def mod(x:int, y:int):int = foreign llvm urem(x, y)
#pub def mod(x:int, y:int, ?r:int)  {?r = foreign llvm urem(x, y) end

pub def mod(x:int, y:int, ?r:int) use !io {
  !print('x') ; !print(x) ; !print(' ') ; !print('y') ; !println(y)
  ?r = foreign llvm urem(x, y)
}

pub def gcd(a:int, b:int, ?r:int) use !io {
  ?x = a
  ?y = b
  ?t = a
  do {
    while y ~= 0
      ?t = y
      !mod(x, t, ?y)
      ?x = t
  }
  ?r = x
}

!gcd(18, 24, ?r)
!print(r)
