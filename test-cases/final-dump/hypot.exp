======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module hypot
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : hypot.<0>
  constants       : 0:: CStringInfo {cstringChars = "hypot(3,4) = "}
                    1:: CStringInfo {cstringChars = "area(5) = "}
                    2:: CStringInfo {cstringChars = "e = "}
                    3:: CStringInfo {cstringChars = " = "}
                    4:: CStringInfo {cstringChars = "sin(30) = "}
                    5:: CStringInfo {cstringChars = "cos(30) = "}
                    6:: CStringInfo {cstringChars = "sin(30 degrees) = "}
                    7:: CStringInfo {cstringChars = "cos(30 degrees) = "}
                    8:: CStringInfo {cstringChars = "ln(e) = "}
                    9:: CStringInfo {cstringChars = "common log(e) = "}
                    10:: CStringInfo {cstringChars = "base 2 log(e) = "}
                    11:: CStringInfo {cstringChars = "floor(pi) = "}
                    12:: CStringInfo {cstringChars = "ceil(pi) = "}
                    13:: CStringInfo {cstringChars = "round(pi) = "}
                    14:: CStringInfo {cstringChars = "iround(pi) = "}
                    15:: StructInfo {structSize = 16, structData = [IntStructMember 13 8,PointerStructMember c"hypot(3,4) = "]}
                    16:: StructInfo {structSize = 16, structData = [IntStructMember 10 8,PointerStructMember c"area(5) = "]}
                    17:: StructInfo {structSize = 16, structData = [IntStructMember 4 8,PointerStructMember c"e = "]}
                    18:: StructInfo {structSize = 16, structData = [IntStructMember 3 8,PointerStructMember c" = "]}
                    19:: StructInfo {structSize = 16, structData = [IntStructMember 10 8,PointerStructMember c"sin(30) = "]}
                    20:: StructInfo {structSize = 16, structData = [IntStructMember 10 8,PointerStructMember c"cos(30) = "]}
                    21:: StructInfo {structSize = 16, structData = [IntStructMember 18 8,PointerStructMember c"sin(30 degrees) = "]}
                    22:: StructInfo {structSize = 16, structData = [IntStructMember 18 8,PointerStructMember c"cos(30 degrees) = "]}
                    23:: StructInfo {structSize = 16, structData = [IntStructMember 8 8,PointerStructMember c"ln(e) = "]}
                    24:: StructInfo {structSize = 16, structData = [IntStructMember 16 8,PointerStructMember c"common log(e) = "]}
                    25:: StructInfo {structSize = 16, structData = [IntStructMember 16 8,PointerStructMember c"base 2 log(e) = "]}
                    26:: StructInfo {structSize = 16, structData = [IntStructMember 12 8,PointerStructMember c"floor(pi) = "]}
                    27:: StructInfo {structSize = 16, structData = [IntStructMember 11 8,PointerStructMember c"ceil(pi) = "]}
                    28:: StructInfo {structSize = 16, structData = [IntStructMember 12 8,PointerStructMember c"round(pi) = "]}
                    29:: StructInfo {structSize = 16, structData = [IntStructMember 13 8,PointerStructMember c"iround(pi) = "]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: hypot.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("hypot(3,4) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @hypot:nn:nn
    foreign c llvm.sqrt.f64(25.0:wybe.float, ?tmp#1##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#53##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#1##0:wybe.float, ~tmp#53##0:wybe.phantom, ?tmp#54##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#54##0:wybe.phantom, ?tmp#55##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#55##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("area(5) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#63##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(78.53981633974483:wybe.float, ~tmp#63##0:wybe.phantom, ?tmp#64##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#64##0:wybe.phantom, ?tmp#65##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#65##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("e = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #9 @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#71##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(2.7182818284590455:wybe.float, ~tmp#71##0:wybe.phantom, ?tmp#72##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#72##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>(" = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #13 @hypot:nn:nn
    foreign c llvm.exp.f64(1.0:wybe.float, ?tmp#7##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#79##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#7##0:wybe.float, ~tmp#79##0:wybe.phantom, ?tmp#80##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#80##0:wybe.phantom, ?tmp#81##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#81##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("sin(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #17 @hypot:nn:nn
    foreign c llvm.sin.f64(30.0:wybe.float, ?tmp#9##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#88##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#9##0:wybe.float, ~tmp#88##0:wybe.phantom, ?tmp#89##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#89##0:wybe.phantom, ?tmp#90##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#90##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("cos(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #21 @hypot:nn:nn
    foreign c llvm.cos.f64(30.0:wybe.float, ?tmp#11##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#97##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#11##0:wybe.float, ~tmp#97##0:wybe.phantom, ?tmp#98##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#98##0:wybe.phantom, ?tmp#99##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#99##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("sin(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #25 @hypot:nn:nn
    foreign c llvm.sin.f64(0.5235987755982988:wybe.float, ?tmp#13##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#110##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#13##0:wybe.float, ~tmp#110##0:wybe.phantom, ?tmp#111##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#111##0:wybe.phantom, ?tmp#112##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#112##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("cos(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #32 @hypot:nn:nn
    foreign c llvm.cos.f64(0.5235987755982988:wybe.float, ?tmp#18##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#123##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#18##0:wybe.float, ~tmp#123##0:wybe.phantom, ?tmp#124##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#124##0:wybe.phantom, ?tmp#125##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#125##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("ln(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #39 @hypot:nn:nn
    foreign c llvm.log.f64(2.7182818284590455:wybe.float, ?tmp#23##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#132##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#23##0:wybe.float, ~tmp#132##0:wybe.phantom, ?tmp#133##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#133##0:wybe.phantom, ?tmp#134##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#134##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("common log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #44 @hypot:nn:nn
    foreign c llvm.log10.f64(2.7182818284590455:wybe.float, ?tmp#26##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#141##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#26##0:wybe.float, ~tmp#141##0:wybe.phantom, ?tmp#142##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#142##0:wybe.phantom, ?tmp#143##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#143##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("base 2 log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #49 @hypot:nn:nn
    foreign c llvm.log2.f64(2.7182818284590455:wybe.float, ?tmp#29##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#150##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#29##0:wybe.float, ~tmp#150##0:wybe.phantom, ?tmp#151##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#151##0:wybe.phantom, ?tmp#152##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#152##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("floor(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #54 @hypot:nn:nn
    foreign c llvm.floor.f64(3.141592653589793:wybe.float, ?tmp#32##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#159##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#32##0:wybe.float, ~tmp#159##0:wybe.phantom, ?tmp#160##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#160##0:wybe.phantom, ?tmp#161##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#161##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("ceil(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #59 @hypot:nn:nn
    foreign c llvm.ceil.f64(3.141592653589793:wybe.float, ?tmp#35##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#168##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(~tmp#35##0:wybe.float, ~tmp#168##0:wybe.phantom, ?tmp#169##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#169##0:wybe.phantom, ?tmp#170##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#170##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("round(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #64 @hypot:nn:nn
    foreign c llvm.round.f64(3.141592653589793:wybe.float, ?tmp#38##0:wybe.float) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#177##0:wybe.phantom) @hypot:nn:nn
    foreign c print_float(tmp#38##0:wybe.float, ~tmp#177##0:wybe.phantom, ?tmp#178##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#178##0:wybe.phantom, ?tmp#179##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#179##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn
    wybe.string.print<0>("iround(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #69 @hypot:nn:nn
    foreign llvm fptosi(~tmp#38##0:wybe.float, ?tmp#41##0:wybe.int) @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#187##0:wybe.phantom) @hypot:nn:nn
    foreign c print_int(~tmp#41##0:wybe.int, ~tmp#187##0:wybe.phantom, ?tmp#188##0:wybe.phantom) @hypot:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#188##0:wybe.phantom, ?tmp#189##0:wybe.phantom) @hypot:nn:nn
    foreign lpvm store(~%tmp#189##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @hypot:nn:nn


proc area > {inline} (1 calls)
0: hypot.area<0>
area(r##0:wybe.float, ?#result##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~r##0:wybe.float, ~r##0:wybe.float, ?tmp#2##0:wybe.float) @hypot:nn:nn
    foreign llvm fmul(3.141592653589793:wybe.float, ~tmp#2##0:wybe.float, ?#result##0:wybe.float) @hypot:nn:nn


proc hypot > {inline} (1 calls)
0: hypot.hypot<0>
hypot(s1##0:wybe.float, s2##0:wybe.float, ?#result##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~s1##0:wybe.float, ~s1##0:wybe.float, ?tmp#2##0:wybe.float) @hypot:nn:nn
    foreign llvm fmul(~s2##0:wybe.float, ~s2##0:wybe.float, ?tmp#3##0:wybe.float) @hypot:nn:nn
    foreign llvm fadd(~tmp#2##0:wybe.float, ~tmp#3##0:wybe.float, ?tmp#1##0:wybe.float) @hypot:nn:nn
    foreign c llvm.sqrt.f64(~tmp#1##0:wybe.float, ?#result##0:wybe.float) @hypot:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'hypot'

source_filename = "!ROOT!/final-dump/hypot.wybe"
target triple    ????

@"hypot#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"hypot(3,4) = \00", align 8
@"hypot#constant#1" = private unnamed_addr constant [ ?? x i8 ] c"area(5) = \00", align 8
@"hypot#constant#2" = private unnamed_addr constant [ ?? x i8 ] c"e = \00", align 8
@"hypot#constant#3" = private unnamed_addr constant [ ?? x i8 ] c" = \00", align 8
@"hypot#constant#4" = private unnamed_addr constant [ ?? x i8 ] c"sin(30) = \00", align 8
@"hypot#constant#5" = private unnamed_addr constant [ ?? x i8 ] c"cos(30) = \00", align 8
@"hypot#constant#6" = private unnamed_addr constant [ ?? x i8 ] c"sin(30 degrees) = \00", align 8
@"hypot#constant#7" = private unnamed_addr constant [ ?? x i8 ] c"cos(30 degrees) = \00", align 8
@"hypot#constant#8" = private unnamed_addr constant [ ?? x i8 ] c"ln(e) = \00", align 8
@"hypot#constant#9" = private unnamed_addr constant [ ?? x i8 ] c"common log(e) = \00", align 8
@"hypot#constant#10" = private unnamed_addr constant [ ?? x i8 ] c"base 2 log(e) = \00", align 8
@"hypot#constant#11" = private unnamed_addr constant [ ?? x i8 ] c"floor(pi) = \00", align 8
@"hypot#constant#12" = private unnamed_addr constant [ ?? x i8 ] c"ceil(pi) = \00", align 8
@"hypot#constant#13" = private unnamed_addr constant [ ?? x i8 ] c"round(pi) = \00", align 8
@"hypot#constant#14" = private unnamed_addr constant [ ?? x i8 ] c"iround(pi) = \00", align 8
@"hypot#constant#15" = private unnamed_addr constant {i64, ptr} { i64 13, ptr @"hypot#constant#0" }, align 8
@"hypot#constant#16" = private unnamed_addr constant {i64, ptr} { i64 10, ptr @"hypot#constant#1" }, align 8
@"hypot#constant#17" = private unnamed_addr constant {i64, ptr} { i64 4, ptr @"hypot#constant#2" }, align 8
@"hypot#constant#18" = private unnamed_addr constant {i64, ptr} { i64 3, ptr @"hypot#constant#3" }, align 8
@"hypot#constant#19" = private unnamed_addr constant {i64, ptr} { i64 10, ptr @"hypot#constant#4" }, align 8
@"hypot#constant#20" = private unnamed_addr constant {i64, ptr} { i64 10, ptr @"hypot#constant#5" }, align 8
@"hypot#constant#21" = private unnamed_addr constant {i64, ptr} { i64 18, ptr @"hypot#constant#6" }, align 8
@"hypot#constant#22" = private unnamed_addr constant {i64, ptr} { i64 18, ptr @"hypot#constant#7" }, align 8
@"hypot#constant#23" = private unnamed_addr constant {i64, ptr} { i64 8, ptr @"hypot#constant#8" }, align 8
@"hypot#constant#24" = private unnamed_addr constant {i64, ptr} { i64 16, ptr @"hypot#constant#9" }, align 8
@"hypot#constant#25" = private unnamed_addr constant {i64, ptr} { i64 16, ptr @"hypot#constant#10" }, align 8
@"hypot#constant#26" = private unnamed_addr constant {i64, ptr} { i64 12, ptr @"hypot#constant#11" }, align 8
@"hypot#constant#27" = private unnamed_addr constant {i64, ptr} { i64 11, ptr @"hypot#constant#12" }, align 8
@"hypot#constant#28" = private unnamed_addr constant {i64, ptr} { i64 12, ptr @"hypot#constant#13" }, align 8
@"hypot#constant#29" = private unnamed_addr constant {i64, ptr} { i64 13, ptr @"hypot#constant#14" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc double @llvm.ceil.f64(double)
declare external ccc double @llvm.cos.f64(double)
declare external ccc double @llvm.exp.f64(double)
declare external ccc double @llvm.floor.f64(double)
declare external ccc double @llvm.log.f64(double)
declare external ccc double @llvm.log10.f64(double)
declare external ccc double @llvm.log2.f64(double)
declare external ccc double @llvm.round.f64(double)
declare external ccc double @llvm.sin.f64(double)
declare external ccc double @llvm.sqrt.f64(double)
declare external ccc void @print_float(double)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"hypot.<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#15" to i64 ))
  %"tmp#1##0" = call ccc double @llvm.sqrt.f64(double 25.0)
  call ccc void @print_float(double %"tmp#1##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#16" to i64 ))
  call ccc void @print_float(double 78.53981633974483)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#17" to i64 ))
  call ccc void @print_float(double 2.7182818284590455)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#18" to i64 ))
  %"tmp#7##0" = call ccc double @llvm.exp.f64(double 1.0)
  call ccc void @print_float(double %"tmp#7##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#19" to i64 ))
  %"tmp#9##0" = call ccc double @llvm.sin.f64(double 30.0)
  call ccc void @print_float(double %"tmp#9##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#20" to i64 ))
  %"tmp#11##0" = call ccc double @llvm.cos.f64(double 30.0)
  call ccc void @print_float(double %"tmp#11##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#21" to i64 ))
  %"tmp#13##0" = call ccc double @llvm.sin.f64(double 0.5235987755982988)
  call ccc void @print_float(double %"tmp#13##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#22" to i64 ))
  %"tmp#18##0" = call ccc double @llvm.cos.f64(double 0.5235987755982988)
  call ccc void @print_float(double %"tmp#18##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#23" to i64 ))
  %"tmp#23##0" = call ccc double @llvm.log.f64(double 2.7182818284590455)
  call ccc void @print_float(double %"tmp#23##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#24" to i64 ))
  %"tmp#26##0" = call ccc double @llvm.log10.f64(double 2.7182818284590455)
  call ccc void @print_float(double %"tmp#26##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#25" to i64 ))
  %"tmp#29##0" = call ccc double @llvm.log2.f64(double 2.7182818284590455)
  call ccc void @print_float(double %"tmp#29##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#26" to i64 ))
  %"tmp#32##0" = call ccc double @llvm.floor.f64(double 3.141592653589793)
  call ccc void @print_float(double %"tmp#32##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#27" to i64 ))
  %"tmp#35##0" = call ccc double @llvm.ceil.f64(double 3.141592653589793)
  call ccc void @print_float(double %"tmp#35##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#28" to i64 ))
  %"tmp#38##0" = call ccc double @llvm.round.f64(double 3.141592653589793)
  call ccc void @print_float(double %"tmp#38##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"hypot#constant#29" to i64 ))
  %"tmp#41##0" = fptosi double %"tmp#38##0" to i64
  call ccc void @print_int(i64 %"tmp#41##0")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc double @"hypot.area<0>"(double %"r##0") {
  %"tmp#2##0" = fmul double %"r##0", %"r##0"
  %"tmp#6##0" = fmul double 3.141592653589793, %"tmp#2##0"
  ret double %"tmp#6##0"
}

define external fastcc double @"hypot.hypot<0>"(double %"s1##0", double %"s2##0") {
  %"tmp#2##0" = fmul double %"s1##0", %"s1##0"
  %"tmp#3##0" = fmul double %"s2##0", %"s2##0"
  %"tmp#1##0" = fadd double %"tmp#2##0", %"tmp#3##0"
  %"tmp#9##0" = call ccc double @llvm.sqrt.f64(double %"tmp#1##0")
  ret double %"tmp#9##0"
}
