======================================================================
AFTER EVERYTHING:
 Module hypot
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : hypot.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: hypot.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print_string<0>("hypot(3,4) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #58 @io:nn:nn
    foreign c llvm.sqrt.f64(25.0:wybe.float, ?tmp#0##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#35##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#0##0:wybe.float, ~tmp#35##0:wybe.phantom, ?tmp#36##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#36##0:wybe.phantom, ?tmp#37##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#37##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("area(5) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #59 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#42##0:wybe.phantom) @io:nn:nn
    foreign c print_float(78.53981633974483:wybe.float, ~tmp#42##0:wybe.phantom, ?tmp#43##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#43##0:wybe.phantom, ?tmp#44##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#44##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("e = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #60 @io:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#47##0:wybe.phantom) @io:nn:nn
    foreign c print_float(2.7182818284590455:wybe.float, ~tmp#47##0:wybe.phantom, ?tmp#48##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#48##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>(" = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #61 @io:nn:nn
    foreign c llvm.exp.f64(1.0:wybe.float, ?tmp#3##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#52##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#3##0:wybe.float, ~tmp#52##0:wybe.phantom, ?tmp#53##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#53##0:wybe.phantom, ?tmp#54##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#54##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("sin(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #62 @io:nn:nn
    foreign c llvm.sin.f64(30.0:wybe.float, ?tmp#4##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#58##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#4##0:wybe.float, ~tmp#58##0:wybe.phantom, ?tmp#59##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#59##0:wybe.phantom, ?tmp#60##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#60##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("cos(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #63 @io:nn:nn
    foreign c llvm.cos.f64(30.0:wybe.float, ?tmp#5##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#64##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#5##0:wybe.float, ~tmp#64##0:wybe.phantom, ?tmp#65##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#65##0:wybe.phantom, ?tmp#66##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#66##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("sin(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #64 @io:nn:nn
    foreign c llvm.sin.f64(0.5235987755982988:wybe.float, ?tmp#6##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#74##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#6##0:wybe.float, ~tmp#74##0:wybe.phantom, ?tmp#75##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#75##0:wybe.phantom, ?tmp#76##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#76##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("cos(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #65 @io:nn:nn
    foreign c llvm.cos.f64(0.5235987755982988:wybe.float, ?tmp#10##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#84##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#10##0:wybe.float, ~tmp#84##0:wybe.phantom, ?tmp#85##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#85##0:wybe.phantom, ?tmp#86##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#86##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("ln(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #66 @io:nn:nn
    foreign c llvm.log.f64(2.7182818284590455:wybe.float, ?tmp#14##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#90##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#14##0:wybe.float, ~tmp#90##0:wybe.phantom, ?tmp#91##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#91##0:wybe.phantom, ?tmp#92##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#92##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("common log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #67 @io:nn:nn
    foreign c llvm.log10.f64(2.7182818284590455:wybe.float, ?tmp#16##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#96##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#16##0:wybe.float, ~tmp#96##0:wybe.phantom, ?tmp#97##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#97##0:wybe.phantom, ?tmp#98##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#98##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("base 2 log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #68 @io:nn:nn
    foreign c llvm.log2.f64(2.7182818284590455:wybe.float, ?tmp#18##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#102##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#18##0:wybe.float, ~tmp#102##0:wybe.phantom, ?tmp#103##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#103##0:wybe.phantom, ?tmp#104##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#104##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("floor(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #69 @io:nn:nn
    foreign c llvm.floor.f64(3.141592653589793:wybe.float, ?tmp#20##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#108##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#20##0:wybe.float, ~tmp#108##0:wybe.phantom, ?tmp#109##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#109##0:wybe.phantom, ?tmp#110##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#110##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("ceil(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #70 @io:nn:nn
    foreign c llvm.ceil.f64(3.141592653589793:wybe.float, ?tmp#22##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#114##0:wybe.phantom) @io:nn:nn
    foreign c print_float(~tmp#22##0:wybe.float, ~tmp#114##0:wybe.phantom, ?tmp#115##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#115##0:wybe.phantom, ?tmp#116##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#116##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("round(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #71 @io:nn:nn
    foreign c llvm.round.f64(3.141592653589793:wybe.float, ?tmp#24##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#120##0:wybe.phantom) @io:nn:nn
    foreign c print_float(tmp#24##0:wybe.float, ~tmp#120##0:wybe.phantom, ?tmp#121##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#121##0:wybe.phantom, ?tmp#122##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#122##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("iround(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #72 @io:nn:nn
    foreign llvm fptosi(~tmp#24##0:wybe.float, ?tmp#26##0:wybe.int) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#127##0:wybe.phantom) @io:nn:nn
    foreign c print_int(~tmp#26##0:wybe.int, ~tmp#127##0:wybe.phantom, ?tmp#128##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#128##0:wybe.phantom, ?tmp#129##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#129##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


area > {inline} (1 calls)
0: hypot.area<0>
area(r##0:wybe.float, ?#result##0:wybe.float)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~r##0:wybe.float, ~r##0:wybe.float, ?tmp#2##0:wybe.float) @float:nn:nn
    foreign llvm fmul(3.141592653589793:wybe.float, ~tmp#2##0:wybe.float, ?#result##0:wybe.float) @float:nn:nn


hypot > {inline} (1 calls)
0: hypot.hypot<0>
hypot(s1##0:wybe.float, s2##0:wybe.float, ?#result##0:wybe.float)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~s1##0:wybe.float, ~s1##0:wybe.float, ?tmp#2##0:wybe.float) @float:nn:nn
    foreign llvm fmul(~s2##0:wybe.float, ~s2##0:wybe.float, ?tmp#3##0:wybe.float) @float:nn:nn
    foreign llvm fadd(~tmp#2##0:wybe.float, ~tmp#3##0:wybe.float, ?tmp#1##0:wybe.float) @float:nn:nn
    foreign c llvm.sqrt.f64(~tmp#1##0:wybe.float, ?#result##0:wybe.float) @float:nn:nn

  LLVM code       :

; ModuleID = 'hypot'


 


@hypot.8 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @hypot.7 to i64) }


@hypot.6 =    constant {i64, i64} { i64 4, i64 ptrtoint ([?? x i8]* @hypot.5 to i64) }


@hypot.18 =    constant {i64, i64} { i64 8, i64 ptrtoint ([?? x i8]* @hypot.17 to i64) }


@hypot.12 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.11 to i64) }


@hypot.4 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.3 to i64) }


@hypot.10 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.9 to i64) }


@hypot.26 =    constant {i64, i64} { i64 11, i64 ptrtoint ([?? x i8]* @hypot.25 to i64) }


@hypot.24 =    constant {i64, i64} { i64 12, i64 ptrtoint ([?? x i8]* @hypot.23 to i64) }


@hypot.28 =    constant {i64, i64} { i64 12, i64 ptrtoint ([?? x i8]* @hypot.27 to i64) }


@hypot.2 =    constant {i64, i64} { i64 13, i64 ptrtoint ([?? x i8]* @hypot.1 to i64) }


@hypot.30 =    constant {i64, i64} { i64 13, i64 ptrtoint ([?? x i8]* @hypot.29 to i64) }


@hypot.20 =    constant {i64, i64} { i64 16, i64 ptrtoint ([?? x i8]* @hypot.19 to i64) }


@hypot.22 =    constant {i64, i64} { i64 16, i64 ptrtoint ([?? x i8]* @hypot.21 to i64) }


@hypot.14 =    constant {i64, i64} { i64 18, i64 ptrtoint ([?? x i8]* @hypot.13 to i64) }


@hypot.16 =    constant {i64, i64} { i64 18, i64 ptrtoint ([?? x i8]* @hypot.15 to i64) }


@hypot.7 =    constant [?? x i8] c" = \00"


@hypot.3 =    constant [?? x i8] c"area(5) = \00"


@hypot.21 =    constant [?? x i8] c"base 2 log(e) = \00"


@hypot.25 =    constant [?? x i8] c"ceil(pi) = \00"


@hypot.19 =    constant [?? x i8] c"common log(e) = \00"


@hypot.15 =    constant [?? x i8] c"cos(30 degrees) = \00"


@hypot.11 =    constant [?? x i8] c"cos(30) = \00"


@hypot.5 =    constant [?? x i8] c"e = \00"


@hypot.23 =    constant [?? x i8] c"floor(pi) = \00"


@hypot.1 =    constant [?? x i8] c"hypot(3,4) = \00"


@hypot.29 =    constant [?? x i8] c"iround(pi) = \00"


@hypot.17 =    constant [?? x i8] c"ln(e) = \00"


@hypot.27 =    constant [?? x i8] c"round(pi) = \00"


@hypot.13 =    constant [?? x i8] c"sin(30 degrees) = \00"


@hypot.9 =    constant [?? x i8] c"sin(30) = \00"


declare external ccc  double @llvm.sqrt.f64(double)    


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


declare external ccc  void @print_float(double)    


declare external ccc  double @llvm.round.f64(double)    


declare external ccc  double @llvm.ceil.f64(double)    


declare external ccc  double @llvm.floor.f64(double)    


declare external ccc  double @llvm.log2.f64(double)    


declare external ccc  double @llvm.log10.f64(double)    


declare external ccc  double @llvm.log.f64(double)    


declare external ccc  double @llvm.cos.f64(double)    


declare external ccc  double @llvm.sin.f64(double)    


declare external ccc  double @llvm.exp.f64(double)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"hypot.<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.2, i32 0, i32 0) to i64))  
  %"1#tmp#0##0" = tail call ccc  double  @llvm.sqrt.f64(double  2.500000e1)  
  tail call ccc  void  @print_float(double  %"1#tmp#0##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.4, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_float(double  7.853982e1)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.6, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_float(double  2.718282e0)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.8, i32 0, i32 0) to i64))  
  %"1#tmp#3##0" = tail call ccc  double  @llvm.exp.f64(double  1.000000e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#3##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.10, i32 0, i32 0) to i64))  
  %"1#tmp#4##0" = tail call ccc  double  @llvm.sin.f64(double  3.000000e1)  
  tail call ccc  void  @print_float(double  %"1#tmp#4##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.12, i32 0, i32 0) to i64))  
  %"1#tmp#5##0" = tail call ccc  double  @llvm.cos.f64(double  3.000000e1)  
  tail call ccc  void  @print_float(double  %"1#tmp#5##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.14, i32 0, i32 0) to i64))  
  %"1#tmp#6##0" = tail call ccc  double  @llvm.sin.f64(double  5.235988e-1)  
  tail call ccc  void  @print_float(double  %"1#tmp#6##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.16, i32 0, i32 0) to i64))  
  %"1#tmp#10##0" = tail call ccc  double  @llvm.cos.f64(double  5.235988e-1)  
  tail call ccc  void  @print_float(double  %"1#tmp#10##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.18, i32 0, i32 0) to i64))  
  %"1#tmp#14##0" = tail call ccc  double  @llvm.log.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#14##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.20, i32 0, i32 0) to i64))  
  %"1#tmp#16##0" = tail call ccc  double  @llvm.log10.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#16##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.22, i32 0, i32 0) to i64))  
  %"1#tmp#18##0" = tail call ccc  double  @llvm.log2.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#18##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.24, i32 0, i32 0) to i64))  
  %"1#tmp#20##0" = tail call ccc  double  @llvm.floor.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#20##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.26, i32 0, i32 0) to i64))  
  %"1#tmp#22##0" = tail call ccc  double  @llvm.ceil.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#22##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.28, i32 0, i32 0) to i64))  
  %"1#tmp#24##0" = tail call ccc  double  @llvm.round.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %"1#tmp#24##0")  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.30, i32 0, i32 0) to i64))  
  %"1#tmp#26##0" = fptosi double %"1#tmp#24##0" to i64 
  tail call ccc  void  @print_int(i64  %"1#tmp#26##0")  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  double @"hypot.area<0>"(double  %"r##0")    {
entry:
  %"1#tmp#2##0" = fmul double %"r##0", %"r##0" 
  %"1##result##0" = fmul double 3.141593e0, %"1#tmp#2##0" 
  ret double %"1##result##0" 
}


define external fastcc  double @"hypot.hypot<0>"(double  %"s1##0", double  %"s2##0")    {
entry:
  %"1#tmp#2##0" = fmul double %"s1##0", %"s1##0" 
  %"1#tmp#3##0" = fmul double %"s2##0", %"s2##0" 
  %"1#tmp#1##0" = fadd double %"1#tmp#2##0", %"1#tmp#3##0" 
  %"1##result##0" = tail call ccc  double  @llvm.sqrt.f64(double  %"1#tmp#1##0")  
  ret double %"1##result##0" 
}
