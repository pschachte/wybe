======================================================================
AFTER EVERYTHING:
 Module hypot
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : hypot.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: hypot.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("hypot(3,4) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @hypot:nn:nn
    foreign c llvm.sqrt.f64(25.0:wybe.float, ?tmp#0##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#34##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#0##0:wybe.float, ~tmp#34##0:wybe.phantom, ?tmp#35##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#35##0:wybe.phantom, ?tmp#36##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#36##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("area(5) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3 @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#40##0:wybe.phantom) @float:nn:nn
    foreign c print_float(78.53981633974483:wybe.float, ~tmp#40##0:wybe.phantom, ?tmp#41##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#41##0:wybe.phantom, ?tmp#42##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#42##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("e = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #6 @hypot:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#44##0:wybe.phantom) @float:nn:nn
    foreign c print_float(2.7182818284590455:wybe.float, ~tmp#44##0:wybe.phantom, ?tmp#45##0:wybe.phantom) @float:nn:nn
    foreign lpvm store(~%tmp#45##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @float:nn:nn
    wybe.string.print<0>(" = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #9 @hypot:nn:nn
    foreign c llvm.exp.f64(1.0:wybe.float, ?tmp#3##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#48##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#3##0:wybe.float, ~tmp#48##0:wybe.phantom, ?tmp#49##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#49##0:wybe.phantom, ?tmp#50##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#50##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("sin(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #12 @hypot:nn:nn
    foreign c llvm.sin.f64(30.0:wybe.float, ?tmp#4##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#53##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#4##0:wybe.float, ~tmp#53##0:wybe.phantom, ?tmp#54##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#54##0:wybe.phantom, ?tmp#55##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#55##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("cos(30) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #15 @hypot:nn:nn
    foreign c llvm.cos.f64(30.0:wybe.float, ?tmp#5##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#58##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#5##0:wybe.float, ~tmp#58##0:wybe.phantom, ?tmp#59##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#59##0:wybe.phantom, ?tmp#60##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#60##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("sin(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #18 @hypot:nn:nn
    foreign c llvm.sin.f64(0.5235987755982988:wybe.float, ?tmp#6##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#67##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#6##0:wybe.float, ~tmp#67##0:wybe.phantom, ?tmp#68##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#68##0:wybe.phantom, ?tmp#69##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#69##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("cos(30 degrees) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #24 @hypot:nn:nn
    foreign c llvm.cos.f64(0.5235987755982988:wybe.float, ?tmp#10##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#76##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#10##0:wybe.float, ~tmp#76##0:wybe.phantom, ?tmp#77##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#77##0:wybe.phantom, ?tmp#78##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#78##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("ln(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #30 @hypot:nn:nn
    foreign c llvm.log.f64(2.7182818284590455:wybe.float, ?tmp#14##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#81##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#14##0:wybe.float, ~tmp#81##0:wybe.phantom, ?tmp#82##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#82##0:wybe.phantom, ?tmp#83##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#83##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("common log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #34 @hypot:nn:nn
    foreign c llvm.log10.f64(2.7182818284590455:wybe.float, ?tmp#16##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#86##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#16##0:wybe.float, ~tmp#86##0:wybe.phantom, ?tmp#87##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#87##0:wybe.phantom, ?tmp#88##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#88##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("base 2 log(e) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #38 @hypot:nn:nn
    foreign c llvm.log2.f64(2.7182818284590455:wybe.float, ?tmp#18##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#91##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#18##0:wybe.float, ~tmp#91##0:wybe.phantom, ?tmp#92##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#92##0:wybe.phantom, ?tmp#93##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#93##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("floor(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #42 @hypot:nn:nn
    foreign c llvm.floor.f64(3.141592653589793:wybe.float, ?tmp#20##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#96##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#20##0:wybe.float, ~tmp#96##0:wybe.phantom, ?tmp#97##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#97##0:wybe.phantom, ?tmp#98##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#98##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("ceil(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #46 @hypot:nn:nn
    foreign c llvm.ceil.f64(3.141592653589793:wybe.float, ?tmp#22##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#101##0:wybe.phantom) @float:nn:nn
    foreign c print_float(~tmp#22##0:wybe.float, ~tmp#101##0:wybe.phantom, ?tmp#102##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#102##0:wybe.phantom, ?tmp#103##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#103##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("round(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #50 @hypot:nn:nn
    foreign c llvm.round.f64(3.141592653589793:wybe.float, ?tmp#24##0:wybe.float) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#106##0:wybe.phantom) @float:nn:nn
    foreign c print_float(tmp#24##0:wybe.float, ~tmp#106##0:wybe.phantom, ?tmp#107##0:wybe.phantom) @float:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#107##0:wybe.phantom, ?tmp#108##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#108##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    wybe.string.print<0>("iround(pi) = ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #54 @hypot:nn:nn
    foreign llvm fptosi(~tmp#24##0:wybe.float, ?tmp#26##0:wybe.int) @float:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#112##0:wybe.phantom) @int:nn:nn
    foreign c print_int(~tmp#26##0:wybe.int, ~tmp#112##0:wybe.phantom, ?tmp#113##0:wybe.phantom) @int:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#113##0:wybe.phantom, ?tmp#114##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#114##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


proc area > {inline} (1 calls)
0: hypot.area<0>
area(r##0:wybe.float, ?#result##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~r##0:wybe.float, ~r##0:wybe.float, ?tmp#2##0:wybe.float) @float:nn:nn
    foreign llvm fmul(3.141592653589793:wybe.float, ~tmp#2##0:wybe.float, ?#result##0:wybe.float) @float:nn:nn


proc hypot > {inline} (1 calls)
0: hypot.hypot<0>
hypot(s1##0:wybe.float, s2##0:wybe.float, ?#result##0:wybe.float)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm fmul(~s1##0:wybe.float, ~s1##0:wybe.float, ?tmp#2##0:wybe.float) @float:nn:nn
    foreign llvm fmul(~s2##0:wybe.float, ~s2##0:wybe.float, ?tmp#3##0:wybe.float) @float:nn:nn
    foreign llvm fadd(~tmp#2##0:wybe.float, ~tmp#3##0:wybe.float, ?tmp#1##0:wybe.float) @float:nn:nn
    foreign c llvm.sqrt.f64(~tmp#1##0:wybe.float, ?#result##0:wybe.float) @float:nn:nn

  LLVM code       :

; ModuleID = 'hypot'


 


@hypot.7 =    constant {i64, i64} { i64 3, i64 ptrtoint ([?? x i8]* @hypot.6 to i64) }


@hypot.5 =    constant {i64, i64} { i64 4, i64 ptrtoint ([?? x i8]* @hypot.4 to i64) }


@hypot.17 =    constant {i64, i64} { i64 8, i64 ptrtoint ([?? x i8]* @hypot.16 to i64) }


@hypot.11 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.10 to i64) }


@hypot.3 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.2 to i64) }


@hypot.9 =    constant {i64, i64} { i64 10, i64 ptrtoint ([?? x i8]* @hypot.8 to i64) }


@hypot.25 =    constant {i64, i64} { i64 11, i64 ptrtoint ([?? x i8]* @hypot.24 to i64) }


@hypot.23 =    constant {i64, i64} { i64 12, i64 ptrtoint ([?? x i8]* @hypot.22 to i64) }


@hypot.27 =    constant {i64, i64} { i64 12, i64 ptrtoint ([?? x i8]* @hypot.26 to i64) }


@hypot.1 =    constant {i64, i64} { i64 13, i64 ptrtoint ([?? x i8]* @hypot.0 to i64) }


@hypot.29 =    constant {i64, i64} { i64 13, i64 ptrtoint ([?? x i8]* @hypot.28 to i64) }


@hypot.19 =    constant {i64, i64} { i64 16, i64 ptrtoint ([?? x i8]* @hypot.18 to i64) }


@hypot.21 =    constant {i64, i64} { i64 16, i64 ptrtoint ([?? x i8]* @hypot.20 to i64) }


@hypot.13 =    constant {i64, i64} { i64 18, i64 ptrtoint ([?? x i8]* @hypot.12 to i64) }


@hypot.15 =    constant {i64, i64} { i64 18, i64 ptrtoint ([?? x i8]* @hypot.14 to i64) }


@hypot.6 =    constant [?? x i8] c" = \00"


@hypot.2 =    constant [?? x i8] c"area(5) = \00"


@hypot.20 =    constant [?? x i8] c"base 2 log(e) = \00"


@hypot.24 =    constant [?? x i8] c"ceil(pi) = \00"


@hypot.18 =    constant [?? x i8] c"common log(e) = \00"


@hypot.14 =    constant [?? x i8] c"cos(30 degrees) = \00"


@hypot.10 =    constant [?? x i8] c"cos(30) = \00"


@hypot.4 =    constant [?? x i8] c"e = \00"


@hypot.22 =    constant [?? x i8] c"floor(pi) = \00"


@hypot.0 =    constant [?? x i8] c"hypot(3,4) = \00"


@hypot.28 =    constant [?? x i8] c"iround(pi) = \00"


@hypot.16 =    constant [?? x i8] c"ln(e) = \00"


@hypot.26 =    constant [?? x i8] c"round(pi) = \00"


@hypot.12 =    constant [?? x i8] c"sin(30 degrees) = \00"


@hypot.8 =    constant [?? x i8] c"sin(30) = \00"


declare external ccc  double @llvm.sqrt.f64(double)    


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  void @print_float(double)    


declare external ccc  double @llvm.round.f64(double)    


declare external ccc  double @llvm.ceil.f64(double)    


declare external ccc  double @llvm.floor.f64(double)    


declare external ccc  double @llvm.log2.f64(double)    


declare external ccc  double @llvm.log10.f64(double)    


declare external ccc  double @llvm.log.f64(double)    


declare external ccc  double @llvm.cos.f64(double)    


declare external ccc  double @llvm.sin.f64(double)    


declare external ccc  double @llvm.exp.f64(double)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"hypot.<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.1, i32 0, i32 0) to i64))  
  %0 = tail call ccc  double  @llvm.sqrt.f64(double  2.500000e1)  
  tail call ccc  void  @print_float(double  %0)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.3, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_float(double  7.853982e1)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.5, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_float(double  2.718282e0)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.7, i32 0, i32 0) to i64))  
  %1 = tail call ccc  double  @llvm.exp.f64(double  1.000000e0)  
  tail call ccc  void  @print_float(double  %1)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.9, i32 0, i32 0) to i64))  
  %2 = tail call ccc  double  @llvm.sin.f64(double  3.000000e1)  
  tail call ccc  void  @print_float(double  %2)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.11, i32 0, i32 0) to i64))  
  %3 = tail call ccc  double  @llvm.cos.f64(double  3.000000e1)  
  tail call ccc  void  @print_float(double  %3)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.13, i32 0, i32 0) to i64))  
  %4 = tail call ccc  double  @llvm.sin.f64(double  5.235988e-1)  
  tail call ccc  void  @print_float(double  %4)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.15, i32 0, i32 0) to i64))  
  %5 = tail call ccc  double  @llvm.cos.f64(double  5.235988e-1)  
  tail call ccc  void  @print_float(double  %5)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.17, i32 0, i32 0) to i64))  
  %6 = tail call ccc  double  @llvm.log.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %6)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.19, i32 0, i32 0) to i64))  
  %7 = tail call ccc  double  @llvm.log10.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %7)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.21, i32 0, i32 0) to i64))  
  %8 = tail call ccc  double  @llvm.log2.f64(double  2.718282e0)  
  tail call ccc  void  @print_float(double  %8)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.23, i32 0, i32 0) to i64))  
  %9 = tail call ccc  double  @llvm.floor.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %9)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.25, i32 0, i32 0) to i64))  
  %10 = tail call ccc  double  @llvm.ceil.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %10)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.27, i32 0, i32 0) to i64))  
  %11 = tail call ccc  double  @llvm.round.f64(double  3.141593e0)  
  tail call ccc  void  @print_float(double  %11)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @hypot.29, i32 0, i32 0) to i64))  
  %12 = fptosi double %11 to i64 
  tail call ccc  void  @print_int(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  double @"hypot.area<0>"(double  %"r##0") alwaysinline   {
entry:
  %0 = fmul double %"r##0", %"r##0" 
  %1 = fmul double 3.141593e0, %0 
  ret double %1 
}


define external fastcc  double @"hypot.hypot<0>"(double  %"s1##0", double  %"s2##0") alwaysinline   {
entry:
  %0 = fmul double %"s1##0", %"s1##0" 
  %1 = fmul double %"s2##0", %"s2##0" 
  %2 = fadd double %0, %1 
  %3 = tail call ccc  double  @llvm.sqrt.f64(double  %2)  
  ret double %3 
}
