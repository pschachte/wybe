======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module main_hello2
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : main_hello2.<0>
  constants       : 0:: CStringInfo {cstringChars = "hello, "}
                    1:: CStringInfo {cstringChars = "world!"}
                    2:: StructInfo {structSize = 16, structData = [IntStructMember 7 8,PointerStructMember c"hello, "]}
                    3:: StructInfo {structSize = 16, structData = [IntStructMember 6 8,PointerStructMember c"world!"]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: main_hello2.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("hello, ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @main_hello2:nn:nn
    wybe.string.print<0>("world!":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @main_hello2:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#11##0:wybe.phantom) @main_hello2:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#11##0:wybe.phantom, ?tmp#12##0:wybe.phantom) @main_hello2:nn:nn
    foreign lpvm store(~%tmp#12##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @main_hello2:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'main_hello2'

source_filename = "!ROOT!/final-dump/main_hello2.wybe"
target triple    ????

@"main_hello2#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"hello, \00", align 8
@"main_hello2#constant#1" = private unnamed_addr constant [ ?? x i8 ] c"world!\00", align 8
@"main_hello2#constant#2" = private unnamed_addr constant {i64, ptr} { i64 7, ptr @"main_hello2#constant#0" }, align 8
@"main_hello2#constant#3" = private unnamed_addr constant {i64, ptr} { i64 6, ptr @"main_hello2#constant#1" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"main_hello2.<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"main_hello2#constant#2" to i64 ))
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"main_hello2#constant#3" to i64 ))
  call ccc void @putchar(i8 10)
  ret void
}
