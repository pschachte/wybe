======================================================================
AFTER EVERYTHING:
 Module alias5
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : alias5.<0>
                    alias5.bar<0>
                    alias5.replicate1<0>
  imports         : use wybe
  resources       : 
  procs           : 

*main* > public {inline,impure} (0 calls) 
0: alias5.<0>
(*#globals##0:wybe.phantom, *?#globals##1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    alias5.bar<0>(~*#globals##0:wybe.phantom, ?*#globals##1:wybe.phantom) #0 @alias5:28:2


bar > public (1 calls) 
0: alias5.bar<0>
bar(*#globals##0:wybe.phantom, *?#globals##10:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("random replicate1":wybe.string, ~*#globals##0:wybe.phantom, ?*tmp#3##0:wybe.phantom) #10 @io:nn:nn
    wybe.io.println<0>(2:wybe.int, ~*tmp#3##0:wybe.phantom, ?*#globals##1:wybe.phantom) #11 @alias5:6:4
    foreign llvm sdiv(180000:wybe.int, 4:wybe.int, ?p4##0:wybe.int) @int:nn:nn
    wybe.string.print_string<0>("random replicate1":wybe.string, ~*#globals##1:wybe.phantom, ?*tmp#9##0:wybe.phantom) #12 @io:nn:nn
    wybe.io.println<0>(2:wybe.int, ~*tmp#9##0:wybe.phantom, ?*#globals##2:wybe.phantom) #13 @alias5:6:4
    wybe.string.print_string<0>("expect p1=111: ":wybe.string, ~*#globals##2:wybe.phantom, ?*#globals##3:wybe.phantom) #14 @io:nn:nn
    wybe.io.println<0>(111:wybe.int, ~*#globals##3:wybe.phantom, ?*#globals##4:wybe.phantom) #3 @alias5:19:4
    wybe.string.print_string<0>("expect p2=100: ":wybe.string, ~*#globals##4:wybe.phantom, ?*#globals##5:wybe.phantom) #15 @io:nn:nn
    wybe.io.println<0>(100:wybe.int, ~*#globals##5:wybe.phantom, ?*#globals##6:wybe.phantom) #5 @alias5:21:4
    wybe.string.print_string<0>("expect p3=100: ":wybe.string, ~*#globals##6:wybe.phantom, ?*#globals##7:wybe.phantom) #16 @io:nn:nn
    wybe.io.println<0>(100:wybe.int, ~*#globals##7:wybe.phantom, ?*#globals##8:wybe.phantom) #7 @alias5:23:4
    wybe.string.print_string<0>("expect p4=45000: ":wybe.string, ~*#globals##8:wybe.phantom, ?*#globals##9:wybe.phantom) #17 @io:nn:nn
    wybe.io.println<0>(~p4##0:wybe.int, ~*#globals##9:wybe.phantom, ?*#globals##10:wybe.phantom) #9 @alias5:25:4


replicate1 > public {inline} (2 calls) 
0: alias5.replicate1<0>
replicate1(v1##0:wybe.int, ?v2##0:wybe.int, v3##0:wybe.int, ?v4##1:wybe.int, *#globals##0:wybe.phantom, *?#globals##2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("random replicate1":wybe.string, ~*#globals##0:wybe.phantom, ?*#globals##1:wybe.phantom) #5 @io:nn:nn
    wybe.io.println<0>(2:wybe.int, ~*#globals##1:wybe.phantom, ?*#globals##2:wybe.phantom) #1 @alias5:6:4
    foreign llvm add(~v3##0:wybe.int, 100:wybe.int, ?tmp#0##0:wybe.int) @int:nn:nn
    foreign llvm mul(~tmp#0##0:wybe.int, 200:wybe.int, ?tmp#2##0:wybe.int) @int:nn:nn
    foreign llvm sdiv(~tmp#2##0:wybe.int, 4:wybe.int, ?v4##1:wybe.int) @int:nn:nn
    foreign llvm move(~v1##0:wybe.int, ?v2##0:wybe.int) @alias5:9:4

  LLVM code       :

; ModuleID = 'alias5'


 


declare external fastcc  void @"wybe.io.println<0>"(i64)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


@alias5.12 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @alias5.11 to i64) }


@alias5.11 =    constant [?? x i8] c"expect p4=45000: \00"


@alias5.10 =    constant {i64, i64} { i64 15, i64 ptrtoint ([?? x i8]* @alias5.9 to i64) }


@alias5.9 =    constant [?? x i8] c"expect p3=100: \00"


@alias5.8 =    constant {i64, i64} { i64 15, i64 ptrtoint ([?? x i8]* @alias5.7 to i64) }


@alias5.7 =    constant [?? x i8] c"expect p2=100: \00"


@alias5.6 =    constant {i64, i64} { i64 15, i64 ptrtoint ([?? x i8]* @alias5.5 to i64) }


@alias5.5 =    constant [?? x i8] c"expect p1=111: \00"


@alias5.4 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @alias5.3 to i64) }


@alias5.3 =    constant [?? x i8] c"random replicate1\00"


@alias5.2 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @alias5.1 to i64) }


@alias5.1 =    constant [?? x i8] c"random replicate1\00"


@alias5.14 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @alias5.13 to i64) }


@alias5.13 =    constant [?? x i8] c"random replicate1\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"alias5.<0>"()    {
entry:
  tail call fastcc  void  @"alias5.bar<0>"()  
  ret void 
}


define external fastcc  void @"alias5.bar<0>"()    {
entry:
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.2, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  2)  
  %"1#p4##0" = sdiv exact i64 180000, 4 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.4, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  2)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.6, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  111)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.8, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  100)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.10, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  100)  
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.12, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  %"1#p4##0")  
  ret void 
}


define external fastcc  {i64, i64} @"alias5.replicate1<0>"(i64  %"v1##0", i64  %"v3##0")    {
entry:
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @alias5.14, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"wybe.io.println<0>"(i64  2)  
  %"1#tmp#0##0" = add   i64 %"v3##0", 100 
  %"1#tmp#2##0" = mul   i64 %"1#tmp#0##0", 200 
  %"1#v4##1" = sdiv exact i64 %"1#tmp#2##0", 4 
  %15 = insertvalue {i64, i64} undef, i64 %"v1##0", 0 
  %16 = insertvalue {i64, i64} %15, i64 %"1#v4##1", 1 
  ret {i64, i64} %16 
}
