======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module alias5
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : alias5.<0>
                    alias5.bar<0>
                    alias5.replicate1<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: alias5.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    alias5.bar<0><{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @alias5:nn:nn


proc bar > public (1 calls)
0: alias5.bar<0>
bar()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    alias5.replicate1<0>(100:wybe.int, ?p2##0:wybe.int, 800:wybe.int, ?p4##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @alias5:nn:nn
    alias5.replicate1<0>(100:wybe.int, ?p3##0:wybe.int, 800:wybe.int, ?p4##1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @alias5:nn:nn
    wybe.string.print<0>("expect p1=111: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @alias5:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @alias5:nn:nn
    foreign c print_int(111:wybe.int, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @alias5:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @alias5:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alias5:nn:nn
    wybe.string.print<0>("expect p2=100: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @alias5:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#5##0:wybe.phantom) @alias5:nn:nn
    foreign c print_int(~p2##0:wybe.int, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @alias5:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @alias5:nn:nn
    foreign lpvm store(~%tmp#7##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alias5:nn:nn
    wybe.string.print<0>("expect p3=100: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #6 @alias5:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#9##0:wybe.phantom) @alias5:nn:nn
    foreign c print_int(~p3##0:wybe.int, ~tmp#9##0:wybe.phantom, ?tmp#10##0:wybe.phantom) @alias5:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#10##0:wybe.phantom, ?tmp#11##0:wybe.phantom) @alias5:nn:nn
    foreign lpvm store(~%tmp#11##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alias5:nn:nn
    wybe.string.print<0>("expect p4=45000: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #8 @alias5:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#13##0:wybe.phantom) @alias5:nn:nn
    foreign c print_int(~p4##1:wybe.int, ~tmp#13##0:wybe.phantom, ?tmp#14##0:wybe.phantom) @alias5:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#14##0:wybe.phantom, ?tmp#15##0:wybe.phantom) @alias5:nn:nn
    foreign lpvm store(~%tmp#15##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alias5:nn:nn


proc replicate1 > public (2 calls)
0: alias5.replicate1<0>
replicate1(v1##0:wybe.int, ?v2##0:wybe.int, v3##0:wybe.int, ?v4##1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("random replicate1":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @alias5:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @alias5:nn:nn
    foreign c print_int(2:wybe.int, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @alias5:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#5##0:wybe.phantom, ?tmp#6##0:wybe.phantom) @alias5:nn:nn
    foreign lpvm store(~%tmp#6##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alias5:nn:nn
    foreign llvm add(~v3##0:wybe.int, 100:wybe.int, ?tmp#0##0:wybe.int) @alias5:nn:nn
    foreign llvm mul(~tmp#0##0:wybe.int, 200:wybe.int, ?tmp#2##0:wybe.int) @alias5:nn:nn
    foreign llvm sdiv(~tmp#2##0:wybe.int, 4:wybe.int, ?v4##1:wybe.int) @alias5:nn:nn
    foreign llvm move(~v1##0:wybe.int, ?v2##0:wybe.int) @alias5:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'alias5'

source_filename = "!ROOT!/final-dump/alias5.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c"expect p1=111: \00", align 8
@"cstring#1" = private unnamed_addr constant [ ?? x i8 ] c"expect p2=100: \00", align 8
@"cstring#2" = private unnamed_addr constant [ ?? x i8 ] c"expect p3=100: \00", align 8
@"cstring#3" = private unnamed_addr constant [ ?? x i8 ] c"expect p4=45000: \00", align 8
@"cstring#4" = private unnamed_addr constant [ ?? x i8 ] c"random replicate1\00", align 8
@"string#5" = private unnamed_addr constant {i64, i64} { i64 15, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8
@"string#6" = private unnamed_addr constant {i64, i64} { i64 15, i64 ptrtoint( ptr @"cstring#1" to i64 ) }, align 8
@"string#7" = private unnamed_addr constant {i64, i64} { i64 15, i64 ptrtoint( ptr @"cstring#2" to i64 ) }, align 8
@"string#8" = private unnamed_addr constant {i64, i64} { i64 17, i64 ptrtoint( ptr @"cstring#3" to i64 ) }, align 8
@"string#9" = private unnamed_addr constant {i64, i64} { i64 17, i64 ptrtoint( ptr @"cstring#4" to i64 ) }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"alias5.<0>"() {
  tail call fastcc void @"alias5.bar<0>"()
  ret void
}

define external fastcc void @"alias5.bar<0>"() {
  %"tmp#16##0" = tail call fastcc {i64, i64} @"alias5.replicate1<0>"(i64 100, i64 800)
  %"p2##0" = extractvalue {i64, i64}%"tmp#16##0", 0
  %"p4##0" = extractvalue {i64, i64}%"tmp#16##0", 1
  %"tmp#17##0" = tail call fastcc {i64, i64} @"alias5.replicate1<0>"(i64 100, i64 800)
  %"p3##0" = extractvalue {i64, i64}%"tmp#17##0", 0
  %"p4##1" = extractvalue {i64, i64}%"tmp#17##0", 1
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  call ccc void @print_int(i64 111)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#6" to i64 ))
  call ccc void @print_int(i64 %"p2##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#7" to i64 ))
  call ccc void @print_int(i64 %"p3##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#8" to i64 ))
  call ccc void @print_int(i64 %"p4##1")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc {i64, i64} @"alias5.replicate1<0>"(i64 %"v1##0", i64 %"v3##0") {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#9" to i64 ))
  call ccc void @print_int(i64 2)
  call ccc void @putchar(i8 10)
  %"tmp#0##0" = add i64 %"v3##0", 100
  %"tmp#2##0" = mul i64 %"tmp#0##0", 200
  %"tmp#13##0" = sdiv i64 %"tmp#2##0", 4
  %"tmp#14##0" = insertvalue {i64, i64} undef, i64 %"v1##0", 0
  %"tmp#15##0" = insertvalue {i64, i64} %"tmp#14##0", i64 %"tmp#13##0", 1
  ret {i64, i64} %"tmp#15##0"
}
