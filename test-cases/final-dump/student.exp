======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module student
  representation  : (not a type)
  public submods  : course -> student.course
                    student -> student.student
  public resources: 
  public procs    : student.<0>
                    student.printStudent<0>
                    student.course.=<0>
                    student.course.code<0>
                    student.course.code<1>
                    student.course.course<0>
                    student.course.course<1>
                    student.course.name<0>
                    student.course.name<1>
                    student.course.~=<0>
                    student.student.=<0>
                    student.student.id<0>
                    student.student.id<1>
                    student.student.major<0>
                    student.student.major<1>
                    student.student.student<0>
                    student.student.student<1>
                    student.student.~=<0>
  imports         : public use student.course
                    public use student.student
                    use wybe
  resources       : 
  submodules      : student.course, student.student
  procs           : 

module top-level code > public {semipure} (0 calls)
0: student.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(2,(student.printStudent<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm alloc(16:wybe.int, ?tmp#4##0:student.course) @student:nn:nn
    foreign lpvm mutate(~tmp#4##0:student.course, ?tmp#5##0:student.course, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 90048:wybe.int) @student:nn:nn
    foreign lpvm mutate(~tmp#5##0:student.course, ?tmp#6##0:student.course, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, "Declarative Programming":wybe.string) @student:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#9##0:student.student) @student:nn:nn
    foreign lpvm mutate(~tmp#9##0:student.student, ?tmp#10##0:student.student, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 12345:wybe.int) @student:nn:nn
    foreign lpvm mutate(~tmp#10##0:student.student, ?tmp#11##0:student.student, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tmp#6##0:student.course) @student:nn:nn
    student.printStudent<0>[410bae77d3](~tmp#11##0:student.student)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @student:nn:nn


proc printStudent > public (1 calls)
0: student.printStudent<0>
printStudent(stu##0:student.student)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: [InterestingUnaliased 0]
  MultiSpeczDepInfo: [(10,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 [0]]))]
    wybe.string.print<0>("student id: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @student:nn:nn
    foreign lpvm access(stu##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.int) @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#6##0:wybe.phantom) @student:nn:nn
    foreign c print_int(~tmp#0##0:wybe.int, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#7##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#8##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn
    foreign lpvm access(~stu##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#1##0:student.course) @student:nn:nn
    wybe.string.print<0>("course code: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @student:nn:nn
    foreign lpvm access(tmp#1##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#2##0:wybe.int) @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#12##0:wybe.phantom) @student:nn:nn
    foreign c print_int(~tmp#2##0:wybe.int, ~tmp#12##0:wybe.phantom, ?tmp#13##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#13##0:wybe.phantom, ?tmp#14##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#14##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn
    wybe.string.print<0>("course name: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #7 @student:nn:nn
    foreign lpvm access(~tmp#1##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#3##0:wybe.string) @student:nn:nn
    wybe.string.print<0>(~tmp#3##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #10 @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#17##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#17##0:wybe.phantom, ?tmp#18##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#18##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn
 [410bae77d3] [NonAliasedParam 0] :
    wybe.string.print<0>("student id: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @student:nn:nn
    foreign lpvm access(stu##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.int) @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#6##0:wybe.phantom) @student:nn:nn
    foreign c print_int(~tmp#0##0:wybe.int, ~tmp#6##0:wybe.phantom, ?tmp#7##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#7##0:wybe.phantom, ?tmp#8##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#8##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn
    foreign lpvm access(~stu##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#1##0:student.course) @student:nn:nn
    wybe.string.print<0>("course code: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4 @student:nn:nn
    foreign lpvm access(tmp#1##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#2##0:wybe.int) @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#12##0:wybe.phantom) @student:nn:nn
    foreign c print_int(~tmp#2##0:wybe.int, ~tmp#12##0:wybe.phantom, ?tmp#13##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#13##0:wybe.phantom, ?tmp#14##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#14##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn
    wybe.string.print<0>("course name: ":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #7 @student:nn:nn
    foreign lpvm access(~tmp#1##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#3##0:wybe.string) @student:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#3##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #10 @student:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#17##0:wybe.phantom) @student:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#17##0:wybe.phantom, ?tmp#18##0:wybe.phantom) @student:nn:nn
    foreign lpvm store(~%tmp#18##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @student:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'student'

source_filename = "!ROOT!/final-dump/student.wybe"
target triple    ????

@"cstring#0" = private unnamed_addr constant [ ?? x i8 ] c"Declarative Programming\00", align 8
@"cstring#1" = private unnamed_addr constant [ ?? x i8 ] c"course code: \00", align 8
@"cstring#2" = private unnamed_addr constant [ ?? x i8 ] c"course name: \00", align 8
@"cstring#3" = private unnamed_addr constant [ ?? x i8 ] c"student id: \00", align 8
@"string#4" = private unnamed_addr constant {i64, i64} { i64 23, i64 ptrtoint( ptr @"cstring#0" to i64 ) }, align 8
@"string#5" = private unnamed_addr constant {i64, i64} { i64 13, i64 ptrtoint( ptr @"cstring#1" to i64 ) }, align 8
@"string#6" = private unnamed_addr constant {i64, i64} { i64 13, i64 ptrtoint( ptr @"cstring#2" to i64 ) }, align 8
@"string#7" = private unnamed_addr constant {i64, i64} { i64 12, i64 ptrtoint( ptr @"cstring#3" to i64 ) }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"student.<0>"() {
  %"tmp#12##0" = call ccc ptr @wybe_malloc(i32 16)
  %"tmp#4##0" = ptrtoint ptr %"tmp#12##0" to i64
  %"tmp#13##0" = inttoptr i64 %"tmp#4##0" to ptr
  store i64 90048, ptr %"tmp#13##0"
  %"tmp#14##0" = add i64 %"tmp#4##0", 8
  %"tmp#15##0" = inttoptr i64 %"tmp#14##0" to ptr
  store i64 ptrtoint( ptr @"string#4" to i64 ), ptr %"tmp#15##0"
  %"tmp#16##0" = call ccc ptr @wybe_malloc(i32 16)
  %"tmp#9##0" = ptrtoint ptr %"tmp#16##0" to i64
  %"tmp#17##0" = inttoptr i64 %"tmp#9##0" to ptr
  store i64 12345, ptr %"tmp#17##0"
  %"tmp#18##0" = add i64 %"tmp#9##0", 8
  %"tmp#19##0" = inttoptr i64 %"tmp#18##0" to ptr
  store i64 %"tmp#4##0", ptr %"tmp#19##0"
  tail call fastcc void @"student.printStudent<0>[410bae77d3]"(i64 %"tmp#9##0")
  ret void
}

define external fastcc void @"student.printStudent<0>"(i64 %"stu##0") {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#7" to i64 ))
  %"tmp#19##0" = inttoptr i64 %"stu##0" to ptr
  %"tmp#0##0" = load i64, ptr %"tmp#19##0"
  call ccc void @print_int(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  %"tmp#20##0" = add i64 %"stu##0", 8
  %"tmp#21##0" = inttoptr i64 %"tmp#20##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#21##0"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  %"tmp#22##0" = inttoptr i64 %"tmp#1##0" to ptr
  %"tmp#2##0" = load i64, ptr %"tmp#22##0"
  call ccc void @print_int(i64 %"tmp#2##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#6" to i64 ))
  %"tmp#23##0" = add i64 %"tmp#1##0", 8
  %"tmp#24##0" = inttoptr i64 %"tmp#23##0" to ptr
  %"tmp#3##0" = load i64, ptr %"tmp#24##0"
  tail call fastcc void @"wybe.string.print<0>"(i64 %"tmp#3##0")
  call ccc void @putchar(i8 10)
  ret void
}

define external fastcc void @"student.printStudent<0>[410bae77d3]"(i64 %"stu##0") {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#7" to i64 ))
  %"tmp#19##0" = inttoptr i64 %"stu##0" to ptr
  %"tmp#0##0" = load i64, ptr %"tmp#19##0"
  call ccc void @print_int(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  %"tmp#20##0" = add i64 %"stu##0", 8
  %"tmp#21##0" = inttoptr i64 %"tmp#20##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#21##0"
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#5" to i64 ))
  %"tmp#22##0" = inttoptr i64 %"tmp#1##0" to ptr
  %"tmp#2##0" = load i64, ptr %"tmp#22##0"
  call ccc void @print_int(i64 %"tmp#2##0")
  call ccc void @putchar(i8 10)
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"string#6" to i64 ))
  %"tmp#23##0" = add i64 %"tmp#1##0", 8
  %"tmp#24##0" = inttoptr i64 %"tmp#23##0" to ptr
  %"tmp#3##0" = load i64, ptr %"tmp#24##0"
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#3##0")
  call ccc void @putchar(i8 10)
  ret void
}

--------------------------------------------------
 Module student.course
  representation  : pointer
  public submods  : 
  public resources: 
  public procs    : student.course.=<0>
                    student.course.code<0>
                    student.course.code<1>
                    student.course.course<0>
                    student.course.course<1>
                    student.course.name<0>
                    student.course.name<1>
                    student.course.~=<0>
  imports         : use student
                    use wybe
  resources       : 
  procs           : 

proc = > public {inline} (1 calls)
0: student.course.=<0>
=(#left##0:student.course, #right##0:student.course, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#left##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#code##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#left##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#name##0:wybe.string) @student:nn:nn
    foreign lpvm access(#right##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#code##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#right##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#name##0:wybe.string) @student:nn:nn
    foreign llvm icmp_eq(~#left#code##0:wybe.int, ~#right#code##0:wybe.int, ?tmp#1##0:wybe.bool) @int:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

    1:
        wybe.string.<=>#cont#2<0>(1:wybe.comparison, ~#left#name##0:wybe.string, ~#right#name##0:wybe.string, ~#left#name##0:wybe.string, ~#right#name##0:wybe.string, ?tmp#9##0:wybe.comparison) #4 @string:nn:nn
        foreign llvm icmp_eq(~tmp#9##0:wybe.comparison, 1:wybe.comparison, ?#success##0:wybe.bool) @string:nn:nn



proc code > public {inline} (0 calls)
0: student.course.code<0>
code(#rec##0:student.course, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.int) @student:nn:nn
proc code > public {inline} (0 calls)
1: student.course.code<1>
code(#rec##0:student.course, ?#rec##1:student.course, #field##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm mutate(~#rec##0:student.course, ?#rec##1:student.course, 0:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.int) @student:nn:nn


proc course > public {inline} (0 calls)
0: student.course.course<0>
course(code##0:wybe.int, name##0:wybe.string, ?#result##0:student.course)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?#rec##0:student.course) @student:nn:nn
    foreign lpvm mutate(~#rec##0:student.course, ?#rec##1:student.course, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~code##0:wybe.int) @student:nn:nn
    foreign lpvm mutate(~#rec##1:student.course, ?#result##0:student.course, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~name##0:wybe.string) @student:nn:nn
proc course > public {inline} (6 calls)
1: student.course.course<1>
course(?code##0:wybe.int, ?name##0:wybe.string, #result##0:student.course)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#result##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?code##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#result##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?name##0:wybe.string) @student:nn:nn


proc name > public {inline} (0 calls)
0: student.course.name<0>
name(#rec##0:student.course, ?#result##0:wybe.string)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.string) @student:nn:nn
proc name > public {inline} (0 calls)
1: student.course.name<1>
name(#rec##0:student.course, ?#rec##1:student.course, #field##0:wybe.string)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~#rec##0:student.course, ?#rec##1:student.course, 8:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.string) @student:nn:nn


proc ~= > public {inline} (0 calls)
0: student.course.~=<0>
~=(#left##0:student.course, #right##0:student.course, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#left##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#3##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#left##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#4##0:wybe.string) @student:nn:nn
    foreign lpvm access(#right##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#5##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#right##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#6##0:wybe.string) @student:nn:nn
    foreign llvm icmp_eq(~tmp#3##0:wybe.int, ~tmp#5##0:wybe.int, ?tmp#7##0:wybe.bool) @int:nn:nn
    case ~tmp#7##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?tmp#0##0:wybe.bool)
        foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)

    1:
        wybe.string.<=>#cont#2<0>(1:wybe.comparison, ~tmp#4##0:wybe.string, ~tmp#6##0:wybe.string, ~tmp#4##0:wybe.string, ~tmp#6##0:wybe.string, ?tmp#8##0:wybe.comparison) #1 @string:nn:nn
        foreign llvm icmp_eq(~tmp#8##0:wybe.comparison, 1:wybe.comparison, ?tmp#0##0:wybe.bool) @string:nn:nn
        foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)


  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'student.course'

source_filename = "!ROOT!/final-dump/student.wybe"
target triple    ????


declare external fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2, i64, i64, i64, i64)
declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i1 @"student.course.=<0>"(i64 %"#left##0", i64 %"#right##0") {
  %"tmp#10##0" = inttoptr i64 %"#left##0" to ptr
  %"#left#code##0" = load i64, ptr %"tmp#10##0"
  %"tmp#11##0" = add i64 %"#left##0", 8
  %"tmp#12##0" = inttoptr i64 %"tmp#11##0" to ptr
  %"#left#name##0" = load i64, ptr %"tmp#12##0"
  %"tmp#13##0" = inttoptr i64 %"#right##0" to ptr
  %"#right#code##0" = load i64, ptr %"tmp#13##0"
  %"tmp#14##0" = add i64 %"#right##0", 8
  %"tmp#15##0" = inttoptr i64 %"tmp#14##0" to ptr
  %"#right#name##0" = load i64, ptr %"tmp#15##0"
  %"tmp#1##0" = icmp eq i64 %"#left#code##0", %"#right#code##0"
  br i1 %"tmp#1##0", label %if.then.0, label %if.else.0
if.then.0:
  %"tmp#9##0" = tail call fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2 1, i64 %"#left#name##0", i64 %"#right#name##0", i64 %"#left#name##0", i64 %"#right#name##0")
  %"tmp#16##0" = icmp eq i2 %"tmp#9##0", 1
  ret i1 %"tmp#16##0"
if.else.0:
  ret i1 0
}

define external fastcc i64 @"student.course.code<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  ret i64 %"tmp#1##0"
}

define external fastcc i64 @"student.course.code<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"#field##0", ptr %"tmp#3##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"student.course.course<0>"(i64 %"code##0", i64 %"name##0") {
  %"tmp#0##0" = call ccc ptr @wybe_malloc(i32 16)
  %"#rec##0" = ptrtoint ptr %"tmp#0##0" to i64
  %"tmp#1##0" = inttoptr i64 %"#rec##0" to ptr
  store i64 %"code##0", ptr %"tmp#1##0"
  %"tmp#2##0" = add i64 %"#rec##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"name##0", ptr %"tmp#3##0"
  ret i64 %"#rec##0"
}

define external fastcc {i64, i64} @"student.course.course<1>"(i64 %"#result##0") {
  %"tmp#0##0" = inttoptr i64 %"#result##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  %"tmp#2##0" = add i64 %"#result##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  %"tmp#4##0" = load i64, ptr %"tmp#3##0"
  %"tmp#5##0" = insertvalue {i64, i64} undef, i64 %"tmp#1##0", 0
  %"tmp#6##0" = insertvalue {i64, i64} %"tmp#5##0", i64 %"tmp#4##0", 1
  ret {i64, i64} %"tmp#6##0"
}

define external fastcc i64 @"student.course.name<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = add i64 %"#rec##0", 8
  %"tmp#1##0" = inttoptr i64 %"tmp#0##0" to ptr
  %"tmp#2##0" = load i64, ptr %"tmp#1##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"student.course.name<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = add i64 %"tmp#2##0", 8
  %"tmp#4##0" = inttoptr i64 %"tmp#3##0" to ptr
  store i64 %"#field##0", ptr %"tmp#4##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i1 @"student.course.~=<0>"(i64 %"#left##0", i64 %"#right##0") {
  %"tmp#9##0" = inttoptr i64 %"#left##0" to ptr
  %"tmp#3##0" = load i64, ptr %"tmp#9##0"
  %"tmp#10##0" = add i64 %"#left##0", 8
  %"tmp#11##0" = inttoptr i64 %"tmp#10##0" to ptr
  %"tmp#4##0" = load i64, ptr %"tmp#11##0"
  %"tmp#12##0" = inttoptr i64 %"#right##0" to ptr
  %"tmp#5##0" = load i64, ptr %"tmp#12##0"
  %"tmp#13##0" = add i64 %"#right##0", 8
  %"tmp#14##0" = inttoptr i64 %"tmp#13##0" to ptr
  %"tmp#6##0" = load i64, ptr %"tmp#14##0"
  %"tmp#7##0" = icmp eq i64 %"tmp#3##0", %"tmp#5##0"
  br i1 %"tmp#7##0", label %if.then.0, label %if.else.0
if.then.0:
  %"tmp#8##0" = tail call fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2 1, i64 %"tmp#4##0", i64 %"tmp#6##0", i64 %"tmp#4##0", i64 %"tmp#6##0")
  %"tmp#0##0" = icmp eq i2 %"tmp#8##0", 1
  %"tmp#15##0" = xor i1 %"tmp#0##0", 1
  ret i1 %"tmp#15##0"
if.else.0:
  %"tmp#16##0" = xor i1 0, 1
  ret i1 %"tmp#16##0"
}

--------------------------------------------------
 Module student.student
  representation  : pointer
  public submods  : 
  public resources: 
  public procs    : student.student.=<0>
                    student.student.id<0>
                    student.student.id<1>
                    student.student.major<0>
                    student.student.major<1>
                    student.student.student<0>
                    student.student.student<1>
                    student.student.~=<0>
  imports         : use student
                    use wybe
  resources       : 
  procs           : 

proc = > public {inline} (1 calls)
0: student.student.=<0>
=(#left##0:student.student, #right##0:student.student, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#left##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#id##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#left##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#major##0:student.course) @student:nn:nn
    foreign lpvm access(#right##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#id##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#right##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#major##0:student.course) @student:nn:nn
    foreign llvm icmp_eq(~#left#id##0:wybe.int, ~#right#id##0:wybe.int, ?tmp#1##0:wybe.bool) @int:nn:nn
    case ~tmp#1##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

    1:
        foreign lpvm access(#left#major##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#9##0:wybe.int) @student:nn:nn
        foreign lpvm access(~#left#major##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#10##0:wybe.string) @student:nn:nn
        foreign lpvm access(#right#major##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#11##0:wybe.int) @student:nn:nn
        foreign lpvm access(~#right#major##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#12##0:wybe.string) @student:nn:nn
        foreign llvm icmp_eq(~tmp#11##0:wybe.int, ~tmp#9##0:wybe.int, ?tmp#13##0:wybe.bool) @int:nn:nn
        case ~tmp#13##0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

        1:
            wybe.string.<=>#cont#2<0>(1:wybe.comparison, ~tmp#10##0:wybe.string, ~tmp#12##0:wybe.string, ~tmp#10##0:wybe.string, ~tmp#12##0:wybe.string, ?tmp#14##0:wybe.comparison) #4 @string:nn:nn
            foreign llvm icmp_eq(~tmp#14##0:wybe.comparison, 1:wybe.comparison, ?#success##0:wybe.bool) @string:nn:nn




proc id > public {inline} (0 calls)
0: student.student.id<0>
id(#rec##0:student.student, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.int) @student:nn:nn
proc id > public {inline} (0 calls)
1: student.student.id<1>
id(#rec##0:student.student, ?#rec##1:student.student, #field##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm mutate(~#rec##0:student.student, ?#rec##1:student.student, 0:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.int) @student:nn:nn


proc major > public {inline} (0 calls)
0: student.student.major<0>
major(#rec##0:student.student, ?#result##0:student.course)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(~#rec##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:student.course) @student:nn:nn
proc major > public {inline} (0 calls)
1: student.student.major<1>
major(#rec##0:student.student, ?#rec##1:student.student, #field##0:student.course)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~#rec##0:student.student, ?#rec##1:student.student, 8:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:student.course) @student:nn:nn


proc student > public {inline} (0 calls)
0: student.student.student<0>
student(id##0:wybe.int, major##0:student.course, ?#result##0:student.student)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?#rec##0:student.student) @student:nn:nn
    foreign lpvm mutate(~#rec##0:student.student, ?#rec##1:student.student, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~id##0:wybe.int) @student:nn:nn
    foreign lpvm mutate(~#rec##1:student.student, ?#result##0:student.student, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~major##0:student.course) @student:nn:nn
proc student > public {inline} (6 calls)
1: student.student.student<1>
student(?id##0:wybe.int, ?major##0:student.course, #result##0:student.student)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#result##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?id##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#result##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?major##0:student.course) @student:nn:nn


proc ~= > public {inline} (0 calls)
0: student.student.~=<0>
~=(#left##0:student.student, #right##0:student.student, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm access(#left##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#3##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#left##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#4##0:student.course) @student:nn:nn
    foreign lpvm access(#right##0:student.student, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#5##0:wybe.int) @student:nn:nn
    foreign lpvm access(~#right##0:student.student, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#6##0:student.course) @student:nn:nn
    foreign llvm icmp_eq(~tmp#3##0:wybe.int, ~tmp#5##0:wybe.int, ?tmp#7##0:wybe.bool) @int:nn:nn
    case ~tmp#7##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?tmp#0##0:wybe.bool)
        foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)

    1:
        foreign lpvm access(tmp#4##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#8##0:wybe.int) @student:nn:nn
        foreign lpvm access(~tmp#4##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#9##0:wybe.string) @student:nn:nn
        foreign lpvm access(tmp#6##0:student.course, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#10##0:wybe.int) @student:nn:nn
        foreign lpvm access(~tmp#6##0:student.course, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#11##0:wybe.string) @student:nn:nn
        foreign llvm icmp_eq(~tmp#10##0:wybe.int, ~tmp#8##0:wybe.int, ?tmp#12##0:wybe.bool) @int:nn:nn
        case ~tmp#12##0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?tmp#0##0:wybe.bool)
            foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)

        1:
            wybe.string.<=>#cont#2<0>(1:wybe.comparison, ~tmp#9##0:wybe.string, ~tmp#11##0:wybe.string, ~tmp#9##0:wybe.string, ~tmp#11##0:wybe.string, ?tmp#13##0:wybe.comparison) #1 @string:nn:nn
            foreign llvm icmp_eq(~tmp#13##0:wybe.comparison, 1:wybe.comparison, ?tmp#0##0:wybe.bool) @string:nn:nn
            foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)



  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'student.student'

source_filename = "!ROOT!/final-dump/student.wybe"
target triple    ????


declare external fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2, i64, i64, i64, i64)
declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i1 @"student.student.=<0>"(i64 %"#left##0", i64 %"#right##0") {
  %"tmp#15##0" = inttoptr i64 %"#left##0" to ptr
  %"#left#id##0" = load i64, ptr %"tmp#15##0"
  %"tmp#16##0" = add i64 %"#left##0", 8
  %"tmp#17##0" = inttoptr i64 %"tmp#16##0" to ptr
  %"#left#major##0" = load i64, ptr %"tmp#17##0"
  %"tmp#18##0" = inttoptr i64 %"#right##0" to ptr
  %"#right#id##0" = load i64, ptr %"tmp#18##0"
  %"tmp#19##0" = add i64 %"#right##0", 8
  %"tmp#20##0" = inttoptr i64 %"tmp#19##0" to ptr
  %"#right#major##0" = load i64, ptr %"tmp#20##0"
  %"tmp#1##0" = icmp eq i64 %"#left#id##0", %"#right#id##0"
  br i1 %"tmp#1##0", label %if.then.0, label %if.else.0
if.then.0:
  %"tmp#21##0" = inttoptr i64 %"#left#major##0" to ptr
  %"tmp#9##0" = load i64, ptr %"tmp#21##0"
  %"tmp#22##0" = add i64 %"#left#major##0", 8
  %"tmp#23##0" = inttoptr i64 %"tmp#22##0" to ptr
  %"tmp#10##0" = load i64, ptr %"tmp#23##0"
  %"tmp#24##0" = inttoptr i64 %"#right#major##0" to ptr
  %"tmp#11##0" = load i64, ptr %"tmp#24##0"
  %"tmp#25##0" = add i64 %"#right#major##0", 8
  %"tmp#26##0" = inttoptr i64 %"tmp#25##0" to ptr
  %"tmp#12##0" = load i64, ptr %"tmp#26##0"
  %"tmp#13##0" = icmp eq i64 %"tmp#11##0", %"tmp#9##0"
  br i1 %"tmp#13##0", label %if.then.1, label %if.else.1
if.then.1:
  %"tmp#14##0" = tail call fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2 1, i64 %"tmp#10##0", i64 %"tmp#12##0", i64 %"tmp#10##0", i64 %"tmp#12##0")
  %"tmp#27##0" = icmp eq i2 %"tmp#14##0", 1
  ret i1 %"tmp#27##0"
if.else.1:
  ret i1 0
if.else.0:
  ret i1 0
}

define external fastcc i64 @"student.student.id<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  ret i64 %"tmp#1##0"
}

define external fastcc i64 @"student.student.id<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"#field##0", ptr %"tmp#3##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"student.student.major<0>"(i64 %"#rec##0") {
  %"tmp#0##0" = add i64 %"#rec##0", 8
  %"tmp#1##0" = inttoptr i64 %"tmp#0##0" to ptr
  %"tmp#2##0" = load i64, ptr %"tmp#1##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"student.student.major<1>"(i64 %"#rec##0", i64 %"#field##0") {
  %"tmp#0##0" = inttoptr i64 %"#rec##0" to ptr
  %"tmp#1##0" = call ccc ptr @wybe_malloc(i32 16)
  call ccc void @llvm.memcpy.p0.p0.i64(ptr %"tmp#1##0", ptr %"tmp#0##0", i64 16, i1 0)
  %"tmp#2##0" = ptrtoint ptr %"tmp#1##0" to i64
  %"tmp#3##0" = add i64 %"tmp#2##0", 8
  %"tmp#4##0" = inttoptr i64 %"tmp#3##0" to ptr
  store i64 %"#field##0", ptr %"tmp#4##0"
  ret i64 %"tmp#2##0"
}

define external fastcc i64 @"student.student.student<0>"(i64 %"id##0", i64 %"major##0") {
  %"tmp#0##0" = call ccc ptr @wybe_malloc(i32 16)
  %"#rec##0" = ptrtoint ptr %"tmp#0##0" to i64
  %"tmp#1##0" = inttoptr i64 %"#rec##0" to ptr
  store i64 %"id##0", ptr %"tmp#1##0"
  %"tmp#2##0" = add i64 %"#rec##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  store i64 %"major##0", ptr %"tmp#3##0"
  ret i64 %"#rec##0"
}

define external fastcc {i64, i64} @"student.student.student<1>"(i64 %"#result##0") {
  %"tmp#0##0" = inttoptr i64 %"#result##0" to ptr
  %"tmp#1##0" = load i64, ptr %"tmp#0##0"
  %"tmp#2##0" = add i64 %"#result##0", 8
  %"tmp#3##0" = inttoptr i64 %"tmp#2##0" to ptr
  %"tmp#4##0" = load i64, ptr %"tmp#3##0"
  %"tmp#5##0" = insertvalue {i64, i64} undef, i64 %"tmp#1##0", 0
  %"tmp#6##0" = insertvalue {i64, i64} %"tmp#5##0", i64 %"tmp#4##0", 1
  ret {i64, i64} %"tmp#6##0"
}

define external fastcc i1 @"student.student.~=<0>"(i64 %"#left##0", i64 %"#right##0") {
  %"tmp#14##0" = inttoptr i64 %"#left##0" to ptr
  %"tmp#3##0" = load i64, ptr %"tmp#14##0"
  %"tmp#15##0" = add i64 %"#left##0", 8
  %"tmp#16##0" = inttoptr i64 %"tmp#15##0" to ptr
  %"tmp#4##0" = load i64, ptr %"tmp#16##0"
  %"tmp#17##0" = inttoptr i64 %"#right##0" to ptr
  %"tmp#5##0" = load i64, ptr %"tmp#17##0"
  %"tmp#18##0" = add i64 %"#right##0", 8
  %"tmp#19##0" = inttoptr i64 %"tmp#18##0" to ptr
  %"tmp#6##0" = load i64, ptr %"tmp#19##0"
  %"tmp#7##0" = icmp eq i64 %"tmp#3##0", %"tmp#5##0"
  br i1 %"tmp#7##0", label %if.then.0, label %if.else.0
if.then.0:
  %"tmp#20##0" = inttoptr i64 %"tmp#4##0" to ptr
  %"tmp#8##0" = load i64, ptr %"tmp#20##0"
  %"tmp#21##0" = add i64 %"tmp#4##0", 8
  %"tmp#22##0" = inttoptr i64 %"tmp#21##0" to ptr
  %"tmp#9##0" = load i64, ptr %"tmp#22##0"
  %"tmp#23##0" = inttoptr i64 %"tmp#6##0" to ptr
  %"tmp#10##0" = load i64, ptr %"tmp#23##0"
  %"tmp#24##0" = add i64 %"tmp#6##0", 8
  %"tmp#25##0" = inttoptr i64 %"tmp#24##0" to ptr
  %"tmp#11##0" = load i64, ptr %"tmp#25##0"
  %"tmp#12##0" = icmp eq i64 %"tmp#10##0", %"tmp#8##0"
  br i1 %"tmp#12##0", label %if.then.1, label %if.else.1
if.then.1:
  %"tmp#13##0" = tail call fastcc i2 @"wybe.string.<=>#cont#2<0>"(i2 1, i64 %"tmp#9##0", i64 %"tmp#11##0", i64 %"tmp#9##0", i64 %"tmp#11##0")
  %"tmp#0##0" = icmp eq i2 %"tmp#13##0", 1
  %"tmp#26##0" = xor i1 %"tmp#0##0", 1
  ret i1 %"tmp#26##0"
if.else.1:
  %"tmp#27##0" = xor i1 0, 1
  ret i1 %"tmp#27##0"
if.else.0:
  %"tmp#28##0" = xor i1 0, 1
  ret i1 %"tmp#28##0"
}
