======================================================================
AFTER EVERYTHING:
 Module nested_loop
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : nested_loop.<0>
  imports         : use wybe
  resources       : 
  procs           : 

*main* > public {impure} (0 calls)
0: nested_loop.<0>
(io##0:wybe.phantom, ?io##1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("Outer":wybe.string, ~io##0:wybe.phantom, ?tmp#1##0:wybe.phantom) #1 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("Inner":wybe.string, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) #2 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
    nested_loop.gen#2<0>(~tmp#4##0:wybe.phantom, ?io##1:wybe.phantom) #3 @nested_loop:nn:nn


gen#1 > {inline} (1 calls)
0: nested_loop.gen#1<0>
gen#1(io##0:wybe.phantom, ?io##2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("Outer":wybe.string, ~#io##0:wybe.phantom, ?tmp#2##0:wybe.phantom) #2 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?#io##1:wybe.phantom) @io:nn:nn
    wybe.string.print_string<0>("Inner":wybe.string, ~io##1:wybe.phantom, ?tmp#4##0:wybe.phantom) #3 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    nested_loop.gen#2<0>(~tmp#5##0:wybe.phantom, ?io##2:wybe.phantom) #4 @nested_loop:nn:nn


gen#2 > {inline} (2 calls)
0: nested_loop.gen#2<0>
gen#2(io##0:wybe.phantom, ?io##2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("Inner":wybe.string, ~#io##0:wybe.phantom, ?tmp#2##0:wybe.phantom) #2 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?#io##1:wybe.phantom) @io:nn:nn
    nested_loop.gen#2<0>(~io##1:wybe.phantom, ?io##2:wybe.phantom) #1 @nested_loop:nn:nn

  LLVM code       :

; ModuleID = 'nested_loop'


 


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


@nested_loop.5 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @nested_loop.4 to i64) }


@nested_loop.4 =    constant [?? x i8] c"Inner\00"


@nested_loop.2 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @nested_loop.1 to i64) }


@nested_loop.1 =    constant [?? x i8] c"Outer\00"


@nested_loop.11 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @nested_loop.10 to i64) }


@nested_loop.10 =    constant [?? x i8] c"Inner\00"


@nested_loop.8 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @nested_loop.7 to i64) }


@nested_loop.7 =    constant [?? x i8] c"Outer\00"


@nested_loop.14 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @nested_loop.13 to i64) }


@nested_loop.13 =    constant [?? x i8] c"Inner\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"nested_loop.<0>"()    {
entry:
  %3 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @nested_loop.2, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %3)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @nested_loop.5, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %6)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"nested_loop.gen#2<0>"()  
  ret void 
}


define external fastcc  void @"nested_loop.gen#1<0>"()    {
entry:
  %9 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @nested_loop.8, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %9)  
  tail call ccc  void  @putchar(i8  10)  
  %12 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @nested_loop.11, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %12)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"nested_loop.gen#2<0>"()  
  ret void 
}


define external fastcc  void @"nested_loop.gen#2<0>"()    {
entry:
  %15 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @nested_loop.14, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %15)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"nested_loop.gen#2<0>"()  
  ret void 
}
