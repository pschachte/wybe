======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module top_level_use
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : top_level_use.<0>
  imports         : use wybe
  resources       : res: fromList [(top_level_use.res,wybe.int = 0 @top_level_use:nn:nn @top_level_use:nn:nn)]
  procs           : 

module top-level code > public {semipure} (0 calls)
0: top_level_use.<0>
()<{<<top_level_use.res>>, <<wybe.io.io>>}; {<<top_level_use.res>>, <<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @top_level_use:nn:nn
    foreign c print_int(0:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @top_level_use:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @top_level_use:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @top_level_use:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'top_level_use'

source_filename = "!ROOT!/final-dump/top_level_use.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)
@"resource#top_level_use.res" = global i64 undef

define external fastcc void @"top_level_use.<0>"() {
  call ccc void @print_int(i64 0)
  call ccc void @putchar(i8 10)
  ret void
}
