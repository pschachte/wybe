======================================================================
AFTER EVERYTHING:
 Module top_level_use
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : top_level_use.<0>
  imports         : use wybe
  resources       : res: fromList [(top_level_use.res,wybe.int = 0 @top_level_use:nn:nn @top_level_use:nn:nn)]
  procs           : 

module top-level code > public {inline,impure} (0 calls)
0: top_level_use.<0>
(?res##2:wybe.int, io##0:wybe.phantom, ?io##1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_int(0:wybe.int, ~#io##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#3##0:wybe.phantom, ?#io##1:wybe.phantom) @io:nn:nn
    foreign llvm move(0:wybe.int, ?res##2:wybe.int) @top_level_use:nn:nn

  LLVM code       :

; ModuleID = 'top_level_use'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  i64 @"top_level_use.<0>"()    {
entry:
  tail call ccc  void  @print_int(i64  0)  
  tail call ccc  void  @putchar(i8  10)  
  ret i64 0 
}
