======================================================================
AFTER EVERYTHING:
 Module top_level_use
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : top_level_use.<0>
  imports         : use wybe
  resources       : res: fromList [(top_level_use.res,wybe.int = 0 @top_level_use:nn:nn @top_level_use:nn:nn)]
  procs           : 

module top-level code > public {impure} (0 calls)
0: top_level_use.<0>
()<{<<wybe.io.io>>}; {<<top_level_use.res>>, <<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm store(0:wybe.int, <<top_level_use.res>>:wybe.int) @top_level_use:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @io:nn:nn
    foreign c print_int(0:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn

  LLVM code       :

; ModuleID = 'top_level_use'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


@"resource#top_level_use.res" =    global i64 undef


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"top_level_use.<0>"()    {
entry:
  store  i64 0, i64* @"resource#top_level_use.res" 
  tail call ccc  void  @print_int(i64  0)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}
