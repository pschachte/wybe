======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module uneeded_closure_args
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : uneeded_closure_args.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: uneeded_closure_args.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    uneeded_closure_args.call<0>(uneeded_closure_args.#closure#1<0><_:A>:(wybe.int, ?wybe.int), 2:wybe.int, ?tmp#0##0:wybe.int) #0 @uneeded_closure_args:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#3##0:wybe.phantom) @uneeded_closure_args:nn:nn
    foreign c print_int(~tmp#0##0:wybe.int, ~tmp#3##0:wybe.phantom, ?tmp#4##0:wybe.phantom) @uneeded_closure_args:nn:nn
    foreign lpvm store(~%tmp#4##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @uneeded_closure_args:nn:nn


proc #closure#1 > {inline} (1 calls)
0: uneeded_closure_args.#closure#1<0>
#closure#1([^a##0:A <{}; {}; {0}>], b##0:B <{}; {}; {1}>, ?#result##0:B <{}; {}; {1}>)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~b##0:B, ?#result##0:B) @uneeded_closure_args:nn:nn


proc call > {noinline} (1 calls)
0: uneeded_closure_args.call<0>
call(f##0:(A, ?A) <{}; {}; {0}>, a##0:A <{}; {}; {1}>, ?#result##0:A <{}; {}; {0, 1}>)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    ~f##0:(A, ?A)(~a##0:A, ?#result##0:A) #0 @uneeded_closure_args:nn:nn


proc second > {inline} (1 calls)
0: uneeded_closure_args.second<0>
second([a##0:A <{}; {}; {0}>], b##0:B <{}; {}; {1}>, ?#result##0:B <{}; {}; {1}>)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(~b##0:B, ?#result##0:B) @uneeded_closure_args:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'uneeded_closure_args'

source_filename = "!ROOT!/final-dump/uneeded_closure_args.wybe"
target triple    ????

@"closure#0" = private unnamed_addr constant {ptr, i64} { ptr @"uneeded_closure_args.#closure#1<0>", i64 undef }, align 8

declare external ccc void @print_int(i64)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"uneeded_closure_args.<0>"() {
  %"tmp#0##0" = tail call fastcc i64 @"uneeded_closure_args.call<0>"(i64 ptrtoint( ptr @"closure#0" to i64 ), i64 2)
  call ccc void @print_int(i64 %"tmp#0##0")
  ret void
}

define external fastcc i64 @"uneeded_closure_args.#closure#1<0>"(i64 %"#env##0", i64 %"generic#b##0") {
  ret i64 %"generic#b##0"
}

define external fastcc i64 @"uneeded_closure_args.call<0>"(i64 %"f##0", i64 %"a##0") {
  %"tmp#2##0" = inttoptr i64 %"f##0" to ptr
  %"tmp#1##0" = load ptr, ptr %"tmp#2##0"
  %"tmp#3##0" = tail call fastcc i64 %"tmp#1##0"(i64 %"f##0", i64 %"a##0")
  ret i64 %"tmp#3##0"
}

define external fastcc i64 @"uneeded_closure_args.second<0>"(i64 %"b##0") {
  ret i64 %"b##0"
}
