======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module higher_order_tests
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : higher_order_tests.<0>
  constants       : 0:: CStringInfo {cstringChars = "*1"}
                    1:: CStringInfo {cstringChars = "*2"}
                    2:: CStringInfo {cstringChars = "------"}
                    3:: StructInfo {structSize = 16, structData = [IntStructMember 2 8,PointerStructMember c"*2"]}
                    4:: StructInfo {structSize = 16, structData = [IntStructMember 6 8,PointerStructMember c"------"]}
                    5:: StructInfo {structSize = 8, structData = [FnPointerStructMember higher_order_tests.#anon#2<1>]}
                    6:: StructInfo {structSize = 16, structData = [IntStructMember 2 8,PointerStructMember c"*1"]}
                    7:: StructInfo {structSize = 8, structData = [FnPointerStructMember higher_order_tests.#anon#1<1>]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: higher_order_tests.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    higher_order_tests.#anon#1<1><>:(I, ?wybe.bool)(1:I, ?tmp#17##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#17##0:wybe.bool of
    0:
        higher_order_tests.#cont#1<0>(higher_order_tests.#anon#1<1><>:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>("*1":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#25##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#25##0:wybe.phantom, ?tmp#26##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#26##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#1<0>(higher_order_tests.#anon#1<1><>:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #anon#1 > {inline} (1 calls)
0: higher_order_tests.#anon#1<0>
#anon#1([anon#1#1##0:wybe.int], ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)
proc #anon#1 > {inline} (3 calls)
1: higher_order_tests.#anon#1<1>
#anon#1(anon#1#1##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)


proc #anon#2 > {inline} (1 calls)
0: higher_order_tests.#anon#2<0>
#anon#2(anon#2#1##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_eq(~anon#2#1##0:wybe.int, 1:wybe.int, ?#success##0:wybe.bool) @higher_order_tests:nn:nn
proc #anon#2 > {inline} (3 calls)
1: higher_order_tests.#anon#2<1>
#anon#2(anon#2#1##0:wybe.int, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_eq(~anon#2#1##0:wybe.int, 1:wybe.int, ?#success##0:wybe.bool) @higher_order_tests:nn:nn


proc #cont#1 > {semipure} (2 calls)
0: higher_order_tests.#cont#1<0>
#cont#1(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(5,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    t##0:(I, ?wybe.bool)(1:I, ?tmp#16##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#16##0:wybe.bool of
    0:
        higher_order_tests.#cont#2<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>[410bae77d3](1223:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#24##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#24##0:wybe.phantom, ?tmp#25##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#25##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#2<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #cont#2 > {semipure} (2 calls)
0: higher_order_tests.#cont#2<0>
#cont#2(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    t##0:(I, ?wybe.bool)(2:I, ?tmp#15##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#15##0:wybe.bool of
    0:
        higher_order_tests.#cont#3<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>("*2":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#23##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#23##0:wybe.phantom, ?tmp#24##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#24##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#3<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #cont#3 > {semipure} (2 calls)
0: higher_order_tests.#cont#3<0>
#cont#3(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(5,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    ~t##0:(I, ?wybe.bool)(2:I, ?tmp#14##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#14##0:wybe.bool of
    0:
        higher_order_tests.#cont#4<0>(_:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>[410bae77d3](1227:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#22##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#22##0:wybe.phantom, ?tmp#23##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#23##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#4<0>(_:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #cont#4 > {semipure} (2 calls)
0: higher_order_tests.#cont#4<0>
#cont#4([t##0:(wybe.int, ?wybe.bool)])<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("------":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #7 @higher_order_tests:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#19##0:wybe.phantom) @higher_order_tests:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#19##0:wybe.phantom, ?tmp#20##0:wybe.phantom) @higher_order_tests:nn:nn
    foreign lpvm store(~%tmp#20##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
    higher_order_tests.#anon#2<1><>:(I, ?wybe.bool)(1:I, ?tmp#13##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#13##0:wybe.bool of
    0:
        higher_order_tests.#cont#5<0>(higher_order_tests.#anon#2<1><>:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #6

    1:
        wybe.string.print<0>("*1":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #8 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#28##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#28##0:wybe.phantom, ?tmp#29##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#29##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#5<0>(higher_order_tests.#anon#2<1><>:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5



proc #cont#5 > {semipure} (2 calls)
0: higher_order_tests.#cont#5<0>
#cont#5(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(5,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    t##0:(I, ?wybe.bool)(1:I, ?tmp#12##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#12##0:wybe.bool of
    0:
        higher_order_tests.#cont#6<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>[410bae77d3](1223:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#20##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#20##0:wybe.phantom, ?tmp#21##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#21##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#6<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #cont#6 > {semipure} (2 calls)
0: higher_order_tests.#cont#6<0>
#cont#6(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    t##0:(I, ?wybe.bool)(2:I, ?tmp#11##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#11##0:wybe.bool of
    0:
        higher_order_tests.#cont#7<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #4

    1:
        wybe.string.print<0>("*2":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #5 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#19##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#19##0:wybe.phantom, ?tmp#20##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#20##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn
        higher_order_tests.#cont#7<0>(~t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3



proc #cont#7 > {semipure} (2 calls)
0: higher_order_tests.#cont#7<0>
#cont#7(t##0:(wybe.int, ?wybe.bool))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(3,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    ~t##0:(I, ?wybe.bool)(2:I, ?tmp#10##0:wybe.bool) #0 @higher_order_tests:nn:nn
    case ~tmp#10##0:wybe.bool of
    0:

    1:
        wybe.string.print<0>[410bae77d3](1227:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #3 @higher_order_tests:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#18##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign c putchar(10:wybe.char, ~tmp#18##0:wybe.phantom, ?tmp#19##0:wybe.phantom) @higher_order_tests:nn:nn
        foreign lpvm store(~%tmp#19##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @higher_order_tests:nn:nn



proc do_test > {inline} (12 calls)
0: higher_order_tests.do_test<0>
do_test(f##0:(I, ?wybe.bool) <{}; {}; {0}>, i##0:I <{}; {}; {1}>, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    ~f##0:(I, ?wybe.bool)(~i##0:I, ?#success##0:wybe.bool) #0 @higher_order_tests:nn:nn


proc do_test2 > {inline} (12 calls)
0: higher_order_tests.do_test2<0>
do_test2(f##0:(I, ?wybe.bool) <{}; {}; {0}>, i##0:I <{}; {}; {1}>, ?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    ~f##0:(I, ?wybe.bool)(~i##0:I, ?#success##0:wybe.bool) #0 @higher_order_tests:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'higher_order_tests'

source_filename = "!ROOT!/final-dump/higher_order_tests.wybe"
target triple    ????

@"higher_order_tests#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"*1\00", align 8
@"higher_order_tests#constant#1" = private unnamed_addr constant [ ?? x i8 ] c"*2\00", align 8
@"higher_order_tests#constant#2" = private unnamed_addr constant [ ?? x i8 ] c"------\00", align 8
@"higher_order_tests#constant#3" = private unnamed_addr constant {i64, ptr} { i64 2, ptr @"higher_order_tests#constant#1" }, align 8
@"higher_order_tests#constant#4" = private unnamed_addr constant {i64, ptr} { i64 6, ptr @"higher_order_tests#constant#2" }, align 8
@"higher_order_tests#constant#5" = private unnamed_addr constant {ptr} { ptr @"higher_order_tests.#anon#2<1>" }, align 8
@"higher_order_tests#constant#6" = private unnamed_addr constant {i64, ptr} { i64 2, ptr @"higher_order_tests#constant#0" }, align 8
@"higher_order_tests#constant#7" = private unnamed_addr constant {ptr} { ptr @"higher_order_tests.#anon#1<1>" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"higher_order_tests.<0>"() {
  %"tmp#27##0" = load ptr, ptr @"higher_order_tests#constant#7"
  %"tmp#17##0" = tail call fastcc i1 %"tmp#27##0"(ptr @"higher_order_tests#constant#7", i64 1)
  br i1 %"tmp#17##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#6" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#1<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#7" to i64 ))
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#1<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#7" to i64 ))
  ret void
}

define external fastcc i1 @"higher_order_tests.#anon#1<0>"() {
  ret i1 1
}

define external fastcc i64 @"higher_order_tests.#anon#1<1>"(i64 %"#env##0", i64 %"generic#anon#1#1##0") {
  %"tmp#1##0" = zext i1 1 to i64
  ret i64 %"tmp#1##0"
}

define external fastcc i1 @"higher_order_tests.#anon#2<0>"(i64 %"anon#2#1##0") {
  %"tmp#13##0" = icmp eq i64 %"anon#2#1##0", 1
  ret i1 %"tmp#13##0"
}

define external fastcc i64 @"higher_order_tests.#anon#2<1>"(i64 %"#env##0", i64 %"generic#anon#2#1##0") {
  %"#success##0" = icmp eq i64 %"generic#anon#2#1##0", 1
  %"tmp#1##0" = zext i1 %"#success##0" to i64
  ret i64 %"tmp#1##0"
}

define external fastcc void @"higher_order_tests.#cont#1<0>"(i64 %"t##0") {
  %"tmp#27##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#26##0" = load ptr, ptr %"tmp#27##0"
  %"tmp#16##0" = tail call fastcc i1 %"tmp#26##0"(i64 %"t##0", i64 1)
  br i1 %"tmp#16##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1223)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#2<0>"(i64 %"t##0")
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#2<0>"(i64 %"t##0")
  ret void
}

define external fastcc void @"higher_order_tests.#cont#2<0>"(i64 %"t##0") {
  %"tmp#26##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#25##0" = load ptr, ptr %"tmp#26##0"
  %"tmp#15##0" = tail call fastcc i1 %"tmp#25##0"(i64 %"t##0", i64 2)
  br i1 %"tmp#15##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#3" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#3<0>"(i64 %"t##0")
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#3<0>"(i64 %"t##0")
  ret void
}

define external fastcc void @"higher_order_tests.#cont#3<0>"(i64 %"t##0") {
  %"tmp#25##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#24##0" = load ptr, ptr %"tmp#25##0"
  %"tmp#14##0" = tail call fastcc i1 %"tmp#24##0"(i64 %"t##0", i64 2)
  br i1 %"tmp#14##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1227)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#4<0>"()
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#4<0>"()
  ret void
}

define external fastcc void @"higher_order_tests.#cont#4<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#4" to i64 ))
  call ccc void @putchar(i8 10)
  %"tmp#30##0" = load ptr, ptr @"higher_order_tests#constant#5"
  %"tmp#13##0" = tail call fastcc i1 %"tmp#30##0"(ptr @"higher_order_tests#constant#5", i64 1)
  br i1 %"tmp#13##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#6" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#5<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#5" to i64 ))
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#5<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#5" to i64 ))
  ret void
}

define external fastcc void @"higher_order_tests.#cont#5<0>"(i64 %"t##0") {
  %"tmp#23##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#22##0" = load ptr, ptr %"tmp#23##0"
  %"tmp#12##0" = tail call fastcc i1 %"tmp#22##0"(i64 %"t##0", i64 1)
  br i1 %"tmp#12##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1223)
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#6<0>"(i64 %"t##0")
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#6<0>"(i64 %"t##0")
  ret void
}

define external fastcc void @"higher_order_tests.#cont#6<0>"(i64 %"t##0") {
  %"tmp#22##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#21##0" = load ptr, ptr %"tmp#22##0"
  %"tmp#11##0" = tail call fastcc i1 %"tmp#21##0"(i64 %"t##0", i64 2)
  br i1 %"tmp#11##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"higher_order_tests#constant#3" to i64 ))
  call ccc void @putchar(i8 10)
  tail call fastcc void @"higher_order_tests.#cont#7<0>"(i64 %"t##0")
  ret void
if.else.0:
  tail call fastcc void @"higher_order_tests.#cont#7<0>"(i64 %"t##0")
  ret void
}

define external fastcc void @"higher_order_tests.#cont#7<0>"(i64 %"t##0") {
  %"tmp#21##0" = inttoptr i64 %"t##0" to ptr
  %"tmp#20##0" = load ptr, ptr %"tmp#21##0"
  %"tmp#10##0" = tail call fastcc i1 %"tmp#20##0"(i64 %"t##0", i64 2)
  br i1 %"tmp#10##0", label %if.then.0, label %if.else.0
if.then.0:
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 1227)
  call ccc void @putchar(i8 10)
  ret void
if.else.0:
  ret void
}

define external fastcc i1 @"higher_order_tests.do_test<0>"(i64 %"f##0", i64 %"i##0") {
  %"tmp#2##0" = inttoptr i64 %"f##0" to ptr
  %"tmp#1##0" = load ptr, ptr %"tmp#2##0"
  %"tmp#3##0" = tail call fastcc i1 %"tmp#1##0"(i64 %"f##0", i64 %"i##0")
  ret i1 %"tmp#3##0"
}

define external fastcc i1 @"higher_order_tests.do_test2<0>"(i64 %"f##0", i64 %"i##0") {
  %"tmp#2##0" = inttoptr i64 %"f##0" to ptr
  %"tmp#1##0" = load ptr, ptr %"tmp#2##0"
  %"tmp#3##0" = tail call fastcc i1 %"tmp#1##0"(i64 %"f##0", i64 %"i##0")
  ret i1 %"tmp#3##0"
}
