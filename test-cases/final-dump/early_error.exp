======================================================================
AFTER EVERYTHING:
 Module early_error
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : early_error.<0>
  imports         : use wybe
  resources       : 
  procs           : 

*main* > public {impure} (0 calls)
0: early_error.<0>
(io##0:wybe.phantom, ?io##1:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    wybe.string.print_string<0>("should print this":wybe.string, ~#io##0:wybe.phantom, ?tmp#2##0:wybe.phantom) #2 @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?#io##1:wybe.phantom) @io:nn:nn
    foreign c {impure} puts("should print this error message":wybe.string) @early_error:nn:nn
    foreign c {terminal,semipure} exit(1:wybe.int) @early_error:nn:nn


my_error > {terminal,inline,semipure} (1 calls)
0: early_error.my_error<0>
my_error(msg##0:wybe.string):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c {impure} puts(~msg##0:wybe.string) @early_error:nn:nn
    foreign c {terminal,semipure} exit(1:wybe.int) @early_error:nn:nn

  LLVM code       :

; ModuleID = 'early_error'


 


declare external ccc  void @exit(i64)    


declare external ccc  void @puts(i64)    


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print_string<0>"(i64)    


@early_error.5 =    constant {i64, i64} { i64 31, i64 ptrtoint ([?? x i8]* @early_error.4 to i64) }


@early_error.4 =    constant [?? x i8] c"should print this error message\00"


@early_error.2 =    constant {i64, i64} { i64 17, i64 ptrtoint ([?? x i8]* @early_error.1 to i64) }


@early_error.1 =    constant [?? x i8] c"should print this\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  void @"early_error.<0>"()    {
entry:
  %3 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @early_error.2, i32 0, i32 0) to i64 
  tail call fastcc  void  @"wybe.string.print_string<0>"(i64  %3)  
  tail call ccc  void  @putchar(i8  10)  
  %6 = ptrtoint i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @early_error.5, i32 0, i32 0) to i64 
  tail call ccc  void  @puts(i64  %6)  
  tail call ccc  void  @exit(i64  1)  
  ret void 
}


define external fastcc  void @"early_error.my_error<0>"(i64  %"msg##0")    {
entry:
  tail call ccc  void  @puts(i64  %"msg##0")  
  tail call ccc  void  @exit(i64  1)  
  ret void 
}
