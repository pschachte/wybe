======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module early_error
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : early_error.<0>
  constants       : 0:: CStringInfo {cstringChars = "should print this"}
                    1:: StructInfo {structSize = 16, structData = [IntStructMember 17 8,PointerStructMember early_error#constant#0]}
                    2:: CStringInfo {cstringChars = "should print this error message"}
                    3:: StructInfo {structSize = 16, structData = [IntStructMember 31 8,PointerStructMember early_error#constant#2]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: early_error.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    wybe.string.print<0>("should print this":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @early_error:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#1##0:wybe.phantom) @early_error:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#1##0:wybe.phantom, ?tmp#2##0:wybe.phantom) @early_error:nn:nn
    foreign lpvm store(~%tmp#2##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @early_error:nn:nn
    foreign c {impure} puts("should print this error message":wybe.string) @early_error:nn:nn
    foreign c {terminal,semipure} exit(1:wybe.int) @early_error:nn:nn


proc my_error > {terminal,inline,semipure} (1 calls)
0: early_error.my_error<0>
my_error(msg##0:wybe.string)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign c {impure} puts(~msg##0:wybe.string) @early_error:nn:nn
    foreign c {terminal,semipure} exit(1:wybe.int) @early_error:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'early_error'

source_filename = "!ROOT!/final-dump/early_error.wybe"
target triple    ????

@"early_error#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"should print this\00", align 8
@"early_error#constant#1" = private unnamed_addr constant {i64, ptr} { i64 17, ptr @"early_error#constant#0" }, align 8
@"early_error#constant#2" = private unnamed_addr constant [ ?? x i8 ] c"should print this error message\00", align 8
@"early_error#constant#3" = private unnamed_addr constant {i64, ptr} { i64 31, ptr @"early_error#constant#2" }, align 8

declare external fastcc void @"wybe.string.print<0>"(i64)
declare external ccc void @exit(i64)
declare external ccc void @putchar(i8)
declare external ccc void @puts(i64)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"early_error.<0>"() {
  tail call fastcc void @"wybe.string.print<0>"(i64 ptrtoint( ptr @"early_error#constant#1" to i64 ))
  call ccc void @putchar(i8 10)
  call ccc void @puts(i64 ptrtoint( ptr @"early_error#constant#3" to i64 ))
  call ccc void @exit(i64 1)
  ret void
}

define external fastcc void @"early_error.my_error<0>"(i64 %"msg##0") {
  call ccc void @puts(i64 %"msg##0")
  call ccc void @exit(i64 1)
  ret void
}
final-dump/early_error.wybe:3:2: In module top-level code, this statement is unreachable
