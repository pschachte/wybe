======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module func_where
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : func_where.quad<0>
  imports         : use wybe
  resources       : 
  procs           : 

proc quad > public {inline} (0 calls)
0: func_where.quad<0>
quad(x##0:wybe.int, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(~x##0:wybe.int, ~x##0:wybe.int, ?tmp#0##0:wybe.int) @func_where:nn:nn
    foreign llvm add(~tmp#0##0:wybe.int, ~tmp#0##0:wybe.int, ?#result##0:wybe.int) @func_where:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'func_where'

source_filename = "!ROOT!/final-dump/func_where.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc i64 @"func_where.quad<0>"(i64 %"x##0") {
  %"tmp#0##0" = add i64 %"x##0", %"x##0"
  %"tmp#6##0" = add i64 %"tmp#0##0", %"tmp#0##0"
  ret i64 %"tmp#6##0"
}
