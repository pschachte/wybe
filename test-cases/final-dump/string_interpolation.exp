======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module string_interpolation
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : string_interpolation.<0>
  constants       : 0:: CStringInfo {cstringChars = "Wybe"}
                    1:: StructInfo {structSize = 16, structData = [IntStructMember 4 8,PointerStructMember string_interpolation#constant#0]}
                    2:: CStringInfo {cstringChars = "Hello, "}
                    3:: StructInfo {structSize = 16, structData = [IntStructMember 7 8,PointerStructMember string_interpolation#constant#2]}
                    4:: CStringInfo {cstringChars = " is the answer"}
                    5:: StructInfo {structSize = 16, structData = [IntStructMember 14 8,PointerStructMember string_interpolation#constant#4]}
                    6:: CStringInfo {cstringChars = " and minint is "}
                    7:: StructInfo {structSize = 16, structData = [IntStructMember 15 8,PointerStructMember string_interpolation#constant#6]}
                    8:: CStringInfo {cstringChars = "maxint is "}
                    9:: StructInfo {structSize = 16, structData = [IntStructMember 10 8,PointerStructMember string_interpolation#constant#8]}
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: string_interpolation.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(18,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(20,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []])),(23,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    wybe.string.,,<0>("Wybe":wybe.string, 1159:wybe.string, ?tmp#1##0:wybe.string) #1 @string_interpolation:nn:nn
    wybe.string.,,<0>("Hello, ":wybe.string, ~tmp#1##0:wybe.string, ?tmp#0##0:wybe.string) #2 @string_interpolation:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#0##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #18 @string_interpolation:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#21##0:wybe.phantom) @string_interpolation:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#21##0:wybe.phantom, ?tmp#22##0:wybe.phantom) @string_interpolation:nn:nn
    foreign lpvm store(~%tmp#22##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @string_interpolation:nn:nn
    wybe.int.fmt<2>(42:wybe.int, 0:wybe.int, 32:wybe.char, ?tmp#5##0:wybe.string) #19 @string_interpolation:nn:nn
    wybe.string.,,<0>(~tmp#5##0:wybe.string, " is the answer":wybe.string, ?tmp#4##0:wybe.string) #6 @string_interpolation:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#4##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #20 @string_interpolation:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#27##0:wybe.phantom) @string_interpolation:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#27##0:wybe.phantom, ?tmp#28##0:wybe.phantom) @string_interpolation:nn:nn
    foreign lpvm store(~%tmp#28##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @string_interpolation:nn:nn
    foreign c ipow(2:wybe.int, 63:wybe.int, ?tmp#10##0:wybe.int) @string_interpolation:nn:nn
    foreign llvm sub(tmp#10##0:wybe.int, 1:wybe.int, ?tmp#9##0:wybe.int) @string_interpolation:nn:nn
    wybe.int.fmt<2>(~tmp#9##0:wybe.int, 0:wybe.int, 32:wybe.char, ?tmp#8##0:wybe.string) #21 @string_interpolation:nn:nn
    wybe.int.fmt<2>(~tmp#10##0:wybe.int, 0:wybe.int, 32:wybe.char, ?tmp#12##0:wybe.string) #22 @string_interpolation:nn:nn
    wybe.string.,,<0>(" and minint is ":wybe.string, ~tmp#12##0:wybe.string, ?tmp#11##0:wybe.string) #13 @string_interpolation:nn:nn
    wybe.string.,,<0>(~tmp#8##0:wybe.string, ~tmp#11##0:wybe.string, ?tmp#7##0:wybe.string) #14 @string_interpolation:nn:nn
    wybe.string.,,<0>("maxint is ":wybe.string, ~tmp#7##0:wybe.string, ?tmp#6##0:wybe.string) #15 @string_interpolation:nn:nn
    wybe.string.print<0>[410bae77d3](~tmp#6##0:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #23 @string_interpolation:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#38##0:wybe.phantom) @string_interpolation:nn:nn
    foreign c putchar(10:wybe.char, ~tmp#38##0:wybe.phantom, ?tmp#39##0:wybe.phantom) @string_interpolation:nn:nn
    foreign lpvm store(~%tmp#39##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @string_interpolation:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'string_interpolation'

source_filename = "!ROOT!/final-dump/string_interpolation.wybe"
target triple    ????

@"string_interpolation#constant#0" = private unnamed_addr constant [ ?? x i8 ] c"Wybe\00", align 8
@"string_interpolation#constant#1" = private unnamed_addr constant {i64, ptr} { i64 4, ptr @"string_interpolation#constant#0" }, align 8
@"string_interpolation#constant#2" = private unnamed_addr constant [ ?? x i8 ] c"Hello, \00", align 8
@"string_interpolation#constant#3" = private unnamed_addr constant {i64, ptr} { i64 7, ptr @"string_interpolation#constant#2" }, align 8
@"string_interpolation#constant#4" = private unnamed_addr constant [ ?? x i8 ] c" is the answer\00", align 8
@"string_interpolation#constant#5" = private unnamed_addr constant {i64, ptr} { i64 14, ptr @"string_interpolation#constant#4" }, align 8
@"string_interpolation#constant#6" = private unnamed_addr constant [ ?? x i8 ] c" and minint is \00", align 8
@"string_interpolation#constant#7" = private unnamed_addr constant {i64, ptr} { i64 15, ptr @"string_interpolation#constant#6" }, align 8
@"string_interpolation#constant#8" = private unnamed_addr constant [ ?? x i8 ] c"maxint is \00", align 8
@"string_interpolation#constant#9" = private unnamed_addr constant {i64, ptr} { i64 10, ptr @"string_interpolation#constant#8" }, align 8

declare external fastcc i64 @"wybe.int.fmt<2>"(i64, i64, i8)
declare external fastcc i64 @"wybe.string.,,<0>"(i64, i64)
declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc i64 @ipow(i64, i64)
declare external ccc void @putchar(i8)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"string_interpolation.<0>"() {
  %"tmp#1##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string_interpolation#constant#1" to i64 ), i64 1159)
  %"tmp#0##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string_interpolation#constant#3" to i64 ), i64 %"tmp#1##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#0##0")
  call ccc void @putchar(i8 10)
  %"tmp#5##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 42, i64 0, i8 32)
  %"tmp#4##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#5##0", i64 ptrtoint( ptr @"string_interpolation#constant#5" to i64 ))
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#4##0")
  call ccc void @putchar(i8 10)
  %"tmp#10##0" = call ccc i64 @ipow(i64 2, i64 63)
  %"tmp#9##0" = sub i64 %"tmp#10##0", 1
  %"tmp#8##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"tmp#9##0", i64 0, i8 32)
  %"tmp#12##0" = tail call fastcc i64 @"wybe.int.fmt<2>"(i64 %"tmp#10##0", i64 0, i8 32)
  %"tmp#11##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string_interpolation#constant#7" to i64 ), i64 %"tmp#12##0")
  %"tmp#7##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 %"tmp#8##0", i64 %"tmp#11##0")
  %"tmp#6##0" = tail call fastcc i64 @"wybe.string.,,<0>"(i64 ptrtoint( ptr @"string_interpolation#constant#9" to i64 ), i64 %"tmp#7##0")
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"tmp#6##0")
  call ccc void @putchar(i8 10)
  ret void
}
