======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module unbranch_bug
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : unbranch_bug.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: unbranch_bug.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    unbranch_bug.#cont#3<0>(0:wybe.list(5))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @unbranch_bug:nn:nn


proc #cont#1 > {inline,semipure} (1 calls)
0: unbranch_bug.#cont#1<0>
#cont#1()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc #cont#2 > {inline,semipure} (1 calls)
0: unbranch_bug.#cont#2<0>
#cont#2()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []


proc #cont#3 > {semipure} (2 calls)
0: unbranch_bug.#cont#3<0>
#cont#3(tmp#0##0:wybe.list(5) <{}; {}; {0}>)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(tmp#0##0:wybe.int, 0:wybe.int, ?tmp#7##0:wybe.bool) @unbranch_bug:nn:nn
    case ~tmp#7##0:wybe.bool of
    0:

    1:
        foreign lpvm access(~tmp#0##0:wybe.list(T), 8:wybe.int, 16:wybe.int, 0:wybe.int, ?tmp#0##1:wybe.list(5)) @unbranch_bug:nn:nn
        unbranch_bug.#cont#3<0>(~tmp#0##1:wybe.list(5))<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #1 @unbranch_bug:nn:nn


  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'unbranch_bug'

source_filename = "!ROOT!/final-dump/unbranch_bug.wybe"
target triple    ????


declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"unbranch_bug.<0>"() {
  tail call fastcc void @"unbranch_bug.#cont#3<0>"(i64 0)
  ret void
}

define external fastcc void @"unbranch_bug.#cont#1<0>"() {
  ret void
}

define external fastcc void @"unbranch_bug.#cont#2<0>"() {
  ret void
}

define external fastcc void @"unbranch_bug.#cont#3<0>"(i64 %"tmp#0##0") {
  %"tmp#7##0" = icmp ne i64 %"tmp#0##0", 0
  br i1 %"tmp#7##0", label %if.then.0, label %if.else.0
if.then.0:
  %"tmp#8##0" = add i64 %"tmp#0##0", 8
  %"tmp#9##0" = inttoptr i64 %"tmp#8##0" to ptr
  %"tmp#0##1" = load i64, ptr %"tmp#9##0"
  tail call fastcc void @"unbranch_bug.#cont#3<0>"(i64 %"tmp#0##1")
  ret void
if.else.0:
  ret void
}
