======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module func_let
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : func_let.<0>
                    func_let.quad<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: func_let.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @func_let:nn:nn
    foreign c print_int(40:wybe.int, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @func_let:nn:nn
    foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @func_let:nn:nn


proc quad > public {inline} (1 calls)
0: func_let.quad<0>
quad(x##0:wybe.int, ?#result##0:wybe.int)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm add(~x##0:wybe.int, ~x##0:wybe.int, ?tmp#0##0:wybe.int) @func_let:nn:nn
    foreign llvm add(~tmp#0##0:wybe.int, ~tmp#0##0:wybe.int, ?#result##0:wybe.int) @func_let:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'func_let'

source_filename = "!ROOT!/final-dump/func_let.wybe"
target triple    ????


declare external ccc void @print_int(i64)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"func_let.<0>"() {
  call ccc void @print_int(i64 40)
  ret void
}

define external fastcc i64 @"func_let.quad<0>"(i64 %"x##0") {
  %"tmp#0##0" = add i64 %"x##0", %"x##0"
  %"tmp#6##0" = add i64 %"tmp#0##0", %"tmp#0##0"
  ret i64 %"tmp#6##0"
}
