======================================================================
AFTER EVERYTHING:


--------------------------------------------------
 Module alloc_args
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : alloc_args.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: alloc_args.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    alloc_args.foo<0>(1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #0 @alloc_args:nn:nn


proc foo > {noinline} (1 calls)
0: alloc_args.foo<0>
foo(size##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(2,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm alloc(~size##0:wybe.int, ?str##0:wybe.string) @alloc_args:nn:nn
    foreign lpvm mutate(~str##0:wybe.string, ?str##1:wybe.string, 0:wybe.int, 1:wybe.bool, 1:wybe.int, 0:wybe.int, 0:wybe.int) @alloc_args:nn:nn
    wybe.string.print<0>[410bae77d3](~str##1:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}; {}> #2 @alloc_args:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @alloc_args:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @alloc_args:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @alloc_args:nn:nn

  LLVM code       :

;; FILE GENERATED BY wybemk 0.2 -- see https://github.com/pschachte/wybe
; ModuleID = 'alloc_args'

source_filename = "!ROOT!/final-dump/alloc_args.wybe"
target triple    ????


declare external fastcc void @"wybe.string.print<0>[410bae77d3]"(i64)
declare external ccc void @putchar(i8)
declare external ccc ptr @wybe_malloc(i32)
declare external ccc void @llvm.memcpy.p0.p0.i64(ptr, ptr, i64, i1)

define external fastcc void @"alloc_args.<0>"() {
  tail call fastcc void @"alloc_args.foo<0>"(i64 1)
  ret void
}

define external fastcc void @"alloc_args.foo<0>"(i64 %"size##0") {
  %"tmp#4##0" = trunc i64 %"size##0" to i32
  %"tmp#5##0" = call ccc ptr @wybe_malloc(i32 %"tmp#4##0")
  %"str##0" = ptrtoint ptr %"tmp#5##0" to i64
  %"tmp#6##0" = inttoptr i64 %"str##0" to ptr
  store i64 0, ptr %"tmp#6##0"
  tail call fastcc void @"wybe.string.print<0>[410bae77d3]"(i64 %"str##0")
  call ccc void @putchar(i8 10)
  ret void
}
