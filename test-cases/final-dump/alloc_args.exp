======================================================================
AFTER EVERYTHING:
 Module alloc_args
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : alloc_args.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {inline,semipure} (0 calls)
0: alloc_args.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    alloc_args.foo<0>(1:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #0 @alloc_args:nn:nn


foo > {noinline} (1 calls)
0: alloc_args.foo<0>
foo(size##0:wybe.int)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
  MultiSpeczDepInfo: [(2,(wybe.string.print<0>,fromList [NonAliasedParamCond 0 []]))]
    foreign lpvm alloc(~size##0:wybe.int, ?str##0:wybe.string) @alloc_args:nn:nn
    foreign lpvm mutate(~str##0:wybe.string, ?str##1:wybe.string, 0:wybe.int, 1:wybe.bool, 1:wybe.int, 0:wybe.int, 0:wybe.int) @alloc_args:nn:nn
    wybe.string.print<0>[410bae77d3](~str##1:wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #2 @string:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#2##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#2##0:wybe.phantom, ?tmp#3##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#3##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn

  LLVM code       :

; ModuleID = 'alloc_args'


 


declare external ccc  void @putchar(i8)    


declare external fastcc  void @"wybe.string.print<0>[410bae77d3]"(i64)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"alloc_args.<0>"() alwaysinline   {
entry:
  tail call fastcc  void  @"alloc_args.foo<0>"(i64  1)  
  ret void 
}


define external fastcc  void @"alloc_args.foo<0>"(i64  %"size##0") noinline   {
entry:
  %0 = trunc i64 %"size##0" to i32  
  %1 = tail call ccc  i8*  @wybe_malloc(i32  %0)  
  %2 = ptrtoint i8* %1 to i64 
  %3 = inttoptr i64 %2 to i64* 
  store  i64 0, i64* %3 
  tail call fastcc  void  @"wybe.string.print<0>[410bae77d3]"(i64  %2)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}
