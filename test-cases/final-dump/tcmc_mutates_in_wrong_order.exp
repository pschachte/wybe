======================================================================
AFTER EVERYTHING:
 Module tcmc_mutates_in_wrong_order
  representation  : address
  public submods  : 
  public resources: 
  public procs    : tcmc_mutates_in_wrong_order.<0>
                    tcmc_mutates_in_wrong_order.=<0>
                    tcmc_mutates_in_wrong_order.snoc<0>
                    tcmc_mutates_in_wrong_order.snoc<1>
                    tcmc_mutates_in_wrong_order.~=<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {impure} (0 calls)
0: tcmc_mutates_in_wrong_order.<0>
()<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?tmp#6##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~tmp#6##0:tcmc_mutates_in_wrong_order, ?tmp#7##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~tmp#7##0:tcmc_mutates_in_wrong_order, ?tmp#0##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 1:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm alloc(16:wybe.int, ?tmp#10##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~tmp#10##0:tcmc_mutates_in_wrong_order, ?tmp#11##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~tmp#11##0:tcmc_mutates_in_wrong_order, ?tmp#2##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, 2:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
    tcmc_mutates_in_wrong_order.append<0>(~tmp#0##0:tcmc_mutates_in_wrong_order, tmp#2##0:tcmc_mutates_in_wrong_order, outByReference x3##0:tcmc_mutates_in_wrong_order) #4 @tcmc_mutates_in_wrong_order:nn:nn
    tcmc_mutates_in_wrong_order.print_list<0>(~tmp#2##0:tcmc_mutates_in_wrong_order)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #5 @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#12##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#12##0:wybe.phantom, ?tmp#13##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#13##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn
    tcmc_mutates_in_wrong_order.print_list<0>(~x3##0:tcmc_mutates_in_wrong_order)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #7 @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#14##0:wybe.phantom) @io:nn:nn
    foreign c putchar('\n':wybe.char, ~tmp#14##0:wybe.phantom, ?tmp#15##0:wybe.phantom) @io:nn:nn
    foreign lpvm store(~%tmp#15##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @io:nn:nn


= > public (4 calls)
0: tcmc_mutates_in_wrong_order.=<0>
=(#left##0:tcmc_mutates_in_wrong_order, #right##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#left##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm icmp_eq(~#left##0:tcmc_mutates_in_wrong_order, ~#right##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)

    1:
        foreign lpvm access(#left##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#tail##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm access(~#left##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#left#head##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm icmp_ne(#right##0:wybe.int, 0:wybe.int, ?tmp#9##0:wybe.bool)
        case ~tmp#9##0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

        1:
            foreign lpvm access(#right##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#tail##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
            foreign lpvm access(~#right##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#right#head##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
            tcmc_mutates_in_wrong_order.=<0>(~#left#tail##0:tcmc_mutates_in_wrong_order, ~#right#tail##0:tcmc_mutates_in_wrong_order, ?tmp#4##0:wybe.bool) #2
            case ~tmp#4##0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)

            1:
                foreign llvm icmp_eq(~#left#head##0:wybe.int, ~#right#head##0:wybe.int, ?#success##0:wybe.bool) @int:nn:nn





append > (2 calls)
0: tcmc_mutates_in_wrong_order.append<0>
append(a##0:tcmc_mutates_in_wrong_order, b##0:tcmc_mutates_in_wrong_order, outByReference result##0:tcmc_mutates_in_wrong_order)<{}; {}>:
  AliasPairs: [(a##0,b##0),(a##0,result##0),(b##0,result##0)]
  InterestingCallProperties: []
    foreign llvm icmp_ne(a##0:wybe.int, 0:wybe.int, ?tmp#3##0:wybe.bool)
    case ~tmp#3##0:wybe.bool of
    0:
        foreign llvm move(~b##0:tcmc_mutates_in_wrong_order, ?result##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn

    1:
        foreign lpvm access(a##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?t##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm access(~a##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?h##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm alloc(16:wybe.int, ?tmp#6##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm mutate(~tmp#6##0:tcmc_mutates_in_wrong_order, ?tmp#7##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~h##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        tcmc_mutates_in_wrong_order.append<0>(~b##0:tcmc_mutates_in_wrong_order, ~t##0:tcmc_mutates_in_wrong_order, outByReference t2##0:tcmc_mutates_in_wrong_order) #1 @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm mutate(~tmp#7##0:tcmc_mutates_in_wrong_order, ?result##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~takeReference t2##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn



head > {inline} (0 calls)
0: tcmc_mutates_in_wrong_order.head<0>
head(#rec##0:tcmc_mutates_in_wrong_order, ?#result##0:wybe.int, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#rec##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)
        foreign llvm move(undef:wybe.int, ?#result##0:wybe.int)

    1:
        foreign lpvm access(~#rec##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

head > {inline} (0 calls)
1: tcmc_mutates_in_wrong_order.head<1>
head(#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order, #field##0:wybe.int, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#rec##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)
        foreign llvm move(~#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order)

    1:
        foreign lpvm mutate(~#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order, 8:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)



null > {inline} (2 calls)
0: tcmc_mutates_in_wrong_order.null<0>
null(?#result##0:tcmc_mutates_in_wrong_order)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(0:tcmc_mutates_in_wrong_order, ?#result##0:tcmc_mutates_in_wrong_order)


print_list > (3 calls)
0: tcmc_mutates_in_wrong_order.print_list<0>
print_list(a##0:tcmc_mutates_in_wrong_order)<{<<wybe.io.io>>}; {<<wybe.io.io>>}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(a##0:wybe.int, 0:wybe.int, ?tmp#2##0:wybe.bool)
    case ~tmp#2##0:wybe.bool of
    0:
        wybe.string.print<0>("null":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #6 @tcmc_mutates_in_wrong_order:nn:nn

    1:
        foreign lpvm access(a##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tail##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm access(~a##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?head##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        wybe.string.print<0>("node(":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #1 @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm load(<<wybe.io.io>>:wybe.phantom, ?%tmp#4##0:wybe.phantom) @int:nn:nn
        foreign c print_int(~head##0:wybe.int, ~tmp#4##0:wybe.phantom, ?tmp#5##0:wybe.phantom) @int:nn:nn
        foreign lpvm store(~%tmp#5##0:wybe.phantom, <<wybe.io.io>>:wybe.phantom) @int:nn:nn
        wybe.string.print<0>(",":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #3 @tcmc_mutates_in_wrong_order:nn:nn
        tcmc_mutates_in_wrong_order.print_list<0>(~tail##0:tcmc_mutates_in_wrong_order)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #4 @tcmc_mutates_in_wrong_order:nn:nn
        wybe.string.print<0>(")":wybe.string)<{<<wybe.io.io>>}; {<<wybe.io.io>>}> #5 @tcmc_mutates_in_wrong_order:nn:nn



snoc > public {inline} (3 calls)
0: tcmc_mutates_in_wrong_order.snoc<0>
snoc(tail##0:tcmc_mutates_in_wrong_order, head##0:wybe.int, ?#result##0:tcmc_mutates_in_wrong_order)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign lpvm alloc(16:wybe.int, ?#rec##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order, 0:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~tail##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
    foreign lpvm mutate(~#rec##1:tcmc_mutates_in_wrong_order, ?#result##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 1:wybe.int, 16:wybe.int, 0:wybe.int, ~head##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
snoc > public {inline} (18 calls)
1: tcmc_mutates_in_wrong_order.snoc<1>
snoc(?tail##0:tcmc_mutates_in_wrong_order, ?head##0:wybe.int, #result##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#result##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)
        foreign llvm move(undef:tcmc_mutates_in_wrong_order, ?tail##0:tcmc_mutates_in_wrong_order)
        foreign llvm move(undef:wybe.int, ?head##0:wybe.int)

    1:
        foreign lpvm access(#result##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?tail##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign lpvm access(~#result##0:tcmc_mutates_in_wrong_order, 8:wybe.int, 16:wybe.int, 0:wybe.int, ?head##0:wybe.int) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)



tail > {inline} (0 calls)
0: tcmc_mutates_in_wrong_order.tail<0>
tail(#rec##0:tcmc_mutates_in_wrong_order, ?#result##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#rec##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)
        foreign llvm move(undef:tcmc_mutates_in_wrong_order, ?#result##0:tcmc_mutates_in_wrong_order)

    1:
        foreign lpvm access(~#rec##0:tcmc_mutates_in_wrong_order, 0:wybe.int, 16:wybe.int, 0:wybe.int, ?#result##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

tail > {inline} (0 calls)
1: tcmc_mutates_in_wrong_order.tail<1>
tail(#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order, #field##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm icmp_ne(#rec##0:wybe.int, 0:wybe.int, ?tmp#0##0:wybe.bool)
    case ~tmp#0##0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?#success##0:wybe.bool)
        foreign llvm move(~#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order)

    1:
        foreign lpvm {noalias} mutate(~#rec##0:tcmc_mutates_in_wrong_order, ?#rec##1:tcmc_mutates_in_wrong_order, 0:wybe.int, 0:wybe.int, 16:wybe.int, 0:wybe.int, ~#field##0:tcmc_mutates_in_wrong_order) @tcmc_mutates_in_wrong_order:nn:nn
        foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)



~= > public {inline} (0 calls)
0: tcmc_mutates_in_wrong_order.~=<0>
~=(#left##0:tcmc_mutates_in_wrong_order, #right##0:tcmc_mutates_in_wrong_order, ?#success##0:wybe.bool)<{}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    tcmc_mutates_in_wrong_order.=<0>(~#left##0:tcmc_mutates_in_wrong_order, ~#right##0:tcmc_mutates_in_wrong_order, ?tmp#0##0:wybe.bool) #0
    foreign llvm xor(~tmp#0##0:wybe.bool, 1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

; ModuleID = 'tcmc_mutates_in_wrong_order'


 


@tcmc_mutates_in_wrong_order.3 =    constant {i64, i64} { i64 1, i64 ptrtoint ([?? x i8]* @tcmc_mutates_in_wrong_order.2 to i64) }


@tcmc_mutates_in_wrong_order.5 =    constant {i64, i64} { i64 1, i64 ptrtoint ([?? x i8]* @tcmc_mutates_in_wrong_order.4 to i64) }


@tcmc_mutates_in_wrong_order.7 =    constant {i64, i64} { i64 4, i64 ptrtoint ([?? x i8]* @tcmc_mutates_in_wrong_order.6 to i64) }


@tcmc_mutates_in_wrong_order.1 =    constant {i64, i64} { i64 5, i64 ptrtoint ([?? x i8]* @tcmc_mutates_in_wrong_order.0 to i64) }


@tcmc_mutates_in_wrong_order.4 =    constant [?? x i8] c")\00"


@tcmc_mutates_in_wrong_order.2 =    constant [?? x i8] c",\00"


@tcmc_mutates_in_wrong_order.0 =    constant [?? x i8] c"node(\00"


@tcmc_mutates_in_wrong_order.6 =    constant [?? x i8] c"null\00"


declare external fastcc  void @"wybe.string.print<0>"(i64)    


declare external ccc  void @print_int(i64)    


declare external ccc  void @putchar(i8)    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"tcmc_mutates_in_wrong_order.<0>"()    {
entry:
  %0 = trunc i64 16 to i32  
  %1 = tail call ccc  i8*  @wybe_malloc(i32  %0)  
  %2 = ptrtoint i8* %1 to i64 
  %3 = inttoptr i64 %2 to i64* 
  store  i64 0, i64* %3 
  %4 = add   i64 %2, 8 
  %5 = inttoptr i64 %4 to i64* 
  store  i64 1, i64* %5 
  %6 = trunc i64 16 to i32  
  %7 = tail call ccc  i8*  @wybe_malloc(i32  %6)  
  %8 = ptrtoint i8* %7 to i64 
  %9 = inttoptr i64 %8 to i64* 
  store  i64 0, i64* %9 
  %10 = add   i64 %8, 8 
  %11 = inttoptr i64 %10 to i64* 
  store  i64 2, i64* %11 
  %12 = alloca i64 
   call fastcc  void  @"tcmc_mutates_in_wrong_order.append<0>"(i64  %2, i64  %8, i64*  %12)  
  %13 = load  i64, i64* %12 
  tail call fastcc  void  @"tcmc_mutates_in_wrong_order.print_list<0>"(i64  %8)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"tcmc_mutates_in_wrong_order.print_list<0>"(i64  %13)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  i1 @"tcmc_mutates_in_wrong_order.=<0>"(i64  %"#left##0", i64  %"#right##0")    {
entry:
  %0 = icmp ne i64 %"#left##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"#left##0" to i64* 
  %2 = load  i64, i64* %1 
  %3 = add   i64 %"#left##0", 8 
  %4 = inttoptr i64 %3 to i64* 
  %5 = load  i64, i64* %4 
  %6 = icmp ne i64 %"#right##0", 0 
  br i1 %6, label %if.then1, label %if.else1 
if.else:
  %14 = icmp eq i64 %"#left##0", %"#right##0" 
  ret i1 %14 
if.then1:
  %7 = inttoptr i64 %"#right##0" to i64* 
  %8 = load  i64, i64* %7 
  %9 = add   i64 %"#right##0", 8 
  %10 = inttoptr i64 %9 to i64* 
  %11 = load  i64, i64* %10 
  %12 = tail call fastcc  i1  @"tcmc_mutates_in_wrong_order.=<0>"(i64  %2, i64  %8)  
  br i1 %12, label %if.then2, label %if.else2 
if.else1:
  ret i1 0 
if.then2:
  %13 = icmp eq i64 %5, %11 
  ret i1 %13 
if.else2:
  ret i1 0 
}


define external fastcc  void @"tcmc_mutates_in_wrong_order.append<0>"(i64  %"a##0", i64  %"b##0", i64*  %"result#ref##0")    {
entry:
  %0 = icmp ne i64 %"a##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"a##0" to i64* 
  %2 = load  i64, i64* %1 
  %3 = add   i64 %"a##0", 8 
  %4 = inttoptr i64 %3 to i64* 
  %5 = load  i64, i64* %4 
  %6 = trunc i64 16 to i32  
  %7 = tail call ccc  i8*  @wybe_malloc(i32  %6)  
  %8 = ptrtoint i8* %7 to i64 
  %9 = add   i64 %8, 8 
  %10 = inttoptr i64 %9 to i64* 
  store  i64 %5, i64* %10 
  %11 = inttoptr i64 %8 to i64* 
  store  i64 %8, i64* %"result#ref##0" 
  musttail call fastcc  void  @"tcmc_mutates_in_wrong_order.append<0>"(i64  %"b##0", i64  %2, i64*  %11)  
  ret void 
if.else:
  store  i64 %"b##0", i64* %"result#ref##0" 
  ret void 
}


define external fastcc  {i64, i1} @"tcmc_mutates_in_wrong_order.head<0>"(i64  %"#rec##0")    {
entry:
  %0 = icmp ne i64 %"#rec##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = add   i64 %"#rec##0", 8 
  %2 = inttoptr i64 %1 to i64* 
  %3 = load  i64, i64* %2 
  %4 = insertvalue {i64, i1} undef, i64 %3, 0 
  %5 = insertvalue {i64, i1} %4, i1 1, 1 
  ret {i64, i1} %5 
if.else:
  %6 = insertvalue {i64, i1} undef, i64 undef, 0 
  %7 = insertvalue {i64, i1} %6, i1 0, 1 
  ret {i64, i1} %7 
}


define external fastcc  {i64, i1} @"tcmc_mutates_in_wrong_order.head<1>"(i64  %"#rec##0", i64  %"#field##0")    {
entry:
  %0 = icmp ne i64 %"#rec##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = trunc i64 16 to i32  
  %2 = tail call ccc  i8*  @wybe_malloc(i32  %1)  
  %3 = ptrtoint i8* %2 to i64 
  %4 = inttoptr i64 %3 to i8* 
  %5 = inttoptr i64 %"#rec##0" to i8* 
  %6 = trunc i64 16 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %4, i8*  %5, i32  %6, i1  0)  
  %7 = add   i64 %3, 8 
  %8 = inttoptr i64 %7 to i64* 
  store  i64 %"#field##0", i64* %8 
  %9 = insertvalue {i64, i1} undef, i64 %3, 0 
  %10 = insertvalue {i64, i1} %9, i1 1, 1 
  ret {i64, i1} %10 
if.else:
  %11 = insertvalue {i64, i1} undef, i64 %"#rec##0", 0 
  %12 = insertvalue {i64, i1} %11, i1 0, 1 
  ret {i64, i1} %12 
}


define external fastcc  i64 @"tcmc_mutates_in_wrong_order.null<0>"()    {
entry:
  ret i64 0 
}


define external fastcc  void @"tcmc_mutates_in_wrong_order.print_list<0>"(i64  %"a##0")    {
entry:
  %0 = icmp ne i64 %"a##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"a##0" to i64* 
  %2 = load  i64, i64* %1 
  %3 = add   i64 %"a##0", 8 
  %4 = inttoptr i64 %3 to i64* 
  %5 = load  i64, i64* %4 
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @tcmc_mutates_in_wrong_order.1, i32 0, i32 0) to i64))  
  tail call ccc  void  @print_int(i64  %5)  
  tail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @tcmc_mutates_in_wrong_order.3, i32 0, i32 0) to i64))  
  tail call fastcc  void  @"tcmc_mutates_in_wrong_order.print_list<0>"(i64  %2)  
  musttail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @tcmc_mutates_in_wrong_order.5, i32 0, i32 0) to i64))  
  ret void 
if.else:
  musttail call fastcc  void  @"wybe.string.print<0>"(i64  ptrtoint (i64* getelementptr inbounds ({i64, i64}, {i64, i64}* @tcmc_mutates_in_wrong_order.7, i32 0, i32 0) to i64))  
  ret void 
}


define external fastcc  i64 @"tcmc_mutates_in_wrong_order.snoc<0>"(i64  %"tail##0", i64  %"head##0")    {
entry:
  %0 = trunc i64 16 to i32  
  %1 = tail call ccc  i8*  @wybe_malloc(i32  %0)  
  %2 = ptrtoint i8* %1 to i64 
  %3 = inttoptr i64 %2 to i64* 
  store  i64 %"tail##0", i64* %3 
  %4 = add   i64 %2, 8 
  %5 = inttoptr i64 %4 to i64* 
  store  i64 %"head##0", i64* %5 
  ret i64 %2 
}


define external fastcc  {i64, i64, i1} @"tcmc_mutates_in_wrong_order.snoc<1>"(i64  %"#result##0")    {
entry:
  %0 = icmp ne i64 %"#result##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"#result##0" to i64* 
  %2 = load  i64, i64* %1 
  %3 = add   i64 %"#result##0", 8 
  %4 = inttoptr i64 %3 to i64* 
  %5 = load  i64, i64* %4 
  %6 = insertvalue {i64, i64, i1} undef, i64 %2, 0 
  %7 = insertvalue {i64, i64, i1} %6, i64 %5, 1 
  %8 = insertvalue {i64, i64, i1} %7, i1 1, 2 
  ret {i64, i64, i1} %8 
if.else:
  %9 = insertvalue {i64, i64, i1} undef, i64 undef, 0 
  %10 = insertvalue {i64, i64, i1} %9, i64 undef, 1 
  %11 = insertvalue {i64, i64, i1} %10, i1 0, 2 
  ret {i64, i64, i1} %11 
}


define external fastcc  {i64, i1} @"tcmc_mutates_in_wrong_order.tail<0>"(i64  %"#rec##0")    {
entry:
  %0 = icmp ne i64 %"#rec##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = inttoptr i64 %"#rec##0" to i64* 
  %2 = load  i64, i64* %1 
  %3 = insertvalue {i64, i1} undef, i64 %2, 0 
  %4 = insertvalue {i64, i1} %3, i1 1, 1 
  ret {i64, i1} %4 
if.else:
  %5 = insertvalue {i64, i1} undef, i64 undef, 0 
  %6 = insertvalue {i64, i1} %5, i1 0, 1 
  ret {i64, i1} %6 
}


define external fastcc  {i64, i1} @"tcmc_mutates_in_wrong_order.tail<1>"(i64  %"#rec##0", i64  %"#field##0")    {
entry:
  %0 = icmp ne i64 %"#rec##0", 0 
  br i1 %0, label %if.then, label %if.else 
if.then:
  %1 = trunc i64 16 to i32  
  %2 = tail call ccc  i8*  @wybe_malloc(i32  %1)  
  %3 = ptrtoint i8* %2 to i64 
  %4 = inttoptr i64 %3 to i8* 
  %5 = inttoptr i64 %"#rec##0" to i8* 
  %6 = trunc i64 16 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %4, i8*  %5, i32  %6, i1  0)  
  %7 = inttoptr i64 %3 to i64* 
  store  i64 %"#field##0", i64* %7 
  %8 = insertvalue {i64, i1} undef, i64 %3, 0 
  %9 = insertvalue {i64, i1} %8, i1 1, 1 
  ret {i64, i1} %9 
if.else:
  %10 = insertvalue {i64, i1} undef, i64 %"#rec##0", 0 
  %11 = insertvalue {i64, i1} %10, i1 0, 1 
  ret {i64, i1} %11 
}


define external fastcc  i1 @"tcmc_mutates_in_wrong_order.~=<0>"(i64  %"#left##0", i64  %"#right##0")    {
entry:
  %0 = tail call fastcc  i1  @"tcmc_mutates_in_wrong_order.=<0>"(i64  %"#left##0", i64  %"#right##0")  
  %1 = xor i1 %0, 1 
  ret i1 %1 
}
