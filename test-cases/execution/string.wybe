def test_index(s:string, i:int) use !io {
    if { ?c = s[i] :: !println(c) 
       | else :: !println("OUT OF RANGE") }
}

!println("TESTING CONSTRUCTION":raw_string)
!println(empty_string)                         # expect 
!println("a")                                  # expect a
!println("abc")                                # expect abc
!println("abc",,"abc")                         # expect abcabc
!println(ch('a'))                              # expect a
!println("abcdefghi"[xrange(1, 3, 100)])       # expect beh
!println("abcdefghi"[xrange(1, 3, 100)][1..3]) # expect eh

!println("\nTESTING CONVERSION TO raw_string":raw_string)
?s = "abc",,ch('d'),,"efg"[1..2]; raw(s, ?r)
!print(s); !print(' '); !println(r) # expect abcdf abcdf

!println("\nTESTING LOOPS":raw_string)
def print_loop(s:string) use !io {
    for ?c in s { !print(c) }
    !nl
}
!print_loop("abc")                             # expect abc
!print_loop("abcdefghijkl"[irange(10, -1, 1)]) # expect kjihgfedcb

!println("\nTESTING INDEXING":raw_string)
!test_index("abc", 0)                             # expect a
!test_index("abc", 1)                             # expect b
!test_index("abcdefghijklmnopqrstuvwxyz", 25)     # expect z
!test_index("ab",,"cd", 1)                        # expect b
!test_index("ab",,"cd", 2)                        # expect c
!test_index(ch('a'), 0)                           # expect a
!test_index("abcdefgh"[xrange(0,2,10)], 0)        # expect a
!test_index("abc", 3)                             # expect OUT OF RANGE
!test_index(ch('a'), 3)                           # expect OUT OF RANGE
!test_index("abc", -3)                            # expect OUT OF RANGE
!test_index("abc"[xrange(0,2,10)], 2)             # expect OUT OF RANGE
!test_index("abc",,ch('a'), 2)                    # expect c
!test_index((ch('a'),,ch('b'),,ch('c'))[0..2], 1) # expect b


