pub type position { pub position(x:int, y:int) }

pub def printPosition(pos:position) use !io {
    !print(" (")
    !print(pos.x)
    !print(",")
    !print(pos.y)
    !println(")")
}

# cannot say whether p1 is fresh or not because it's passed in from outside
# p2 is fresh in this def {
pub def pcopy(p1:position, ?p2:position) use !io {
  ?p2 = position(0,0)
  x(!p2, p1.x)
  y(!p2, p1.y)
  !println("--- Inside pcopy: ")
  !print("expect p2(0,20):")
  !printPosition(p2)
}

# copy as a deftion
# p2 is fresh
pub def fcopy(p1:position):position =
  let ?p2 = position(0,0) x(!p2, p1.x) y(!p2, p1.y) in p2

!println("copy a position")
!pcopy(position(0,20), ?r)
!println("--- After calling pcopy: ")
!print("expect r(0,20):")
!printPosition(r)
