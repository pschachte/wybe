----------------------------------------------------------------------
- build & execute without multiple specialization
----------------------------------------------------------------------
(0, 0, 0) #0
(-1, -6, 3) #100
** malloc count: 201

----------------------------------------------------------------------


----------------------------------------------------------------------
- build & execute with multiple specialization
----------------------------------------------------------------------
(0, 0, 0) #0
(-1, -6, 3) #100
** malloc count: 1

----------------------------------------------------------------------


----------------------------------------------------------------------
- final dump (with multiple specialization)
----------------------------------------------------------------------
======================================================================
AFTER BUILDING MAIN:
 Module 
  public submods  : 
  public types    : 
  public resources: 
  public procs    : 
  imports         : from drone use 
                    use wybe
  types           : 
  resources       : 
  procs           : 

*main* > {inline} (0 calls)
0: (argc#0:wybe.int, argv#0:wybe.int, ?exit_code#1:wybe.int, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c gc_init(0:wybe.phantom, ?io#1:wybe.phantom)
    drone.<0>(~#argc#0:wybe.int, ?#argc#1:wybe.int, ~#argv#0:wybe.int, ?#argv#1:wybe.int, 0:wybe.int, ?#exit_code#1:wybe.int, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #0

LLVM code       : None

--------------------------------------------------
 Module drone
  public submods  : 
  public types    : 
  public resources: 
  public procs    : drone.<0>
  imports         : use drone.drone_info
                    use wybe
  types           : drone_info/ is address { drone_info(x:int, y:int, z:int, count:int) @drone:2:23  }  @drone:2:1
  resources       : 
  submodules      : drone.drone_info
  procs           : 

*main* > public (0 calls)
0: (argc#0:wybe.int, ?argc#1:wybe.int, argv#0:wybe.int, ?argv#1:wybe.int, exit_code#0:wybe.int, ?exit_code#1:wybe.int, io#0:wybe.phantom, ?io#3:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
 MultiSpeczDepInfo: [(4,(drone.loop<0>,fromList [NonAliasedParamCond 0 []]))]
    drone.drone_init<0>(?tmp$0#0:drone.drone_info) #0 @drone:57:6
    foreign c read_char(?ch#0:wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:127:37
    foreign lpvm cast(-1:wybe.int, ?tmp$1#0:wybe.char) @wybe:137:24
    foreign llvm icmp_ne(ch#0:wybe.char, ~tmp$1#0:wybe.char, ?tmp$2#0:wybe.bool) @wybe:108:38
    case ~tmp$2#0:wybe.bool of
    0:
        foreign llvm move(~argc#0:wybe.int, ?argc#1:wybe.int)
        foreign llvm move(~argv#0:wybe.int, ?argv#1:wybe.int)
        foreign llvm move(~exit_code#0:wybe.int, ?exit_code#1:wybe.int)
        foreign c malloc_count(?tmp$10#0:wybe.int, ~io#1:wybe.phantom, ?tmp$11#0:wybe.phantom) @wybe:139:44
        foreign c print_string("** malloc count: ":wybe.string, ~tmp$11#0:wybe.phantom, ?tmp$12#0:wybe.phantom) @wybe:129:39
        foreign c print_int(~tmp$10#0:wybe.int, ~tmp$12#0:wybe.phantom, ?tmp$13#0:wybe.phantom) @wybe:117:36
        foreign c putchar('\n':wybe.char, ~tmp$13#0:wybe.phantom, ?io#3:wybe.phantom) @wybe:115:26

    1:
        drone.loop<0>[04d1467a4d](~tmp$0#0:drone.drone_info, ~ch#0:wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #4 @drone:60:6
        foreign llvm move(~argc#0:wybe.int, ?argc#1:wybe.int)
        foreign llvm move(~argv#0:wybe.int, ?argv#1:wybe.int)
        foreign llvm move(~exit_code#0:wybe.int, ?exit_code#1:wybe.int)
        foreign c malloc_count(?tmp$10#0:wybe.int, ~io#2:wybe.phantom, ?tmp$11#0:wybe.phantom) @wybe:139:44
        foreign c print_string("** malloc count: ":wybe.string, ~tmp$11#0:wybe.phantom, ?tmp$12#0:wybe.phantom) @wybe:129:39
        foreign c print_int(~tmp$10#0:wybe.int, ~tmp$12#0:wybe.phantom, ?tmp$13#0:wybe.phantom) @wybe:117:36
        foreign c putchar('\n':wybe.char, ~tmp$13#0:wybe.phantom, ?io#3:wybe.phantom) @wybe:115:26



do_action > (2 calls)
0: do_action(d#0:drone.drone_info, ?d#2:drone.drone_info, action#0:wybe.char, ?success#2:wybe.bool):
 AliasPairs: [(d#0,d#2)]
 InterestingCallProperties: [InterestingUnaliased 0]
 MultiSpeczDepInfo: [(5,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(10,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(15,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(20,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(25,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(30,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(33,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 [0]]))]
    foreign llvm icmp_eq(action#0:wybe.char, 'n':wybe.char, ?tmp$21#0:wybe.bool) @wybe:107:38
    case ~tmp$21#0:wybe.bool of
    0:
        foreign llvm icmp_eq(action#0:wybe.char, 's':wybe.char, ?tmp$20#0:wybe.bool) @wybe:107:38
        case ~tmp$20#0:wybe.bool of
        0:
            foreign llvm icmp_eq(action#0:wybe.char, 'w':wybe.char, ?tmp$19#0:wybe.bool) @wybe:107:38
            case ~tmp$19#0:wybe.bool of
            0:
                foreign llvm icmp_eq(action#0:wybe.char, 'e':wybe.char, ?tmp$18#0:wybe.bool) @wybe:107:38
                case ~tmp$18#0:wybe.bool of
                0:
                    foreign llvm icmp_eq(action#0:wybe.char, 'u':wybe.char, ?tmp$17#0:wybe.bool) @wybe:107:38
                    case ~tmp$17#0:wybe.bool of
                    0:
                        foreign llvm icmp_eq(~action#0:wybe.char, 'd':wybe.char, ?tmp$16#0:wybe.bool) @wybe:107:38
                        case ~tmp$16#0:wybe.bool of
                        0:
                            foreign llvm move(0:wybe.bool, ?success#2:wybe.bool) @drone:33:9
                            drone.gen$2<0>(_:wybe.char, ~d#0:drone.drone_info, 0:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #33

                        1:
                            foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$12#0:wybe.int)
                            foreign llvm sub(~tmp$12#0:wybe.int, 1:wybe.int, ?tmp$11#0:wybe.int) @wybe:23:34
                            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$11#0:wybe.int)
                            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #30
                            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                    1:
                        foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.int)
                        foreign llvm add(~tmp$10#0:wybe.int, 1:wybe.int, ?tmp$9#0:wybe.int) @wybe:20:34
                        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$9#0:wybe.int)
                        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #25
                        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                1:
                    foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$8#0:wybe.int)
                    foreign llvm add(~tmp$8#0:wybe.int, 1:wybe.int, ?tmp$7#0:wybe.int) @wybe:20:34
                    foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$7#0:wybe.int)
                    drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #20
                    foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


            1:
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$6#0:wybe.int)
                foreign llvm sub(~tmp$6#0:wybe.int, 1:wybe.int, ?tmp$5#0:wybe.int) @wybe:23:34
                foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$5#0:wybe.int)
                drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #15
                foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


        1:
            foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$4#0:wybe.int)
            foreign llvm add(~tmp$4#0:wybe.int, 1:wybe.int, ?tmp$3#0:wybe.int) @wybe:20:34
            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$3#0:wybe.int)
            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #10
            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


    1:
        foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$2#0:wybe.int)
        foreign llvm sub(~tmp$2#0:wybe.int, 1:wybe.int, ?tmp$1#0:wybe.int) @wybe:23:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$1#0:wybe.int)
        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #5
        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)



drone_init > (3 calls)
0: drone_init(?$#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm alloc(32:wybe.int, ?tmp$5#0:drone.drone_info)
    foreign lpvm mutate(~tmp$5#0:drone.drone_info, ?tmp$6#0:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$6#0:drone.drone_info, ?tmp$7#0:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$7#0:drone.drone_info, ?tmp$8#0:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$8#0:drone.drone_info, ?$#0:drone.drone_info, 24:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)


gen$1 > {inline} (2 calls)
0: gen$1(argc#0:wybe.int, argv#0:wybe.int, [ch#0:wybe.char], [d#0:drone.drone_info], exit_code#0:wybe.int, io#0:wybe.phantom, [tmp$0#0:drone.drone_info], [?argc#0:wybe.int], [?argv#0:wybe.int], [?exit_code#0:wybe.int], ?io#3:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c malloc_count(?mc#0:wybe.int, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:139:44
    foreign c print_string("** malloc count: ":wybe.string, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) @wybe:129:39
    foreign c print_int(~mc#0:wybe.int, ~#io#2:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:117:36
    foreign c putchar('\n':wybe.char, ~tmp$7#0:wybe.phantom, ?#io#3:wybe.phantom) @wybe:115:26


gen$2 > (7 calls)
0: gen$2([action#0:wybe.char], d#0:drone.drone_info, success#0:wybe.bool, [tmp$0#0:wybe.bool], ?d#1:drone.drone_info, [?success#0:wybe.bool]):
 AliasPairs: [(d#0,d#1)]
 InterestingCallProperties: [InterestingUnaliased 1]
    case success#0:wybe.bool of
    0:
        foreign llvm move(~d#0:drone.drone_info, ?d#1:drone.drone_info)

    1:
        foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$15#0:wybe.int)
        foreign llvm add(~tmp$15#0:wybe.int, 1:wybe.int, ?tmp$14#0:wybe.int) @wybe:20:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 24:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$14#0:wybe.int)



gen$3 > (5 calls)
0: gen$3([ch#0:wybe.char], d#0:drone.drone_info, io#0:wybe.phantom, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: [InterestingUnaliased 1]
 MultiSpeczDepInfo: [(3,(drone.loop<0>,fromList [NonAliasedParamCond 0 [1]]))]
    foreign c read_char(?ch#1:wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:127:37
    foreign lpvm cast(-1:wybe.int, ?tmp$1#0:wybe.char) @wybe:137:24
    foreign llvm icmp_ne(ch#1:wybe.char, ~tmp$1#0:wybe.char, ?tmp$2#0:wybe.bool) @wybe:108:38
    case ~tmp$2#0:wybe.bool of
    0:
        foreign llvm move(~io#1:wybe.phantom, ?io#2:wybe.phantom)

    1:
        drone.loop<0>(~d#0:drone.drone_info, ~ch#1:wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #3 @drone:53:10



loop > (2 calls)
0: loop(d#0:drone.drone_info, ch#0:wybe.char, io#0:wybe.phantom, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: [InterestingUnaliased 0]
 MultiSpeczDepInfo: [(4,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(6,(drone.do_action<0>,fromList [NonAliasedParamCond 0 [0]])),(10,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(11,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(12,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(13,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]]))]
    foreign llvm icmp_ne(ch#0:wybe.char, ' ':wybe.char, ?tmp$5#0:wybe.bool) @wybe:108:38
    case ~tmp$5#0:wybe.bool of
    0:
        drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #13

    1:
        foreign llvm icmp_ne(ch#0:wybe.char, '\n':wybe.char, ?tmp$6#0:wybe.bool) @wybe:108:38
        case ~tmp$6#0:wybe.bool of
        0:
            drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #12

        1:
            foreign llvm icmp_eq(ch#0:wybe.char, 'p':wybe.char, ?tmp$4#0:wybe.bool) @wybe:107:38
            case ~tmp$4#0:wybe.bool of
            0:
                drone.do_action<0>(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, ~ch#0:wybe.char, ?success#0:wybe.bool) #6 @drone:45:13
                foreign llvm icmp_eq(~success#0:wybe.bool, 0:wybe.bool, ?tmp$3#0:wybe.bool) @wybe:11:38
                case ~tmp$3#0:wybe.bool of
                0:
                    drone.gen$3<0>(_:wybe.char, ~d#1:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #11

                1:
                    foreign c print_string("invalid action!":wybe.string, ~#io#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:129:39
                    foreign c putchar('\n':wybe.char, ~tmp$17#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                    drone.gen$3<0>(_:wybe.char, ~d#1:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #10


            1:
                foreign c print_string("(":wybe.string, ~#io#0:wybe.phantom, ?tmp$15#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$16#0:wybe.int)
                foreign c print_int(~tmp$16#0:wybe.int, ~tmp$15#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$17#0:wybe.phantom, ?tmp$18#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$19#0:wybe.int)
                foreign c print_int(~tmp$19#0:wybe.int, ~tmp$18#0:wybe.phantom, ?tmp$20#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$20#0:wybe.phantom, ?tmp$21#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$22#0:wybe.int)
                foreign c print_int(~tmp$22#0:wybe.int, ~tmp$21#0:wybe.phantom, ?tmp$23#0:wybe.phantom) @wybe:117:36
                foreign c print_string(") #":wybe.string, ~tmp$23#0:wybe.phantom, ?tmp$24#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$25#0:wybe.int)
                foreign c print_int(~tmp$25#0:wybe.int, ~tmp$24#0:wybe.phantom, ?tmp$26#0:wybe.phantom) @wybe:117:36
                foreign c putchar('\n':wybe.char, ~tmp$26#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #4





print_info > {inline} (1 calls)
0: print_info(d#0:drone.drone_info, io#0:wybe.phantom, ?io#9:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_string("(":wybe.string, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$0#0:wybe.int)
    foreign c print_int(~tmp$0#0:wybe.int, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) @wybe:117:36
    foreign c print_string(", ":wybe.string, ~#io#2:wybe.phantom, ?#io#3:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.int)
    foreign c print_int(~tmp$1#0:wybe.int, ~#io#3:wybe.phantom, ?#io#4:wybe.phantom) @wybe:117:36
    foreign c print_string(", ":wybe.string, ~#io#4:wybe.phantom, ?#io#5:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$2#0:wybe.int)
    foreign c print_int(~tmp$2#0:wybe.int, ~#io#5:wybe.phantom, ?#io#6:wybe.phantom) @wybe:117:36
    foreign c print_string(") #":wybe.string, ~#io#6:wybe.phantom, ?#io#7:wybe.phantom) @wybe:129:39
    foreign lpvm access(~d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$3#0:wybe.int)
    foreign c print_int(~tmp$3#0:wybe.int, ~#io#7:wybe.phantom, ?#io#8:wybe.phantom) @wybe:117:36
    foreign c putchar('\n':wybe.char, ~#io#8:wybe.phantom, ?#io#9:wybe.phantom) @wybe:115:26

LLVM code       : None

--------------------------------------------------
 Module drone.drone_info
  public submods  : 
  public types    : 
  public resources: 
  public procs    : drone.drone_info./=<0>
                    drone.drone_info.=<0>
                    drone.drone_info.count<0>
                    drone.drone_info.count<1>
                    drone.drone_info.drone_info<0>
                    drone.drone_info.drone_info<1>
                    drone.drone_info.x<0>
                    drone.drone_info.x<1>
                    drone.drone_info.y<0>
                    drone.drone_info.y<1>
                    drone.drone_info.z<0>
                    drone.drone_info.z<1>
  imports         : use drone
                    use wybe
  types           : 
  resources       : 
  procs           : 

/= > public {inline} (0 calls)
0: /=($left#0:drone.drone_info, $right#0:drone.drone_info, ?$$#0:wybe.bool):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($left#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$3#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$4#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$5#0:wybe.int)
    foreign lpvm access(~$left#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$6#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$7#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$8#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$9#0:wybe.int)
    foreign lpvm access(~$right#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.int)
    foreign llvm icmp_eq(~tmp$3#0:wybe.int, ~tmp$7#0:wybe.int, ?tmp$11#0:wybe.bool) @wybe:36:36
    case ~tmp$11#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
        foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign llvm icmp_eq(~tmp$4#0:wybe.int, ~tmp$8#0:wybe.int, ?tmp$12#0:wybe.bool) @wybe:36:36
        case ~tmp$12#0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
            foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

        1:
            foreign llvm icmp_eq(~tmp$5#0:wybe.int, ~tmp$9#0:wybe.int, ?tmp$13#0:wybe.bool) @wybe:36:36
            case ~tmp$13#0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
                foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

            1:
                foreign llvm icmp_eq(~tmp$10#0:wybe.int, ~tmp$6#0:wybe.int, ?tmp$0#0:wybe.bool) @wybe:36:36
                foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)





= > public {inline} (1 calls)
0: =($left#0:drone.drone_info, $right#0:drone.drone_info, ?$$#0:wybe.bool):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($left#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$x#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$y#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$z#0:wybe.int)
    foreign lpvm access(~$left#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$count#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$x#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$y#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$z#0:wybe.int)
    foreign lpvm access(~$right#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$count#0:wybe.int)
    foreign llvm icmp_eq(~$left$x#0:wybe.int, ~$right$x#0:wybe.int, ?tmp$1#0:wybe.bool) @wybe:36:36
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign llvm icmp_eq(~$left$y#0:wybe.int, ~$right$y#0:wybe.int, ?tmp$2#0:wybe.bool) @wybe:36:36
        case ~tmp$2#0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

        1:
            foreign llvm icmp_eq(~$left$z#0:wybe.int, ~$right$z#0:wybe.int, ?tmp$3#0:wybe.bool) @wybe:36:36
            case ~tmp$3#0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

            1:
                foreign llvm icmp_eq(~$left$count#0:wybe.int, ~$right$count#0:wybe.int, ?$$#0:wybe.bool) @wybe:36:36





count > public {inline} (0 calls)
0: count($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
count > public {inline} (0 calls)
1: count($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 24:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


drone_info > public {inline} (0 calls)
0: drone_info(x#0:wybe.int, y#0:wybe.int, z#0:wybe.int, count#0:wybe.int, ?$#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm alloc(32:wybe.int, ?$rec#0:!drone.drone_info)
    foreign lpvm mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~x#0:wybe.int)
    foreign lpvm mutate(~%$rec#1:drone.drone_info, ?%$rec#2:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~y#0:wybe.int)
    foreign lpvm mutate(~%$rec#2:drone.drone_info, ?%$rec#3:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~z#0:wybe.int)
    foreign lpvm mutate(~%$rec#3:drone.drone_info, ?%$#0:drone.drone_info, 24:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~count#0:wybe.int)
drone_info > public {inline} (14 calls)
1: drone_info(?x#0:wybe.int, ?y#0:wybe.int, ?z#0:wybe.int, ?count#0:wybe.int, $#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?x#0:wybe.int)
    foreign lpvm access($#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?y#0:wybe.int)
    foreign lpvm access($#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?z#0:wybe.int)
    foreign lpvm access(~$#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?count#0:wybe.int)


x > public {inline} (0 calls)
0: x($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
x > public {inline} (0 calls)
1: x($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


y > public {inline} (0 calls)
0: y($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
y > public {inline} (0 calls)
1: y($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


z > public {inline} (0 calls)
0: z($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
z > public {inline} (0 calls)
1: z($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)

LLVM code       : None

======================================================================
AFTER EVERYTHING:
 Module 
  public submods  : 
  public types    : 
  public resources: 
  public procs    : 
  imports         : from drone use 
                    use wybe
  types           : 
  resources       : 
  procs           : 

*main* > {inline} (0 calls)
0: (argc#0:wybe.int, argv#0:wybe.int, ?exit_code#1:wybe.int, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c gc_init(0:wybe.phantom, ?io#1:wybe.phantom)
    drone.<0>(~#argc#0:wybe.int, ?#argc#1:wybe.int, ~#argv#0:wybe.int, ?#argv#1:wybe.int, 0:wybe.int, ?#exit_code#1:wybe.int, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #0

  LLVM code       :

; ModuleID = ''


 


declare external fastcc  {i64, i64, i64} @"drone.<0>"(i64, i64, i64)    


declare external ccc  void @gc_init()    


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external ccc  i32 @main(i64  %"argc#0", i64  %"argv#0")    {
entry:
  tail call ccc  void  @gc_init()  
  %1 = tail call fastcc  {i64, i64, i64}  @"drone.<0>"(i64  %"argc#0", i64  %"argv#0", i64  0)  
  %2 = extractvalue {i64, i64, i64} %1, 0 
  %3 = extractvalue {i64, i64, i64} %1, 1 
  %4 = extractvalue {i64, i64, i64} %1, 2 
  ret i64 %4 
}
--------------------------------------------------
 Module drone
  public submods  : 
  public types    : 
  public resources: 
  public procs    : drone.<0>
  imports         : use drone.drone_info
                    use wybe
  types           : drone_info/ is address { drone_info(x:int, y:int, z:int, count:int) @drone:2:23  }  @drone:2:1
  resources       : 
  submodules      : drone.drone_info
  procs           : 

*main* > public (0 calls)
0: (argc#0:wybe.int, ?argc#1:wybe.int, argv#0:wybe.int, ?argv#1:wybe.int, exit_code#0:wybe.int, ?exit_code#1:wybe.int, io#0:wybe.phantom, ?io#3:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
 MultiSpeczDepInfo: [(4,(drone.loop<0>,fromList [NonAliasedParamCond 0 []]))]
    drone.drone_init<0>(?tmp$0#0:drone.drone_info) #0 @drone:57:6
    foreign c read_char(?ch#0:wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:127:37
    foreign lpvm cast(-1:wybe.int, ?tmp$1#0:wybe.char) @wybe:137:24
    foreign llvm icmp_ne(ch#0:wybe.char, ~tmp$1#0:wybe.char, ?tmp$2#0:wybe.bool) @wybe:108:38
    case ~tmp$2#0:wybe.bool of
    0:
        foreign llvm move(~argc#0:wybe.int, ?argc#1:wybe.int)
        foreign llvm move(~argv#0:wybe.int, ?argv#1:wybe.int)
        foreign llvm move(~exit_code#0:wybe.int, ?exit_code#1:wybe.int)
        foreign c malloc_count(?tmp$10#0:wybe.int, ~io#1:wybe.phantom, ?tmp$11#0:wybe.phantom) @wybe:139:44
        foreign c print_string("** malloc count: ":wybe.string, ~tmp$11#0:wybe.phantom, ?tmp$12#0:wybe.phantom) @wybe:129:39
        foreign c print_int(~tmp$10#0:wybe.int, ~tmp$12#0:wybe.phantom, ?tmp$13#0:wybe.phantom) @wybe:117:36
        foreign c putchar('\n':wybe.char, ~tmp$13#0:wybe.phantom, ?io#3:wybe.phantom) @wybe:115:26

    1:
        drone.loop<0>[04d1467a4d](~tmp$0#0:drone.drone_info, ~ch#0:wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #4 @drone:60:6
        foreign llvm move(~argc#0:wybe.int, ?argc#1:wybe.int)
        foreign llvm move(~argv#0:wybe.int, ?argv#1:wybe.int)
        foreign llvm move(~exit_code#0:wybe.int, ?exit_code#1:wybe.int)
        foreign c malloc_count(?tmp$10#0:wybe.int, ~io#2:wybe.phantom, ?tmp$11#0:wybe.phantom) @wybe:139:44
        foreign c print_string("** malloc count: ":wybe.string, ~tmp$11#0:wybe.phantom, ?tmp$12#0:wybe.phantom) @wybe:129:39
        foreign c print_int(~tmp$10#0:wybe.int, ~tmp$12#0:wybe.phantom, ?tmp$13#0:wybe.phantom) @wybe:117:36
        foreign c putchar('\n':wybe.char, ~tmp$13#0:wybe.phantom, ?io#3:wybe.phantom) @wybe:115:26



do_action > (2 calls)
0: do_action(d#0:drone.drone_info, ?d#2:drone.drone_info, action#0:wybe.char, ?success#2:wybe.bool):
 AliasPairs: [(d#0,d#2)]
 InterestingCallProperties: [InterestingUnaliased 0]
 MultiSpeczDepInfo: [(5,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(10,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(15,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(20,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(25,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(30,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 []])),(33,(drone.gen$2<0>,fromList [NonAliasedParamCond 1 [0]]))]
    foreign llvm icmp_eq(action#0:wybe.char, 'n':wybe.char, ?tmp$21#0:wybe.bool) @wybe:107:38
    case ~tmp$21#0:wybe.bool of
    0:
        foreign llvm icmp_eq(action#0:wybe.char, 's':wybe.char, ?tmp$20#0:wybe.bool) @wybe:107:38
        case ~tmp$20#0:wybe.bool of
        0:
            foreign llvm icmp_eq(action#0:wybe.char, 'w':wybe.char, ?tmp$19#0:wybe.bool) @wybe:107:38
            case ~tmp$19#0:wybe.bool of
            0:
                foreign llvm icmp_eq(action#0:wybe.char, 'e':wybe.char, ?tmp$18#0:wybe.bool) @wybe:107:38
                case ~tmp$18#0:wybe.bool of
                0:
                    foreign llvm icmp_eq(action#0:wybe.char, 'u':wybe.char, ?tmp$17#0:wybe.bool) @wybe:107:38
                    case ~tmp$17#0:wybe.bool of
                    0:
                        foreign llvm icmp_eq(~action#0:wybe.char, 'd':wybe.char, ?tmp$16#0:wybe.bool) @wybe:107:38
                        case ~tmp$16#0:wybe.bool of
                        0:
                            foreign llvm move(0:wybe.bool, ?success#2:wybe.bool) @drone:33:9
                            drone.gen$2<0>(_:wybe.char, ~d#0:drone.drone_info, 0:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #33

                        1:
                            foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$12#0:wybe.int)
                            foreign llvm sub(~tmp$12#0:wybe.int, 1:wybe.int, ?tmp$11#0:wybe.int) @wybe:23:34
                            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$11#0:wybe.int)
                            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #30
                            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                    1:
                        foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.int)
                        foreign llvm add(~tmp$10#0:wybe.int, 1:wybe.int, ?tmp$9#0:wybe.int) @wybe:20:34
                        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$9#0:wybe.int)
                        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #25
                        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                1:
                    foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$8#0:wybe.int)
                    foreign llvm add(~tmp$8#0:wybe.int, 1:wybe.int, ?tmp$7#0:wybe.int) @wybe:20:34
                    foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$7#0:wybe.int)
                    drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #20
                    foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


            1:
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$6#0:wybe.int)
                foreign llvm sub(~tmp$6#0:wybe.int, 1:wybe.int, ?tmp$5#0:wybe.int) @wybe:23:34
                foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$5#0:wybe.int)
                drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #15
                foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


        1:
            foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$4#0:wybe.int)
            foreign llvm add(~tmp$4#0:wybe.int, 1:wybe.int, ?tmp$3#0:wybe.int) @wybe:20:34
            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$3#0:wybe.int)
            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #10
            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


    1:
        foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$2#0:wybe.int)
        foreign llvm sub(~tmp$2#0:wybe.int, 1:wybe.int, ?tmp$1#0:wybe.int) @wybe:23:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$1#0:wybe.int)
        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #5
        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)

 [04d1467a4d] [NonAliasedParam 0] :
    foreign llvm icmp_eq(action#0:wybe.char, 'n':wybe.char, ?tmp$21#0:wybe.bool) @wybe:107:38
    case ~tmp$21#0:wybe.bool of
    0:
        foreign llvm icmp_eq(action#0:wybe.char, 's':wybe.char, ?tmp$20#0:wybe.bool) @wybe:107:38
        case ~tmp$20#0:wybe.bool of
        0:
            foreign llvm icmp_eq(action#0:wybe.char, 'w':wybe.char, ?tmp$19#0:wybe.bool) @wybe:107:38
            case ~tmp$19#0:wybe.bool of
            0:
                foreign llvm icmp_eq(action#0:wybe.char, 'e':wybe.char, ?tmp$18#0:wybe.bool) @wybe:107:38
                case ~tmp$18#0:wybe.bool of
                0:
                    foreign llvm icmp_eq(action#0:wybe.char, 'u':wybe.char, ?tmp$17#0:wybe.bool) @wybe:107:38
                    case ~tmp$17#0:wybe.bool of
                    0:
                        foreign llvm icmp_eq(~action#0:wybe.char, 'd':wybe.char, ?tmp$16#0:wybe.bool) @wybe:107:38
                        case ~tmp$16#0:wybe.bool of
                        0:
                            foreign llvm move(0:wybe.bool, ?success#2:wybe.bool) @drone:33:9
                            drone.gen$2<0>[145401e434](_:wybe.char, ~d#0:drone.drone_info, 0:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #33

                        1:
                            foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$12#0:wybe.int)
                            foreign llvm sub(~tmp$12#0:wybe.int, 1:wybe.int, ?tmp$11#0:wybe.int) @wybe:23:34
                            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$11#0:wybe.int)
                            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #30
                            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                    1:
                        foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.int)
                        foreign llvm add(~tmp$10#0:wybe.int, 1:wybe.int, ?tmp$9#0:wybe.int) @wybe:20:34
                        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$9#0:wybe.int)
                        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #25
                        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


                1:
                    foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$8#0:wybe.int)
                    foreign llvm add(~tmp$8#0:wybe.int, 1:wybe.int, ?tmp$7#0:wybe.int) @wybe:20:34
                    foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$7#0:wybe.int)
                    drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #20
                    foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


            1:
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$6#0:wybe.int)
                foreign llvm sub(~tmp$6#0:wybe.int, 1:wybe.int, ?tmp$5#0:wybe.int) @wybe:23:34
                foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$5#0:wybe.int)
                drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #15
                foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


        1:
            foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$4#0:wybe.int)
            foreign llvm add(~tmp$4#0:wybe.int, 1:wybe.int, ?tmp$3#0:wybe.int) @wybe:20:34
            foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$3#0:wybe.int)
            drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #10
            foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)


    1:
        foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$2#0:wybe.int)
        foreign llvm sub(~tmp$2#0:wybe.int, 1:wybe.int, ?tmp$1#0:wybe.int) @wybe:23:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$1#0:wybe.int)
        drone.gen$2<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, 1:wybe.bool, _:wybe.bool, ?d#2:drone.drone_info, ?_:wybe.bool) #5
        foreign llvm move(1:wybe.bool, ?success#2:wybe.bool)



drone_init > (3 calls)
0: drone_init(?$#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm alloc(32:wybe.int, ?tmp$5#0:drone.drone_info)
    foreign lpvm mutate(~tmp$5#0:drone.drone_info, ?tmp$6#0:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$6#0:drone.drone_info, ?tmp$7#0:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$7#0:drone.drone_info, ?tmp$8#0:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)
    foreign lpvm mutate(~tmp$8#0:drone.drone_info, ?$#0:drone.drone_info, 24:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, 0:wybe.int)


gen$1 > {inline} (2 calls)
0: gen$1(argc#0:wybe.int, argv#0:wybe.int, [ch#0:wybe.char], [d#0:drone.drone_info], exit_code#0:wybe.int, io#0:wybe.phantom, [tmp$0#0:drone.drone_info], [?argc#0:wybe.int], [?argv#0:wybe.int], [?exit_code#0:wybe.int], ?io#3:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c malloc_count(?mc#0:wybe.int, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:139:44
    foreign c print_string("** malloc count: ":wybe.string, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) @wybe:129:39
    foreign c print_int(~mc#0:wybe.int, ~#io#2:wybe.phantom, ?tmp$7#0:wybe.phantom) @wybe:117:36
    foreign c putchar('\n':wybe.char, ~tmp$7#0:wybe.phantom, ?#io#3:wybe.phantom) @wybe:115:26


gen$2 > (7 calls)
0: gen$2([action#0:wybe.char], d#0:drone.drone_info, success#0:wybe.bool, [tmp$0#0:wybe.bool], ?d#1:drone.drone_info, [?success#0:wybe.bool]):
 AliasPairs: [(d#0,d#1)]
 InterestingCallProperties: [InterestingUnaliased 1]
    case success#0:wybe.bool of
    0:
        foreign llvm move(~d#0:drone.drone_info, ?d#1:drone.drone_info)

    1:
        foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$15#0:wybe.int)
        foreign llvm add(~tmp$15#0:wybe.int, 1:wybe.int, ?tmp$14#0:wybe.int) @wybe:20:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 24:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$14#0:wybe.int)

 [145401e434] [NonAliasedParam 1] :
    case success#0:wybe.bool of
    0:
        foreign llvm move(~d#0:drone.drone_info, ?d#1:drone.drone_info)

    1:
        foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$15#0:wybe.int)
        foreign llvm add(~tmp$15#0:wybe.int, 1:wybe.int, ?tmp$14#0:wybe.int) @wybe:20:34
        foreign lpvm {noalias} mutate(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, 24:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~tmp$14#0:wybe.int)



gen$3 > (5 calls)
0: gen$3([ch#0:wybe.char], d#0:drone.drone_info, io#0:wybe.phantom, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: [InterestingUnaliased 1]
 MultiSpeczDepInfo: [(3,(drone.loop<0>,fromList [NonAliasedParamCond 0 [1]]))]
    foreign c read_char(?ch#1:wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:127:37
    foreign lpvm cast(-1:wybe.int, ?tmp$1#0:wybe.char) @wybe:137:24
    foreign llvm icmp_ne(ch#1:wybe.char, ~tmp$1#0:wybe.char, ?tmp$2#0:wybe.bool) @wybe:108:38
    case ~tmp$2#0:wybe.bool of
    0:
        foreign llvm move(~io#1:wybe.phantom, ?io#2:wybe.phantom)

    1:
        drone.loop<0>(~d#0:drone.drone_info, ~ch#1:wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #3 @drone:53:10

 [145401e434] [NonAliasedParam 1] :
    foreign c read_char(?ch#1:wybe.char, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:127:37
    foreign lpvm cast(-1:wybe.int, ?tmp$1#0:wybe.char) @wybe:137:24
    foreign llvm icmp_ne(ch#1:wybe.char, ~tmp$1#0:wybe.char, ?tmp$2#0:wybe.bool) @wybe:108:38
    case ~tmp$2#0:wybe.bool of
    0:
        foreign llvm move(~io#1:wybe.phantom, ?io#2:wybe.phantom)

    1:
        drone.loop<0>[04d1467a4d](~d#0:drone.drone_info, ~ch#1:wybe.char, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) #3 @drone:53:10



loop > (2 calls)
0: loop(d#0:drone.drone_info, ch#0:wybe.char, io#0:wybe.phantom, ?io#2:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: [InterestingUnaliased 0]
 MultiSpeczDepInfo: [(4,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(6,(drone.do_action<0>,fromList [NonAliasedParamCond 0 [0]])),(10,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(11,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(12,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]])),(13,(drone.gen$3<0>,fromList [NonAliasedParamCond 1 [0]]))]
    foreign llvm icmp_ne(ch#0:wybe.char, ' ':wybe.char, ?tmp$5#0:wybe.bool) @wybe:108:38
    case ~tmp$5#0:wybe.bool of
    0:
        drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #13

    1:
        foreign llvm icmp_ne(ch#0:wybe.char, '\n':wybe.char, ?tmp$6#0:wybe.bool) @wybe:108:38
        case ~tmp$6#0:wybe.bool of
        0:
            drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #12

        1:
            foreign llvm icmp_eq(ch#0:wybe.char, 'p':wybe.char, ?tmp$4#0:wybe.bool) @wybe:107:38
            case ~tmp$4#0:wybe.bool of
            0:
                drone.do_action<0>(~%d#0:drone.drone_info, ?%d#1:drone.drone_info, ~ch#0:wybe.char, ?success#0:wybe.bool) #6 @drone:45:13
                foreign llvm icmp_eq(~success#0:wybe.bool, 0:wybe.bool, ?tmp$3#0:wybe.bool) @wybe:11:38
                case ~tmp$3#0:wybe.bool of
                0:
                    drone.gen$3<0>(_:wybe.char, ~d#1:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #11

                1:
                    foreign c print_string("invalid action!":wybe.string, ~#io#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:129:39
                    foreign c putchar('\n':wybe.char, ~tmp$17#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                    drone.gen$3<0>(_:wybe.char, ~d#1:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #10


            1:
                foreign c print_string("(":wybe.string, ~#io#0:wybe.phantom, ?tmp$15#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$16#0:wybe.int)
                foreign c print_int(~tmp$16#0:wybe.int, ~tmp$15#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$17#0:wybe.phantom, ?tmp$18#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$19#0:wybe.int)
                foreign c print_int(~tmp$19#0:wybe.int, ~tmp$18#0:wybe.phantom, ?tmp$20#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$20#0:wybe.phantom, ?tmp$21#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$22#0:wybe.int)
                foreign c print_int(~tmp$22#0:wybe.int, ~tmp$21#0:wybe.phantom, ?tmp$23#0:wybe.phantom) @wybe:117:36
                foreign c print_string(") #":wybe.string, ~tmp$23#0:wybe.phantom, ?tmp$24#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$25#0:wybe.int)
                foreign c print_int(~tmp$25#0:wybe.int, ~tmp$24#0:wybe.phantom, ?tmp$26#0:wybe.phantom) @wybe:117:36
                foreign c putchar('\n':wybe.char, ~tmp$26#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                drone.gen$3<0>(_:wybe.char, ~d#0:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #4



 [04d1467a4d] [NonAliasedParam 0] :
    foreign llvm icmp_ne(ch#0:wybe.char, ' ':wybe.char, ?tmp$5#0:wybe.bool) @wybe:108:38
    case ~tmp$5#0:wybe.bool of
    0:
        drone.gen$3<0>[145401e434](_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #13

    1:
        foreign llvm icmp_ne(ch#0:wybe.char, '\n':wybe.char, ?tmp$6#0:wybe.bool) @wybe:108:38
        case ~tmp$6#0:wybe.bool of
        0:
            drone.gen$3<0>[145401e434](_:wybe.char, ~d#0:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #12

        1:
            foreign llvm icmp_eq(ch#0:wybe.char, 'p':wybe.char, ?tmp$4#0:wybe.bool) @wybe:107:38
            case ~tmp$4#0:wybe.bool of
            0:
                drone.do_action<0>[04d1467a4d](~%d#0:drone.drone_info, ?%d#1:drone.drone_info, ~ch#0:wybe.char, ?success#0:wybe.bool) #6 @drone:45:13
                foreign llvm icmp_eq(~success#0:wybe.bool, 0:wybe.bool, ?tmp$3#0:wybe.bool) @wybe:11:38
                case ~tmp$3#0:wybe.bool of
                0:
                    drone.gen$3<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, ~io#0:wybe.phantom, ?io#2:wybe.phantom) #11

                1:
                    foreign c print_string("invalid action!":wybe.string, ~#io#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:129:39
                    foreign c putchar('\n':wybe.char, ~tmp$17#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                    drone.gen$3<0>[145401e434](_:wybe.char, ~d#1:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #10


            1:
                foreign c print_string("(":wybe.string, ~#io#0:wybe.phantom, ?tmp$15#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$16#0:wybe.int)
                foreign c print_int(~tmp$16#0:wybe.int, ~tmp$15#0:wybe.phantom, ?tmp$17#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$17#0:wybe.phantom, ?tmp$18#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$19#0:wybe.int)
                foreign c print_int(~tmp$19#0:wybe.int, ~tmp$18#0:wybe.phantom, ?tmp$20#0:wybe.phantom) @wybe:117:36
                foreign c print_string(", ":wybe.string, ~tmp$20#0:wybe.phantom, ?tmp$21#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$22#0:wybe.int)
                foreign c print_int(~tmp$22#0:wybe.int, ~tmp$21#0:wybe.phantom, ?tmp$23#0:wybe.phantom) @wybe:117:36
                foreign c print_string(") #":wybe.string, ~tmp$23#0:wybe.phantom, ?tmp$24#0:wybe.phantom) @wybe:129:39
                foreign lpvm access(d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$25#0:wybe.int)
                foreign c print_int(~tmp$25#0:wybe.int, ~tmp$24#0:wybe.phantom, ?tmp$26#0:wybe.phantom) @wybe:117:36
                foreign c putchar('\n':wybe.char, ~tmp$26#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:115:26
                drone.gen$3<0>[145401e434](_:wybe.char, ~d#0:drone.drone_info, ~io#1:wybe.phantom, ?io#2:wybe.phantom) #4





print_info > {inline} (1 calls)
0: print_info(d#0:drone.drone_info, io#0:wybe.phantom, ?io#9:wybe.phantom):
 AliasPairs: []
 InterestingCallProperties: []
    foreign c print_string("(":wybe.string, ~#io#0:wybe.phantom, ?#io#1:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$0#0:wybe.int)
    foreign c print_int(~tmp$0#0:wybe.int, ~#io#1:wybe.phantom, ?#io#2:wybe.phantom) @wybe:117:36
    foreign c print_string(", ":wybe.string, ~#io#2:wybe.phantom, ?#io#3:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$1#0:wybe.int)
    foreign c print_int(~tmp$1#0:wybe.int, ~#io#3:wybe.phantom, ?#io#4:wybe.phantom) @wybe:117:36
    foreign c print_string(", ":wybe.string, ~#io#4:wybe.phantom, ?#io#5:wybe.phantom) @wybe:129:39
    foreign lpvm access(d#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$2#0:wybe.int)
    foreign c print_int(~tmp$2#0:wybe.int, ~#io#5:wybe.phantom, ?#io#6:wybe.phantom) @wybe:117:36
    foreign c print_string(") #":wybe.string, ~#io#6:wybe.phantom, ?#io#7:wybe.phantom) @wybe:129:39
    foreign lpvm access(~d#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$3#0:wybe.int)
    foreign c print_int(~tmp$3#0:wybe.int, ~#io#7:wybe.phantom, ?#io#8:wybe.phantom) @wybe:117:36
    foreign c putchar('\n':wybe.char, ~#io#8:wybe.phantom, ?#io#9:wybe.phantom) @wybe:115:26

  LLVM code       :

; ModuleID = 'drone'


 


declare external ccc  void @putchar(i8)    


declare external ccc  void @print_int(i64)    


declare external ccc  void @print_string(i64)    


declare external ccc  i64 @malloc_count()    


declare external ccc  i8 @read_char()    


@drone.9 =    constant [18 x i8] c"** malloc count: \00"


@drone.4 =    constant [18 x i8] c"** malloc count: \00"


@drone.168 =    constant [18 x i8] c"** malloc count: \00"


@drone.222 =    constant [16 x i8] c"invalid action!\00"


@drone.213 =    constant [4 x i8] c") #\00"


@drone.207 =    constant [3 x i8] c", \00"


@drone.201 =    constant [3 x i8] c", \00"


@drone.196 =    constant [2 x i8] c"(\00"


@drone.250 =    constant [16 x i8] c"invalid action!\00"


@drone.241 =    constant [4 x i8] c") #\00"


@drone.235 =    constant [3 x i8] c", \00"


@drone.229 =    constant [3 x i8] c", \00"


@drone.224 =    constant [2 x i8] c"(\00"


@drone.269 =    constant [4 x i8] c") #\00"


@drone.263 =    constant [3 x i8] c", \00"


@drone.257 =    constant [3 x i8] c", \00"


@drone.252 =    constant [2 x i8] c"(\00"


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  {i64, i64, i64} @"drone.<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  %"1$tmp$0#0" = tail call fastcc  i64  @"drone.drone_init<0>"()  
  %"1$ch#0" = tail call ccc  i8  @read_char()  
  %1 = alloca i64 
  store  i64 -1, i64* %1 
  %2 = load  i64, i64* %1 
  %3 = trunc i64 %2 to i8  
  %"1$tmp$2#0" = icmp ne i8 %"1$ch#0", %3 
  br i1 %"1$tmp$2#0", label %if.then, label %if.else 
if.then:
  tail call fastcc  void  @"drone.loop<0>[04d1467a4d]"(i64  %"1$tmp$0#0", i8  %"1$ch#0")  
  %"2$tmp$10#0" = tail call ccc  i64  @malloc_count()  
  %5 = ptrtoint i8* getelementptr inbounds ([18 x i8], [18 x i8]* @drone.4, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %5)  
  tail call ccc  void  @print_int(i64  %"2$tmp$10#0")  
  tail call ccc  void  @putchar(i8  10)  
  %6 = insertvalue {i64, i64, i64} undef, i64 %"argc#0", 0 
  %7 = insertvalue {i64, i64, i64} %6, i64 %"argv#0", 1 
  %8 = insertvalue {i64, i64, i64} %7, i64 %"exit_code#0", 2 
  ret {i64, i64, i64} %8 
if.else:
  %"3$tmp$10#0" = tail call ccc  i64  @malloc_count()  
  %10 = ptrtoint i8* getelementptr inbounds ([18 x i8], [18 x i8]* @drone.9, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %10)  
  tail call ccc  void  @print_int(i64  %"3$tmp$10#0")  
  tail call ccc  void  @putchar(i8  10)  
  %11 = insertvalue {i64, i64, i64} undef, i64 %"argc#0", 0 
  %12 = insertvalue {i64, i64, i64} %11, i64 %"argv#0", 1 
  %13 = insertvalue {i64, i64, i64} %12, i64 %"exit_code#0", 2 
  ret {i64, i64, i64} %13 
}


define external fastcc  {i64, i1} @"drone.do_action<0>"(i64  %"d#0", i8  %"action#0")    {
entry:
  %"1$tmp$21#0" = icmp eq i8 %"action#0", 110 
  br i1 %"1$tmp$21#0", label %if.then, label %if.else 
if.then:
  %14 = add   i64 %"d#0", 8 
  %15 = inttoptr i64 %14 to i64* 
  %16 = getelementptr  i64, i64* %15, i64 0 
  %17 = load  i64, i64* %16 
  %"2$tmp$1#0" = sub   i64 %17, 1 
  %18 = trunc i64 32 to i32  
  %19 = tail call ccc  i8*  @wybe_malloc(i32  %18)  
  %20 = ptrtoint i8* %19 to i64 
  %21 = inttoptr i64 %20 to i8* 
  %22 = inttoptr i64 %"d#0" to i8* 
  %23 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %21, i8*  %22, i32  %23, i32  8, i1  0)  
  %24 = add   i64 %20, 8 
  %25 = inttoptr i64 %24 to i64* 
  %26 = getelementptr  i64, i64* %25, i64 0 
  store  i64 %"2$tmp$1#0", i64* %26 
  %"2$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %20, i1  1)  
  %27 = insertvalue {i64, i1} undef, i64 %"2$d#2", 0 
  %28 = insertvalue {i64, i1} %27, i1 1, 1 
  ret {i64, i1} %28 
if.else:
  %"3$tmp$20#0" = icmp eq i8 %"action#0", 115 
  br i1 %"3$tmp$20#0", label %if.then1, label %if.else1 
if.then1:
  %29 = add   i64 %"d#0", 8 
  %30 = inttoptr i64 %29 to i64* 
  %31 = getelementptr  i64, i64* %30, i64 0 
  %32 = load  i64, i64* %31 
  %"4$tmp$3#0" = add   i64 %32, 1 
  %33 = trunc i64 32 to i32  
  %34 = tail call ccc  i8*  @wybe_malloc(i32  %33)  
  %35 = ptrtoint i8* %34 to i64 
  %36 = inttoptr i64 %35 to i8* 
  %37 = inttoptr i64 %"d#0" to i8* 
  %38 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %36, i8*  %37, i32  %38, i32  8, i1  0)  
  %39 = add   i64 %35, 8 
  %40 = inttoptr i64 %39 to i64* 
  %41 = getelementptr  i64, i64* %40, i64 0 
  store  i64 %"4$tmp$3#0", i64* %41 
  %"4$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %35, i1  1)  
  %42 = insertvalue {i64, i1} undef, i64 %"4$d#2", 0 
  %43 = insertvalue {i64, i1} %42, i1 1, 1 
  ret {i64, i1} %43 
if.else1:
  %"5$tmp$19#0" = icmp eq i8 %"action#0", 119 
  br i1 %"5$tmp$19#0", label %if.then2, label %if.else2 
if.then2:
  %44 = inttoptr i64 %"d#0" to i64* 
  %45 = getelementptr  i64, i64* %44, i64 0 
  %46 = load  i64, i64* %45 
  %"6$tmp$5#0" = sub   i64 %46, 1 
  %47 = trunc i64 32 to i32  
  %48 = tail call ccc  i8*  @wybe_malloc(i32  %47)  
  %49 = ptrtoint i8* %48 to i64 
  %50 = inttoptr i64 %49 to i8* 
  %51 = inttoptr i64 %"d#0" to i8* 
  %52 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %50, i8*  %51, i32  %52, i32  8, i1  0)  
  %53 = inttoptr i64 %49 to i64* 
  %54 = getelementptr  i64, i64* %53, i64 0 
  store  i64 %"6$tmp$5#0", i64* %54 
  %"6$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %49, i1  1)  
  %55 = insertvalue {i64, i1} undef, i64 %"6$d#2", 0 
  %56 = insertvalue {i64, i1} %55, i1 1, 1 
  ret {i64, i1} %56 
if.else2:
  %"7$tmp$18#0" = icmp eq i8 %"action#0", 101 
  br i1 %"7$tmp$18#0", label %if.then3, label %if.else3 
if.then3:
  %57 = inttoptr i64 %"d#0" to i64* 
  %58 = getelementptr  i64, i64* %57, i64 0 
  %59 = load  i64, i64* %58 
  %"8$tmp$7#0" = add   i64 %59, 1 
  %60 = trunc i64 32 to i32  
  %61 = tail call ccc  i8*  @wybe_malloc(i32  %60)  
  %62 = ptrtoint i8* %61 to i64 
  %63 = inttoptr i64 %62 to i8* 
  %64 = inttoptr i64 %"d#0" to i8* 
  %65 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %63, i8*  %64, i32  %65, i32  8, i1  0)  
  %66 = inttoptr i64 %62 to i64* 
  %67 = getelementptr  i64, i64* %66, i64 0 
  store  i64 %"8$tmp$7#0", i64* %67 
  %"8$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %62, i1  1)  
  %68 = insertvalue {i64, i1} undef, i64 %"8$d#2", 0 
  %69 = insertvalue {i64, i1} %68, i1 1, 1 
  ret {i64, i1} %69 
if.else3:
  %"9$tmp$17#0" = icmp eq i8 %"action#0", 117 
  br i1 %"9$tmp$17#0", label %if.then4, label %if.else4 
if.then4:
  %70 = add   i64 %"d#0", 16 
  %71 = inttoptr i64 %70 to i64* 
  %72 = getelementptr  i64, i64* %71, i64 0 
  %73 = load  i64, i64* %72 
  %"10$tmp$9#0" = add   i64 %73, 1 
  %74 = trunc i64 32 to i32  
  %75 = tail call ccc  i8*  @wybe_malloc(i32  %74)  
  %76 = ptrtoint i8* %75 to i64 
  %77 = inttoptr i64 %76 to i8* 
  %78 = inttoptr i64 %"d#0" to i8* 
  %79 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %77, i8*  %78, i32  %79, i32  8, i1  0)  
  %80 = add   i64 %76, 16 
  %81 = inttoptr i64 %80 to i64* 
  %82 = getelementptr  i64, i64* %81, i64 0 
  store  i64 %"10$tmp$9#0", i64* %82 
  %"10$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %76, i1  1)  
  %83 = insertvalue {i64, i1} undef, i64 %"10$d#2", 0 
  %84 = insertvalue {i64, i1} %83, i1 1, 1 
  ret {i64, i1} %84 
if.else4:
  %"11$tmp$16#0" = icmp eq i8 %"action#0", 100 
  br i1 %"11$tmp$16#0", label %if.then5, label %if.else5 
if.then5:
  %85 = add   i64 %"d#0", 16 
  %86 = inttoptr i64 %85 to i64* 
  %87 = getelementptr  i64, i64* %86, i64 0 
  %88 = load  i64, i64* %87 
  %"12$tmp$11#0" = sub   i64 %88, 1 
  %89 = trunc i64 32 to i32  
  %90 = tail call ccc  i8*  @wybe_malloc(i32  %89)  
  %91 = ptrtoint i8* %90 to i64 
  %92 = inttoptr i64 %91 to i8* 
  %93 = inttoptr i64 %"d#0" to i8* 
  %94 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %92, i8*  %93, i32  %94, i32  8, i1  0)  
  %95 = add   i64 %91, 16 
  %96 = inttoptr i64 %95 to i64* 
  %97 = getelementptr  i64, i64* %96, i64 0 
  store  i64 %"12$tmp$11#0", i64* %97 
  %"12$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %91, i1  1)  
  %98 = insertvalue {i64, i1} undef, i64 %"12$d#2", 0 
  %99 = insertvalue {i64, i1} %98, i1 1, 1 
  ret {i64, i1} %99 
if.else5:
  %"13$d#2" = tail call fastcc  i64  @"drone.gen$2<0>"(i64  %"d#0", i1  0)  
  %100 = insertvalue {i64, i1} undef, i64 %"13$d#2", 0 
  %101 = insertvalue {i64, i1} %100, i1 0, 1 
  ret {i64, i1} %101 
}


define external fastcc  {i64, i1} @"drone.do_action<0>[04d1467a4d]"(i64  %"d#0", i8  %"action#0")    {
entry:
  %"1$tmp$21#0" = icmp eq i8 %"action#0", 110 
  br i1 %"1$tmp$21#0", label %if.then, label %if.else 
if.then:
  %102 = add   i64 %"d#0", 8 
  %103 = inttoptr i64 %102 to i64* 
  %104 = getelementptr  i64, i64* %103, i64 0 
  %105 = load  i64, i64* %104 
  %"2$tmp$1#0" = sub   i64 %105, 1 
  %106 = add   i64 %"d#0", 8 
  %107 = inttoptr i64 %106 to i64* 
  %108 = getelementptr  i64, i64* %107, i64 0 
  store  i64 %"2$tmp$1#0", i64* %108 
  %"2$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %109 = insertvalue {i64, i1} undef, i64 %"2$d#2", 0 
  %110 = insertvalue {i64, i1} %109, i1 1, 1 
  ret {i64, i1} %110 
if.else:
  %"3$tmp$20#0" = icmp eq i8 %"action#0", 115 
  br i1 %"3$tmp$20#0", label %if.then1, label %if.else1 
if.then1:
  %111 = add   i64 %"d#0", 8 
  %112 = inttoptr i64 %111 to i64* 
  %113 = getelementptr  i64, i64* %112, i64 0 
  %114 = load  i64, i64* %113 
  %"4$tmp$3#0" = add   i64 %114, 1 
  %115 = add   i64 %"d#0", 8 
  %116 = inttoptr i64 %115 to i64* 
  %117 = getelementptr  i64, i64* %116, i64 0 
  store  i64 %"4$tmp$3#0", i64* %117 
  %"4$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %118 = insertvalue {i64, i1} undef, i64 %"4$d#2", 0 
  %119 = insertvalue {i64, i1} %118, i1 1, 1 
  ret {i64, i1} %119 
if.else1:
  %"5$tmp$19#0" = icmp eq i8 %"action#0", 119 
  br i1 %"5$tmp$19#0", label %if.then2, label %if.else2 
if.then2:
  %120 = inttoptr i64 %"d#0" to i64* 
  %121 = getelementptr  i64, i64* %120, i64 0 
  %122 = load  i64, i64* %121 
  %"6$tmp$5#0" = sub   i64 %122, 1 
  %123 = inttoptr i64 %"d#0" to i64* 
  %124 = getelementptr  i64, i64* %123, i64 0 
  store  i64 %"6$tmp$5#0", i64* %124 
  %"6$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %125 = insertvalue {i64, i1} undef, i64 %"6$d#2", 0 
  %126 = insertvalue {i64, i1} %125, i1 1, 1 
  ret {i64, i1} %126 
if.else2:
  %"7$tmp$18#0" = icmp eq i8 %"action#0", 101 
  br i1 %"7$tmp$18#0", label %if.then3, label %if.else3 
if.then3:
  %127 = inttoptr i64 %"d#0" to i64* 
  %128 = getelementptr  i64, i64* %127, i64 0 
  %129 = load  i64, i64* %128 
  %"8$tmp$7#0" = add   i64 %129, 1 
  %130 = inttoptr i64 %"d#0" to i64* 
  %131 = getelementptr  i64, i64* %130, i64 0 
  store  i64 %"8$tmp$7#0", i64* %131 
  %"8$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %132 = insertvalue {i64, i1} undef, i64 %"8$d#2", 0 
  %133 = insertvalue {i64, i1} %132, i1 1, 1 
  ret {i64, i1} %133 
if.else3:
  %"9$tmp$17#0" = icmp eq i8 %"action#0", 117 
  br i1 %"9$tmp$17#0", label %if.then4, label %if.else4 
if.then4:
  %134 = add   i64 %"d#0", 16 
  %135 = inttoptr i64 %134 to i64* 
  %136 = getelementptr  i64, i64* %135, i64 0 
  %137 = load  i64, i64* %136 
  %"10$tmp$9#0" = add   i64 %137, 1 
  %138 = add   i64 %"d#0", 16 
  %139 = inttoptr i64 %138 to i64* 
  %140 = getelementptr  i64, i64* %139, i64 0 
  store  i64 %"10$tmp$9#0", i64* %140 
  %"10$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %141 = insertvalue {i64, i1} undef, i64 %"10$d#2", 0 
  %142 = insertvalue {i64, i1} %141, i1 1, 1 
  ret {i64, i1} %142 
if.else4:
  %"11$tmp$16#0" = icmp eq i8 %"action#0", 100 
  br i1 %"11$tmp$16#0", label %if.then5, label %if.else5 
if.then5:
  %143 = add   i64 %"d#0", 16 
  %144 = inttoptr i64 %143 to i64* 
  %145 = getelementptr  i64, i64* %144, i64 0 
  %146 = load  i64, i64* %145 
  %"12$tmp$11#0" = sub   i64 %146, 1 
  %147 = add   i64 %"d#0", 16 
  %148 = inttoptr i64 %147 to i64* 
  %149 = getelementptr  i64, i64* %148, i64 0 
  store  i64 %"12$tmp$11#0", i64* %149 
  %"12$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  1)  
  %150 = insertvalue {i64, i1} undef, i64 %"12$d#2", 0 
  %151 = insertvalue {i64, i1} %150, i1 1, 1 
  ret {i64, i1} %151 
if.else5:
  %"13$d#2" = tail call fastcc  i64  @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  0)  
  %152 = insertvalue {i64, i1} undef, i64 %"13$d#2", 0 
  %153 = insertvalue {i64, i1} %152, i1 0, 1 
  ret {i64, i1} %153 
}


define external fastcc  i64 @"drone.drone_init<0>"()    {
entry:
  %154 = trunc i64 32 to i32  
  %155 = tail call ccc  i8*  @wybe_malloc(i32  %154)  
  %156 = ptrtoint i8* %155 to i64 
  %157 = inttoptr i64 %156 to i64* 
  %158 = getelementptr  i64, i64* %157, i64 0 
  store  i64 0, i64* %158 
  %159 = add   i64 %156, 8 
  %160 = inttoptr i64 %159 to i64* 
  %161 = getelementptr  i64, i64* %160, i64 0 
  store  i64 0, i64* %161 
  %162 = add   i64 %156, 16 
  %163 = inttoptr i64 %162 to i64* 
  %164 = getelementptr  i64, i64* %163, i64 0 
  store  i64 0, i64* %164 
  %165 = add   i64 %156, 24 
  %166 = inttoptr i64 %165 to i64* 
  %167 = getelementptr  i64, i64* %166, i64 0 
  store  i64 0, i64* %167 
  ret i64 %156 
}


define external fastcc  void @"drone.gen$1<0>"(i64  %"argc#0", i64  %"argv#0", i64  %"exit_code#0")    {
entry:
  %"1$mc#0" = tail call ccc  i64  @malloc_count()  
  %169 = ptrtoint i8* getelementptr inbounds ([18 x i8], [18 x i8]* @drone.168, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %169)  
  tail call ccc  void  @print_int(i64  %"1$mc#0")  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}


define external fastcc  i64 @"drone.gen$2<0>"(i64  %"d#0", i1  %"success#0")    {
entry:
  br i1 %"success#0", label %if.then, label %if.else 
if.then:
  %170 = add   i64 %"d#0", 24 
  %171 = inttoptr i64 %170 to i64* 
  %172 = getelementptr  i64, i64* %171, i64 0 
  %173 = load  i64, i64* %172 
  %"2$tmp$14#0" = add   i64 %173, 1 
  %174 = trunc i64 32 to i32  
  %175 = tail call ccc  i8*  @wybe_malloc(i32  %174)  
  %176 = ptrtoint i8* %175 to i64 
  %177 = inttoptr i64 %176 to i8* 
  %178 = inttoptr i64 %"d#0" to i8* 
  %179 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %177, i8*  %178, i32  %179, i32  8, i1  0)  
  %180 = add   i64 %176, 24 
  %181 = inttoptr i64 %180 to i64* 
  %182 = getelementptr  i64, i64* %181, i64 0 
  store  i64 %"2$tmp$14#0", i64* %182 
  ret i64 %176 
if.else:
  ret i64 %"d#0" 
}


define external fastcc  i64 @"drone.gen$2<0>[145401e434]"(i64  %"d#0", i1  %"success#0")    {
entry:
  br i1 %"success#0", label %if.then, label %if.else 
if.then:
  %183 = add   i64 %"d#0", 24 
  %184 = inttoptr i64 %183 to i64* 
  %185 = getelementptr  i64, i64* %184, i64 0 
  %186 = load  i64, i64* %185 
  %"2$tmp$14#0" = add   i64 %186, 1 
  %187 = add   i64 %"d#0", 24 
  %188 = inttoptr i64 %187 to i64* 
  %189 = getelementptr  i64, i64* %188, i64 0 
  store  i64 %"2$tmp$14#0", i64* %189 
  ret i64 %"d#0" 
if.else:
  ret i64 %"d#0" 
}


define external fastcc  void @"drone.gen$3<0>"(i64  %"d#0")    {
entry:
  %"1$ch#1" = tail call ccc  i8  @read_char()  
  %190 = alloca i64 
  store  i64 -1, i64* %190 
  %191 = load  i64, i64* %190 
  %192 = trunc i64 %191 to i8  
  %"1$tmp$2#0" = icmp ne i8 %"1$ch#1", %192 
  br i1 %"1$tmp$2#0", label %if.then, label %if.else 
if.then:
  tail call fastcc  void  @"drone.loop<0>"(i64  %"d#0", i8  %"1$ch#1")  
  ret void 
if.else:
  ret void 
}


define external fastcc  void @"drone.gen$3<0>[145401e434]"(i64  %"d#0")    {
entry:
  %"1$ch#1" = tail call ccc  i8  @read_char()  
  %193 = alloca i64 
  store  i64 -1, i64* %193 
  %194 = load  i64, i64* %193 
  %195 = trunc i64 %194 to i8  
  %"1$tmp$2#0" = icmp ne i8 %"1$ch#1", %195 
  br i1 %"1$tmp$2#0", label %if.then, label %if.else 
if.then:
  tail call fastcc  void  @"drone.loop<0>[04d1467a4d]"(i64  %"d#0", i8  %"1$ch#1")  
  ret void 
if.else:
  ret void 
}


define external fastcc  void @"drone.loop<0>"(i64  %"d#0", i8  %"ch#0")    {
entry:
  %"1$tmp$5#0" = icmp ne i8 %"ch#0", 32 
  br i1 %"1$tmp$5#0", label %if.then, label %if.else 
if.then:
  %"2$tmp$6#0" = icmp ne i8 %"ch#0", 10 
  br i1 %"2$tmp$6#0", label %if.then1, label %if.else1 
if.else:
  tail call fastcc  void  @"drone.gen$3<0>"(i64  %"d#0")  
  ret void 
if.then1:
  %"4$tmp$4#0" = icmp eq i8 %"ch#0", 112 
  br i1 %"4$tmp$4#0", label %if.then2, label %if.else2 
if.else1:
  tail call fastcc  void  @"drone.gen$3<0>"(i64  %"d#0")  
  ret void 
if.then2:
  %197 = ptrtoint i8* getelementptr inbounds ([2 x i8], [2 x i8]* @drone.196, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %197)  
  %198 = inttoptr i64 %"d#0" to i64* 
  %199 = getelementptr  i64, i64* %198, i64 0 
  %200 = load  i64, i64* %199 
  tail call ccc  void  @print_int(i64  %200)  
  %202 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.201, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %202)  
  %203 = add   i64 %"d#0", 8 
  %204 = inttoptr i64 %203 to i64* 
  %205 = getelementptr  i64, i64* %204, i64 0 
  %206 = load  i64, i64* %205 
  tail call ccc  void  @print_int(i64  %206)  
  %208 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.207, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %208)  
  %209 = add   i64 %"d#0", 16 
  %210 = inttoptr i64 %209 to i64* 
  %211 = getelementptr  i64, i64* %210, i64 0 
  %212 = load  i64, i64* %211 
  tail call ccc  void  @print_int(i64  %212)  
  %214 = ptrtoint i8* getelementptr inbounds ([4 x i8], [4 x i8]* @drone.213, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %214)  
  %215 = add   i64 %"d#0", 24 
  %216 = inttoptr i64 %215 to i64* 
  %217 = getelementptr  i64, i64* %216, i64 0 
  %218 = load  i64, i64* %217 
  tail call ccc  void  @print_int(i64  %218)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"drone.gen$3<0>"(i64  %"d#0")  
  ret void 
if.else2:
  %219 = tail call fastcc  {i64, i1}  @"drone.do_action<0>"(i64  %"d#0", i8  %"ch#0")  
  %220 = extractvalue {i64, i1} %219, 0 
  %221 = extractvalue {i64, i1} %219, 1 
  %"7$tmp$3#0" = icmp eq i1 %221, 0 
  br i1 %"7$tmp$3#0", label %if.then3, label %if.else3 
if.then3:
  %223 = ptrtoint i8* getelementptr inbounds ([16 x i8], [16 x i8]* @drone.222, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %223)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"drone.gen$3<0>"(i64  %220)  
  ret void 
if.else3:
  tail call fastcc  void  @"drone.gen$3<0>"(i64  %220)  
  ret void 
}


define external fastcc  void @"drone.loop<0>[04d1467a4d]"(i64  %"d#0", i8  %"ch#0")    {
entry:
  %"1$tmp$5#0" = icmp ne i8 %"ch#0", 32 
  br i1 %"1$tmp$5#0", label %if.then, label %if.else 
if.then:
  %"2$tmp$6#0" = icmp ne i8 %"ch#0", 10 
  br i1 %"2$tmp$6#0", label %if.then1, label %if.else1 
if.else:
  tail call fastcc  void  @"drone.gen$3<0>[145401e434]"(i64  %"d#0")  
  ret void 
if.then1:
  %"4$tmp$4#0" = icmp eq i8 %"ch#0", 112 
  br i1 %"4$tmp$4#0", label %if.then2, label %if.else2 
if.else1:
  tail call fastcc  void  @"drone.gen$3<0>[145401e434]"(i64  %"d#0")  
  ret void 
if.then2:
  %225 = ptrtoint i8* getelementptr inbounds ([2 x i8], [2 x i8]* @drone.224, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %225)  
  %226 = inttoptr i64 %"d#0" to i64* 
  %227 = getelementptr  i64, i64* %226, i64 0 
  %228 = load  i64, i64* %227 
  tail call ccc  void  @print_int(i64  %228)  
  %230 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.229, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %230)  
  %231 = add   i64 %"d#0", 8 
  %232 = inttoptr i64 %231 to i64* 
  %233 = getelementptr  i64, i64* %232, i64 0 
  %234 = load  i64, i64* %233 
  tail call ccc  void  @print_int(i64  %234)  
  %236 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.235, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %236)  
  %237 = add   i64 %"d#0", 16 
  %238 = inttoptr i64 %237 to i64* 
  %239 = getelementptr  i64, i64* %238, i64 0 
  %240 = load  i64, i64* %239 
  tail call ccc  void  @print_int(i64  %240)  
  %242 = ptrtoint i8* getelementptr inbounds ([4 x i8], [4 x i8]* @drone.241, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %242)  
  %243 = add   i64 %"d#0", 24 
  %244 = inttoptr i64 %243 to i64* 
  %245 = getelementptr  i64, i64* %244, i64 0 
  %246 = load  i64, i64* %245 
  tail call ccc  void  @print_int(i64  %246)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"drone.gen$3<0>[145401e434]"(i64  %"d#0")  
  ret void 
if.else2:
  %247 = tail call fastcc  {i64, i1}  @"drone.do_action<0>[04d1467a4d]"(i64  %"d#0", i8  %"ch#0")  
  %248 = extractvalue {i64, i1} %247, 0 
  %249 = extractvalue {i64, i1} %247, 1 
  %"7$tmp$3#0" = icmp eq i1 %249, 0 
  br i1 %"7$tmp$3#0", label %if.then3, label %if.else3 
if.then3:
  %251 = ptrtoint i8* getelementptr inbounds ([16 x i8], [16 x i8]* @drone.250, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %251)  
  tail call ccc  void  @putchar(i8  10)  
  tail call fastcc  void  @"drone.gen$3<0>[145401e434]"(i64  %248)  
  ret void 
if.else3:
  tail call fastcc  void  @"drone.gen$3<0>[145401e434]"(i64  %248)  
  ret void 
}


define external fastcc  void @"drone.print_info<0>"(i64  %"d#0")    {
entry:
  %253 = ptrtoint i8* getelementptr inbounds ([2 x i8], [2 x i8]* @drone.252, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %253)  
  %254 = inttoptr i64 %"d#0" to i64* 
  %255 = getelementptr  i64, i64* %254, i64 0 
  %256 = load  i64, i64* %255 
  tail call ccc  void  @print_int(i64  %256)  
  %258 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.257, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %258)  
  %259 = add   i64 %"d#0", 8 
  %260 = inttoptr i64 %259 to i64* 
  %261 = getelementptr  i64, i64* %260, i64 0 
  %262 = load  i64, i64* %261 
  tail call ccc  void  @print_int(i64  %262)  
  %264 = ptrtoint i8* getelementptr inbounds ([3 x i8], [3 x i8]* @drone.263, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %264)  
  %265 = add   i64 %"d#0", 16 
  %266 = inttoptr i64 %265 to i64* 
  %267 = getelementptr  i64, i64* %266, i64 0 
  %268 = load  i64, i64* %267 
  tail call ccc  void  @print_int(i64  %268)  
  %270 = ptrtoint i8* getelementptr inbounds ([4 x i8], [4 x i8]* @drone.269, i32 0, i32 0) to i64 
  tail call ccc  void  @print_string(i64  %270)  
  %271 = add   i64 %"d#0", 24 
  %272 = inttoptr i64 %271 to i64* 
  %273 = getelementptr  i64, i64* %272, i64 0 
  %274 = load  i64, i64* %273 
  tail call ccc  void  @print_int(i64  %274)  
  tail call ccc  void  @putchar(i8  10)  
  ret void 
}
--------------------------------------------------
 Module drone.drone_info
  public submods  : 
  public types    : 
  public resources: 
  public procs    : drone.drone_info./=<0>
                    drone.drone_info.=<0>
                    drone.drone_info.count<0>
                    drone.drone_info.count<1>
                    drone.drone_info.drone_info<0>
                    drone.drone_info.drone_info<1>
                    drone.drone_info.x<0>
                    drone.drone_info.x<1>
                    drone.drone_info.y<0>
                    drone.drone_info.y<1>
                    drone.drone_info.z<0>
                    drone.drone_info.z<1>
  imports         : use drone
                    use wybe
  types           : 
  resources       : 
  procs           : 

/= > public {inline} (0 calls)
0: /=($left#0:drone.drone_info, $right#0:drone.drone_info, ?$$#0:wybe.bool):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($left#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$3#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$4#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$5#0:wybe.int)
    foreign lpvm access(~$left#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$6#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$7#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$8#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$9#0:wybe.int)
    foreign lpvm access(~$right#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?tmp$10#0:wybe.int)
    foreign llvm icmp_eq(~tmp$3#0:wybe.int, ~tmp$7#0:wybe.int, ?tmp$11#0:wybe.bool) @wybe:36:36
    case ~tmp$11#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
        foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign llvm icmp_eq(~tmp$4#0:wybe.int, ~tmp$8#0:wybe.int, ?tmp$12#0:wybe.bool) @wybe:36:36
        case ~tmp$12#0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
            foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

        1:
            foreign llvm icmp_eq(~tmp$5#0:wybe.int, ~tmp$9#0:wybe.int, ?tmp$13#0:wybe.bool) @wybe:36:36
            case ~tmp$13#0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?tmp$0#0:wybe.bool)
                foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)

            1:
                foreign llvm icmp_eq(~tmp$10#0:wybe.int, ~tmp$6#0:wybe.int, ?tmp$0#0:wybe.bool) @wybe:36:36
                foreign llvm xor(~tmp$0#0:wybe.bool, 1:wybe.bool, ?$$#0:wybe.bool)





= > public {inline} (1 calls)
0: =($left#0:drone.drone_info, $right#0:drone.drone_info, ?$$#0:wybe.bool):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($left#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$x#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$y#0:wybe.int)
    foreign lpvm access($left#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$z#0:wybe.int)
    foreign lpvm access(~$left#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$left$count#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$x#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$y#0:wybe.int)
    foreign lpvm access($right#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$z#0:wybe.int)
    foreign lpvm access(~$right#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$right$count#0:wybe.int)
    foreign llvm icmp_eq(~$left$x#0:wybe.int, ~$right$x#0:wybe.int, ?tmp$1#0:wybe.bool) @wybe:36:36
    case ~tmp$1#0:wybe.bool of
    0:
        foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

    1:
        foreign llvm icmp_eq(~$left$y#0:wybe.int, ~$right$y#0:wybe.int, ?tmp$2#0:wybe.bool) @wybe:36:36
        case ~tmp$2#0:wybe.bool of
        0:
            foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

        1:
            foreign llvm icmp_eq(~$left$z#0:wybe.int, ~$right$z#0:wybe.int, ?tmp$3#0:wybe.bool) @wybe:36:36
            case ~tmp$3#0:wybe.bool of
            0:
                foreign llvm move(0:wybe.bool, ?$$#0:wybe.bool)

            1:
                foreign llvm icmp_eq(~$left$count#0:wybe.int, ~$right$count#0:wybe.int, ?$$#0:wybe.bool) @wybe:36:36





count > public {inline} (0 calls)
0: count($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
count > public {inline} (0 calls)
1: count($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 24:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


drone_info > public {inline} (0 calls)
0: drone_info(x#0:wybe.int, y#0:wybe.int, z#0:wybe.int, count#0:wybe.int, ?$#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm alloc(32:wybe.int, ?$rec#0:!drone.drone_info)
    foreign lpvm mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 0:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~x#0:wybe.int)
    foreign lpvm mutate(~%$rec#1:drone.drone_info, ?%$rec#2:drone.drone_info, 8:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~y#0:wybe.int)
    foreign lpvm mutate(~%$rec#2:drone.drone_info, ?%$rec#3:drone.drone_info, 16:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~z#0:wybe.int)
    foreign lpvm mutate(~%$rec#3:drone.drone_info, ?%$#0:drone.drone_info, 24:wybe.int, 1:wybe.int, 32:wybe.int, 0:wybe.int, ~count#0:wybe.int)
drone_info > public {inline} (14 calls)
1: drone_info(?x#0:wybe.int, ?y#0:wybe.int, ?z#0:wybe.int, ?count#0:wybe.int, $#0:drone.drone_info):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access($#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?x#0:wybe.int)
    foreign lpvm access($#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?y#0:wybe.int)
    foreign lpvm access($#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?z#0:wybe.int)
    foreign lpvm access(~$#0:drone.drone_info, 24:wybe.int, 32:wybe.int, 0:wybe.int, ?count#0:wybe.int)


x > public {inline} (0 calls)
0: x($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 0:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
x > public {inline} (0 calls)
1: x($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 0:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


y > public {inline} (0 calls)
0: y($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 8:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
y > public {inline} (0 calls)
1: y($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 8:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)


z > public {inline} (0 calls)
0: z($rec#0:drone.drone_info, ?$#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm access(~$rec#0:drone.drone_info, 16:wybe.int, 32:wybe.int, 0:wybe.int, ?$#0:wybe.int)
z > public {inline} (0 calls)
1: z($rec#0:drone.drone_info, ?$rec#1:drone.drone_info, $field#0:wybe.int):
 AliasPairs: []
 InterestingCallProperties: []
    foreign lpvm {noalias} mutate(~%$rec#0:drone.drone_info, ?%$rec#1:drone.drone_info, 16:wybe.int, 0:wybe.int, 32:wybe.int, 0:wybe.int, ~$field#0:wybe.int)

  LLVM code       :

; ModuleID = 'drone.drone_info'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i32, i1)    


define external fastcc  i1 @"drone.drone_info./=<0>"(i64  %"$left#0", i64  %"$right#0")    {
entry:
  %1 = inttoptr i64 %"$left#0" to i64* 
  %2 = getelementptr  i64, i64* %1, i64 0 
  %3 = load  i64, i64* %2 
  %4 = add   i64 %"$left#0", 8 
  %5 = inttoptr i64 %4 to i64* 
  %6 = getelementptr  i64, i64* %5, i64 0 
  %7 = load  i64, i64* %6 
  %8 = add   i64 %"$left#0", 16 
  %9 = inttoptr i64 %8 to i64* 
  %10 = getelementptr  i64, i64* %9, i64 0 
  %11 = load  i64, i64* %10 
  %12 = add   i64 %"$left#0", 24 
  %13 = inttoptr i64 %12 to i64* 
  %14 = getelementptr  i64, i64* %13, i64 0 
  %15 = load  i64, i64* %14 
  %16 = inttoptr i64 %"$right#0" to i64* 
  %17 = getelementptr  i64, i64* %16, i64 0 
  %18 = load  i64, i64* %17 
  %19 = add   i64 %"$right#0", 8 
  %20 = inttoptr i64 %19 to i64* 
  %21 = getelementptr  i64, i64* %20, i64 0 
  %22 = load  i64, i64* %21 
  %23 = add   i64 %"$right#0", 16 
  %24 = inttoptr i64 %23 to i64* 
  %25 = getelementptr  i64, i64* %24, i64 0 
  %26 = load  i64, i64* %25 
  %27 = add   i64 %"$right#0", 24 
  %28 = inttoptr i64 %27 to i64* 
  %29 = getelementptr  i64, i64* %28, i64 0 
  %30 = load  i64, i64* %29 
  %"1$tmp$11#0" = icmp eq i64 %3, %18 
  br i1 %"1$tmp$11#0", label %if.then, label %if.else 
if.then:
  %"2$tmp$12#0" = icmp eq i64 %7, %22 
  br i1 %"2$tmp$12#0", label %if.then1, label %if.else1 
if.else:
  %"3$$$#0" = xor i1 0, 1 
  ret i1 %"3$$$#0" 
if.then1:
  %"4$tmp$13#0" = icmp eq i64 %11, %26 
  br i1 %"4$tmp$13#0", label %if.then2, label %if.else2 
if.else1:
  %"5$$$#0" = xor i1 0, 1 
  ret i1 %"5$$$#0" 
if.then2:
  %"6$tmp$0#0" = icmp eq i64 %30, %15 
  %"6$$$#0" = xor i1 %"6$tmp$0#0", 1 
  ret i1 %"6$$$#0" 
if.else2:
  %"7$$$#0" = xor i1 0, 1 
  ret i1 %"7$$$#0" 
}


define external fastcc  i1 @"drone.drone_info.=<0>"(i64  %"$left#0", i64  %"$right#0")    {
entry:
  %31 = inttoptr i64 %"$left#0" to i64* 
  %32 = getelementptr  i64, i64* %31, i64 0 
  %33 = load  i64, i64* %32 
  %34 = add   i64 %"$left#0", 8 
  %35 = inttoptr i64 %34 to i64* 
  %36 = getelementptr  i64, i64* %35, i64 0 
  %37 = load  i64, i64* %36 
  %38 = add   i64 %"$left#0", 16 
  %39 = inttoptr i64 %38 to i64* 
  %40 = getelementptr  i64, i64* %39, i64 0 
  %41 = load  i64, i64* %40 
  %42 = add   i64 %"$left#0", 24 
  %43 = inttoptr i64 %42 to i64* 
  %44 = getelementptr  i64, i64* %43, i64 0 
  %45 = load  i64, i64* %44 
  %46 = inttoptr i64 %"$right#0" to i64* 
  %47 = getelementptr  i64, i64* %46, i64 0 
  %48 = load  i64, i64* %47 
  %49 = add   i64 %"$right#0", 8 
  %50 = inttoptr i64 %49 to i64* 
  %51 = getelementptr  i64, i64* %50, i64 0 
  %52 = load  i64, i64* %51 
  %53 = add   i64 %"$right#0", 16 
  %54 = inttoptr i64 %53 to i64* 
  %55 = getelementptr  i64, i64* %54, i64 0 
  %56 = load  i64, i64* %55 
  %57 = add   i64 %"$right#0", 24 
  %58 = inttoptr i64 %57 to i64* 
  %59 = getelementptr  i64, i64* %58, i64 0 
  %60 = load  i64, i64* %59 
  %"1$tmp$1#0" = icmp eq i64 %33, %48 
  br i1 %"1$tmp$1#0", label %if.then, label %if.else 
if.then:
  %"2$tmp$2#0" = icmp eq i64 %37, %52 
  br i1 %"2$tmp$2#0", label %if.then1, label %if.else1 
if.else:
  ret i1 0 
if.then1:
  %"4$tmp$3#0" = icmp eq i64 %41, %56 
  br i1 %"4$tmp$3#0", label %if.then2, label %if.else2 
if.else1:
  ret i1 0 
if.then2:
  %"6$$$#0" = icmp eq i64 %45, %60 
  ret i1 %"6$$$#0" 
if.else2:
  ret i1 0 
}


define external fastcc  i64 @"drone.drone_info.count<0>"(i64  %"$rec#0")    {
entry:
  %61 = add   i64 %"$rec#0", 24 
  %62 = inttoptr i64 %61 to i64* 
  %63 = getelementptr  i64, i64* %62, i64 0 
  %64 = load  i64, i64* %63 
  ret i64 %64 
}


define external fastcc  i64 @"drone.drone_info.count<1>"(i64  %"$rec#0", i64  %"$field#0")    {
entry:
  %65 = trunc i64 32 to i32  
  %66 = tail call ccc  i8*  @wybe_malloc(i32  %65)  
  %67 = ptrtoint i8* %66 to i64 
  %68 = inttoptr i64 %67 to i8* 
  %69 = inttoptr i64 %"$rec#0" to i8* 
  %70 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %68, i8*  %69, i32  %70, i32  8, i1  0)  
  %71 = add   i64 %67, 24 
  %72 = inttoptr i64 %71 to i64* 
  %73 = getelementptr  i64, i64* %72, i64 0 
  store  i64 %"$field#0", i64* %73 
  ret i64 %67 
}


define external fastcc  i64 @"drone.drone_info.drone_info<0>"(i64  %"x#0", i64  %"y#0", i64  %"z#0", i64  %"count#0")    {
entry:
  %74 = trunc i64 32 to i32  
  %75 = tail call ccc  i8*  @wybe_malloc(i32  %74)  
  %76 = ptrtoint i8* %75 to i64 
  %77 = inttoptr i64 %76 to i64* 
  %78 = getelementptr  i64, i64* %77, i64 0 
  store  i64 %"x#0", i64* %78 
  %79 = add   i64 %76, 8 
  %80 = inttoptr i64 %79 to i64* 
  %81 = getelementptr  i64, i64* %80, i64 0 
  store  i64 %"y#0", i64* %81 
  %82 = add   i64 %76, 16 
  %83 = inttoptr i64 %82 to i64* 
  %84 = getelementptr  i64, i64* %83, i64 0 
  store  i64 %"z#0", i64* %84 
  %85 = add   i64 %76, 24 
  %86 = inttoptr i64 %85 to i64* 
  %87 = getelementptr  i64, i64* %86, i64 0 
  store  i64 %"count#0", i64* %87 
  ret i64 %76 
}


define external fastcc  {i64, i64, i64, i64} @"drone.drone_info.drone_info<1>"(i64  %"$#0")    {
entry:
  %88 = inttoptr i64 %"$#0" to i64* 
  %89 = getelementptr  i64, i64* %88, i64 0 
  %90 = load  i64, i64* %89 
  %91 = add   i64 %"$#0", 8 
  %92 = inttoptr i64 %91 to i64* 
  %93 = getelementptr  i64, i64* %92, i64 0 
  %94 = load  i64, i64* %93 
  %95 = add   i64 %"$#0", 16 
  %96 = inttoptr i64 %95 to i64* 
  %97 = getelementptr  i64, i64* %96, i64 0 
  %98 = load  i64, i64* %97 
  %99 = add   i64 %"$#0", 24 
  %100 = inttoptr i64 %99 to i64* 
  %101 = getelementptr  i64, i64* %100, i64 0 
  %102 = load  i64, i64* %101 
  %103 = insertvalue {i64, i64, i64, i64} undef, i64 %90, 0 
  %104 = insertvalue {i64, i64, i64, i64} %103, i64 %94, 1 
  %105 = insertvalue {i64, i64, i64, i64} %104, i64 %98, 2 
  %106 = insertvalue {i64, i64, i64, i64} %105, i64 %102, 3 
  ret {i64, i64, i64, i64} %106 
}


define external fastcc  i64 @"drone.drone_info.x<0>"(i64  %"$rec#0")    {
entry:
  %107 = inttoptr i64 %"$rec#0" to i64* 
  %108 = getelementptr  i64, i64* %107, i64 0 
  %109 = load  i64, i64* %108 
  ret i64 %109 
}


define external fastcc  i64 @"drone.drone_info.x<1>"(i64  %"$rec#0", i64  %"$field#0")    {
entry:
  %110 = trunc i64 32 to i32  
  %111 = tail call ccc  i8*  @wybe_malloc(i32  %110)  
  %112 = ptrtoint i8* %111 to i64 
  %113 = inttoptr i64 %112 to i8* 
  %114 = inttoptr i64 %"$rec#0" to i8* 
  %115 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %113, i8*  %114, i32  %115, i32  8, i1  0)  
  %116 = inttoptr i64 %112 to i64* 
  %117 = getelementptr  i64, i64* %116, i64 0 
  store  i64 %"$field#0", i64* %117 
  ret i64 %112 
}


define external fastcc  i64 @"drone.drone_info.y<0>"(i64  %"$rec#0")    {
entry:
  %118 = add   i64 %"$rec#0", 8 
  %119 = inttoptr i64 %118 to i64* 
  %120 = getelementptr  i64, i64* %119, i64 0 
  %121 = load  i64, i64* %120 
  ret i64 %121 
}


define external fastcc  i64 @"drone.drone_info.y<1>"(i64  %"$rec#0", i64  %"$field#0")    {
entry:
  %122 = trunc i64 32 to i32  
  %123 = tail call ccc  i8*  @wybe_malloc(i32  %122)  
  %124 = ptrtoint i8* %123 to i64 
  %125 = inttoptr i64 %124 to i8* 
  %126 = inttoptr i64 %"$rec#0" to i8* 
  %127 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %125, i8*  %126, i32  %127, i32  8, i1  0)  
  %128 = add   i64 %124, 8 
  %129 = inttoptr i64 %128 to i64* 
  %130 = getelementptr  i64, i64* %129, i64 0 
  store  i64 %"$field#0", i64* %130 
  ret i64 %124 
}


define external fastcc  i64 @"drone.drone_info.z<0>"(i64  %"$rec#0")    {
entry:
  %131 = add   i64 %"$rec#0", 16 
  %132 = inttoptr i64 %131 to i64* 
  %133 = getelementptr  i64, i64* %132, i64 0 
  %134 = load  i64, i64* %133 
  ret i64 %134 
}


define external fastcc  i64 @"drone.drone_info.z<1>"(i64  %"$rec#0", i64  %"$field#0")    {
entry:
  %135 = trunc i64 32 to i32  
  %136 = tail call ccc  i8*  @wybe_malloc(i32  %135)  
  %137 = ptrtoint i8* %136 to i64 
  %138 = inttoptr i64 %137 to i8* 
  %139 = inttoptr i64 %"$rec#0" to i8* 
  %140 = trunc i64 32 to i32  
  tail call ccc  void  @llvm.memcpy.p0i8.p0i8.i32(i8*  %138, i8*  %139, i32  %140, i32  8, i1  0)  
  %141 = add   i64 %137, 16 
  %142 = inttoptr i64 %141 to i64* 
  %143 = getelementptr  i64, i64* %142, i64 0 
  store  i64 %"$field#0", i64* %143 
  ret i64 %137 
}

----------------------------------------------------------------------


