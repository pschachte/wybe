======================================================================
AFTER EVERYTHING:
 Module save_restore_cond
  representation  : (not a type)
  public submods  : 
  public resources: 
  public procs    : save_restore_cond.<0>
  imports         : use wybe
  resources       : 
  procs           : 

module top-level code > public {semipure} (0 calls)
0: save_restore_cond.<0>
()<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    save_restore_cond.suc<0>(?tmp#0##0:wybe.bool) #0 @save_restore_cond:nn:nn
    case ~tmp#0##0:wybe.bool of
    0:

    1:



proc suc > {noinline} (3 calls)
0: save_restore_cond.suc<0>
suc(?#success##0:wybe.bool)<{}; {}; {}>:
  AliasPairs: []
  InterestingCallProperties: []
    foreign llvm move(1:wybe.bool, ?#success##0:wybe.bool)

  LLVM code       :

; ModuleID = 'save_restore_cond'


 


declare external ccc  i8* @wybe_malloc(i32)    


declare external ccc  void @llvm.memcpy.p0i8.p0i8.i32(i8*, i8*, i32, i1)    


define external fastcc  void @"save_restore_cond.<0>"()    {
entry:
  %0 = tail call fastcc  i1  @"save_restore_cond.suc<0>"()  
  br i1 %0, label %if.then, label %if.else 
if.then:
  ret void 
if.else:
  ret void 
}


define external fastcc  i1 @"save_restore_cond.suc<0>"() noinline   {
entry:
  ret i1 1 
}
