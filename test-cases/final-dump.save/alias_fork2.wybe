# Recursive data type:
# alias generated by different prims and combined because of transitivity
# property

use mytree

# put tl as result's left tree node
pub def simpleMerge(tl:tree):tree = node(tl, 200, empty)

?t1 = node(empty, 1, empty)
?t = simpleMerge(t1)
!println("expect t -  1 200:")
!printTree(t)
!println("")

if { t1 = node(?l, ?k, ?r) :: ?t1 = node(l, 1000, r) }

!println("expect t1 - 1000:")
!printTree(t1)
!println("")
!println("expect t1 - 1 200:")
!printTree(t)
!println("")
