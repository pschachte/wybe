# test case for special `_` type

pub constructors nil | cons(head:int, tail:_)

pub def concat(x:_, y:_):_ =
    if {x = cons(?h, ?t)::
        cons(h,concat(t,y))
    |else::
        y
    }

pub def length(x:_):int =
    if {x = cons(?h, ?t):: 1 + length(t) | else:: 0 }


?x = cons(1,cons(2,cons(3,nil)))
?y = cons(100, cons(200,nil))
!println(length(concat(x,y)))
