# shouldn't alias to the data structure if all
# properties of a data structure are mutated in the def {

use position

pub def replicate1(p1:position, ?p2:position) use !io {
  !println("--- Inside replicate1: ")
  ?p2 = p1
  !print("expect p1(1,1):")
  !printPosition(p1)
  x(!p2, 2) # Nondestructive
  y(!p2, 2) # Destructive
  !print("expect p1(1,1):")
  !printPosition(p1)
  !print("expect p2(2,2):")
  !printPosition(p2)
}

pub def bar use !io {
  ?p1 = position(1,1)
  !replicate1(p1, ?p2)

  !println("--- After calling replicate1: ")
  !print("expect p1(1,1):")
  !printPosition(p1)
  !print("expect p2(2,2):")
  !printPosition(p2)

  x(!p1, 555)

  !println("--- After calling x(!p1, 555): ")
  !print("expect p1(555,1):")
  !printPosition(p1)
  !print("expect p2(2,2):")
  !printPosition(p2)
}

!bar
