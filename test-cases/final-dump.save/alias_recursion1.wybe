# passing data structures in recursive call

use position

pub def if_test(a:position, b:position, ?r:position) {
    if { a^x > 0 ::
            ?tmp = b
            ?b = a
            ?a = tmp
            if_test(a, b, ?r)
       | else      ::
            ?r = a
    }
}

?pa = position(100, 101)
?pb = position(-200, -201)
!println("--- before proc call: ")
!print("expect pa(100,101):")
!printPosition(pa)
!print("expect pb(-200,-201):")
!printPosition(pb)

if_test(pa, pb, ?r)

!println("--- after calling if_test, pa and pb should be the same: ")
!print("expect pa(100,101):")
!printPosition(pa)
!print("expect pb(-200,-201):")
!printPosition(pb)

!println("--- expected result to be same as pb: ")
!print("expect r(-200,-201):")
!printPosition(r)

!println("--- modify pa^x: ")
x(!pa, -1000)
!print("expect pa(-1000,101):")
!printPosition(pa)

!print("expect r still (-200,-201):")
!printPosition(r)
